{
    "errors": [],
    "repos": [
        {
            "repo_name": "tut-spring-boot-kotlin",
            "org_name": "spring-guides",
            "commits": [
                {
                    "message": "",
                    "sha": "6bf4f5e34d7fed318eb0edcc8afb9f177c5448b9",
                    "link": "https://github.com/spring-guides/tut-spring-boot-kotlin/commit/6bf4f5e34d7fed318eb0edcc8afb9f177c5448b9",
                    "files": [
                        {
                            "name": "src/main/kotlin/blog/MarkdownConverter.kt",
                            "content": {
                                "current": "package blog\n\nimport org.commonmark.ext.autolink.AutolinkExtension\nimport org.commonmark.parser.Parser\nimport org.commonmark.renderer.html.HtmlRenderer\n\nimport org.springframework.stereotype.Service\n\n@Service\nclass MarkdownConverter : (String?) -> String {\n\n\tprivate val parser = Parser.builder().extensions(listOf(AutolinkExtension.create())).build()\n\tprivate val renderer = HtmlRenderer.builder().build()\n\n\toverride fun invoke(input: String?): String {\n\t\tif (input == null || input == \"\") {\n\t\t\treturn \"\"\n\t\t}\n\t\treturn renderer.render(parser.parse(input))\n\t}\n}\n",
                                "diffs": [
                                    [
                                        "-/*",
                                        "- * Copyright 2002-2017 the original author or authors.",
                                        "- *",
                                        "- * Licensed under the Apache License, Version 2.0 (the \"License\");",
                                        "- * you may not use this file except in compliance with the License.",
                                        "- * You may obtain a copy of the License at",
                                        "- *",
                                        "- *      http://www.apache.org/licenses/LICENSE-2.0",
                                        "- *",
                                        "- * Unless required by applicable law or agreed to in writing, software",
                                        "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                                        "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                                        "- * See the License for the specific language governing permissions and",
                                        "- * limitations under the License.",
                                        "- */",
                                        " package blog",
                                        " ",
                                        " import org.commonmark.ext.autolink.AutolinkExtension",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "e0990f9d1f7a2881ba154512662536d04a738fa4",
                    "link": "https://github.com/spring-guides/tut-spring-boot-kotlin/commit/e0990f9d1f7a2881ba154512662536d04a738fa4",
                    "files": [
                        {
                            "name": "README.adoc",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " ",
                                        " Visit https://start.spring.io and choose the Kotlin language. Or visit https://start.spring.io/#!language=kotlin to preselect Kotlin.",
                                        " ",
                                        "-\t. let the default \"Maven Project\" or select \"Gradle Project\" depending on which build topl you want to use",
                                        "-\t. Click \"Switch to the full version\" and enter the following artifact coordinates:",
                                        "-\t\t- **Artifact:** `blog`",
                                        "-\t\t- **Package Name:** `blog`",
                                        "+\t. Let the default \"Maven Project\" or select \"Gradle Project\" depending on which build tool you want to use",
                                        "+\t. Enter the following artifact coordinates: `blog`",
                                        " \t. Add the following dependencies:",
                                        " \t\t- Web",
                                        " \t\t- Mustache",
                                        " \t\t- JPA",
                                        " \t\t- H2",
                                        "+\t\t- Devtools",
                                        " \t. Click \"Generate Project\".",
                                        " ",
                                        " image::./images/initializr.png[]"
                                    ],
                                    [
                                        " [source]",
                                        " ----",
                                        " $ mkdir blog && cd blog",
                                        "-$ curl https://start.spring.io/starter.zip -d language=kotlin -d style=web,mustache,jpa,h2 -d packageName=blog -d name=Blog -o blog.zip",
                                        "+$ curl https://start.spring.io/starter.zip -d language=kotlin -d style=web,mustache,jpa,h2,devtools -d packageName=com.example.blog -d name=Blog -o blog.zip",
                                        " ----",
                                        " ",
                                        " Add `-d type=gradle-project` if you want to use Gradle."
                                    ],
                                    [
                                        " ",
                                        " Follow the steps of the wizard to use the following parameters:",
                                        " ",
                                        "- - Package name: \"blog\"",
                                        "  - Artifact: \"blog\"",
                                        "  - Type: Maven project or Gradle Project",
                                        "  - Language: Kotlin",
                                        "  - Name: \"Blog\"",
                                        "- - Dependencies: \"Web\", \"Mustache\", JPA\" and \"H2\"",
                                        "+ - Dependencies: \"Web\", \"Mustache\", JPA\", \"H2\" and \"Devtool\"",
                                        " ",
                                        " [[reveal-gradle]]",
                                        " [.reveal-gradle]"
                                    ],
                                    [
                                        " \timplementation 'com.fasterxml.jackson.module:jackson-module-kotlin'",
                                        " \timplementation 'org.jetbrains.kotlin:kotlin-reflect'",
                                        " \timplementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'",
                                        "+\truntimeOnly 'org.springframework.boot:spring-boot-devtools'",
                                        " \truntimeOnly 'com.h2database:h2'",
                                        " \ttestImplementation 'org.springframework.boot:spring-boot-starter-test'",
                                        " }"
                                    ],
                                    [
                                        " \t\t<artifactId>kotlin-stdlib-jdk8</artifactId>",
                                        " \t</dependency>",
                                        " ",
                                        "+\t<dependency>",
                                        "+\t\t<groupId>org.springframework.boot</groupId>",
                                        "+\t\t<artifactId>spring-boot-devtools</artifactId>",
                                        "+\t\t<scope>runtime</scope>",
                                        "+\t</dependency>",
                                        " \t<dependency>",
                                        " \t\t<groupId>com.h2database</groupId>",
                                        " \t\t<artifactId>h2</artifactId>"
                                    ],
                                    [
                                        " `src/main/kotlin/blog/BlogApplication.kt`",
                                        " [source,kotlin]",
                                        " ----",
                                        "-package blog",
                                        "+package com.example.blog",
                                        " ",
                                        " import org.springframework.boot.autoconfigure.SpringBootApplication",
                                        " import org.springframework.boot.runApplication"
                                    ],
                                    [
                                        " `src/main/kotlin/blog/HtmlController.kt`",
                                        " [source,kotlin]",
                                        " ----",
                                        "-package blog",
                                        "+package com.example.blog",
                                        " ",
                                        " import org.springframework.stereotype.Controller",
                                        " import org.springframework.ui.Model",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "build.gradle",
                            "content": {
                                "current": "buildscript {\n\text {\n\t\tkotlinVersion = '1.2.71'\n\t\tspringBootVersion = '2.1.3.RELEASE'\n\t}\n\trepositories {\n\t\tmavenCentral()\n\t}\n\tdependencies {\n\t\tclasspath(\"org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}\")\n\t\tclasspath(\"org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}\")\n\t\tclasspath(\"org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}\")\n\t\tclasspath(\"org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}\")\n\t}\n}\n\napply plugin: 'kotlin'\napply plugin: 'kotlin-spring'\napply plugin: 'kotlin-jpa'\napply plugin: 'kotlin-allopen'\napply plugin: 'kotlin-kapt'\napply plugin: 'org.springframework.boot'\napply plugin: 'io.spring.dependency-management'\n\ngroup = 'com.example'\nversion = '0.0.1-SNAPSHOT'\nsourceCompatibility = 1.8\ncompileKotlin {\n\tkotlinOptions {\n\t\tfreeCompilerArgs = ['-Xjsr305=strict']\n\t\tjvmTarget = '1.8'\n\t}\n}\ncompileTestKotlin {\n\tkotlinOptions {\n\t\tfreeCompilerArgs = ['-Xjsr305=strict']\n\t\tjvmTarget = '1.8'\n\t}\n}\n\nallOpen {\n\tannotation('javax.persistence.Entity')\n}\n\nrepositories {\n\tmavenCentral()\n}\n\ntest {\n\tuseJUnitPlatform()\n}\n\ndependencies {\n\timplementation 'org.springframework.boot:spring-boot-starter-data-jpa'\n\timplementation 'org.springframework.boot:spring-boot-starter-web'\n\timplementation 'org.springframework.boot:spring-boot-starter-mustache'\n\timplementation 'com.fasterxml.jackson.module:jackson-module-kotlin'\n\timplementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'\n\timplementation 'org.jetbrains.kotlin:kotlin-reflect'\n\truntimeOnly 'org.springframework.boot:spring-boot-devtools'\n\truntimeOnly 'com.h2database:h2'\n\tkapt 'org.springframework.boot:spring-boot-configuration-processor'\n\ttestImplementation('org.springframework.boot:spring-boot-starter-test') {\n\t\texclude module: 'junit'\n\t\texclude module: 'mockito-core'\n\t}\n\ttestImplementation 'org.junit.jupiter:junit-jupiter-api'\n\ttestRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'\n\ttestImplementation 'com.ninja-squad:springmockk:1.1.0'\n}\n",
                                "diffs": [
                                    [
                                        " \timplementation 'com.fasterxml.jackson.module:jackson-module-kotlin'",
                                        " \timplementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'",
                                        " \timplementation 'org.jetbrains.kotlin:kotlin-reflect'",
                                        "-\truntime 'com.h2database:h2'",
                                        "+\truntimeOnly 'org.springframework.boot:spring-boot-devtools'",
                                        "+\truntimeOnly 'com.h2database:h2'",
                                        " \tkapt 'org.springframework.boot:spring-boot-configuration-processor'",
                                        " \ttestImplementation('org.springframework.boot:spring-boot-starter-test') {",
                                        " \t\texclude module: 'junit'",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "pom.xml",
                            "content": {
                                "current": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\n\t<groupId>com.example</groupId>\n\t<artifactId>blog</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\t<packaging>jar</packaging>\n\n\t<name>blog</name>\n\t<description>Demo project for Spring Boot</description>\n\n\t<parent>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\n\t\t<version>2.1.3.RELEASE</version>\n\t\t<relativePath/> <!-- lookup parent from repository -->\n\t</parent>\n\n\t<properties>\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\t\t<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n\t\t<java.version>1.8</java.version>\n\t\t<kotlin.version>1.2.71</kotlin.version>\n\t</properties>\n\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-mustache</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>com.fasterxml.jackson.module</groupId>\n\t\t\t<artifactId>jackson-module-kotlin</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.jetbrains.kotlin</groupId>\n\t\t\t<artifactId>kotlin-stdlib-jdk8</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.jetbrains.kotlin</groupId>\n\t\t\t<artifactId>kotlin-reflect</artifactId>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-devtools</artifactId>\n\t\t\t<scope>runtime</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>com.h2database</groupId>\n\t\t\t<artifactId>h2</artifactId>\n\t\t\t<scope>runtime</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n\t\t\t<scope>test</scope>\n\t\t\t<exclusions>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<groupId>junit</groupId>\n\t\t\t\t\t<artifactId>junit</artifactId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<groupId>org.mockito</groupId>\n\t\t\t\t\t<artifactId>mockito-core</artifactId>\n\t\t\t\t</exclusion>\n\t\t\t</exclusions>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.junit.jupiter</groupId>\n\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>com.ninja-squad</groupId>\n\t\t\t<artifactId>springmockk</artifactId>\n\t\t\t<version>1.1.0</version>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t</dependencies>\n\n\t<build>\n\t\t<sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>\n\t\t<testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<artifactId>kotlin-maven-plugin</artifactId>\n\t\t\t\t<groupId>org.jetbrains.kotlin</groupId>\n\t\t\t\t<configuration>\n\t\t\t\t\t<args>\n\t\t\t\t\t\t<arg>-Xjsr305=strict</arg>\n\t\t\t\t\t</args>\n\t\t\t\t\t<compilerPlugins>\n\t\t\t\t\t\t<plugin>spring</plugin>\n\t\t\t\t\t\t<plugin>jpa</plugin>\n\t\t\t\t\t\t<plugin>all-open</plugin>\n\t\t\t\t\t</compilerPlugins>\n\t\t\t\t\t<pluginOptions>\n\t\t\t\t\t\t<option>all-open:annotation=javax.persistence.Entity</option>\n\t\t\t\t\t</pluginOptions>\n\t\t\t\t</configuration>\n\t\t\t\t<dependencies>\n\t\t\t\t\t<dependency>\n\t\t\t\t\t\t<groupId>org.jetbrains.kotlin</groupId>\n\t\t\t\t\t\t<artifactId>kotlin-maven-allopen</artifactId>\n\t\t\t\t\t\t<version>${kotlin.version}</version>\n\t\t\t\t\t</dependency>\n\t\t\t\t\t<dependency>\n\t\t\t\t\t\t<groupId>org.jetbrains.kotlin</groupId>\n\t\t\t\t\t\t<artifactId>kotlin-maven-noarg</artifactId>\n\t\t\t\t\t\t<version>${kotlin.version}</version>\n\t\t\t\t\t</dependency>\n\t\t\t\t</dependencies>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>kapt</id>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>kapt</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<sourceDirs>\n\t\t\t\t\t\t\t\t<sourceDir>src/main/kotlin</sourceDir>\n\t\t\t\t\t\t\t</sourceDirs>\n\t\t\t\t\t\t\t<annotationProcessorPaths>\n\t\t\t\t\t\t\t\t<annotationProcessorPath>\n\t\t\t\t\t\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t\t\t\t\t\t<artifactId>spring-boot-configuration-processor</artifactId>\n\t\t\t\t\t\t\t\t\t<version>${project.parent.version}</version>\n\t\t\t\t\t\t\t\t</annotationProcessorPath>\n\t\t\t\t\t\t\t</annotationProcessorPaths>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n\n\n</project>\n",
                                "diffs": [
                                    [
                                        " \t\t\t<groupId>org.jetbrains.kotlin</groupId>",
                                        " \t\t\t<artifactId>kotlin-reflect</artifactId>",
                                        " \t\t</dependency>",
                                        "+",
                                        "+\t\t<dependency>",
                                        "+\t\t\t<groupId>org.springframework.boot</groupId>",
                                        "+\t\t\t<artifactId>spring-boot-devtools</artifactId>",
                                        "+\t\t\t<scope>runtime</scope>",
                                        "+\t\t</dependency>",
                                        " \t\t<dependency>",
                                        " \t\t\t<groupId>com.h2database</groupId>",
                                        " \t\t\t<artifactId>h2</artifactId>",
                                        " \t\t\t<scope>runtime</scope>",
                                        " \t\t</dependency>",
                                        "-",
                                        " \t\t<dependency>",
                                        " \t\t\t<groupId>org.springframework.boot</groupId>",
                                        " \t\t\t<artifactId>spring-boot-starter-test</artifactId>",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/kotlin/blog/BlogApplication.kt",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "-package blog",
                                        "-",
                                        "-import org.springframework.boot.autoconfigure.SpringBootApplication",
                                        "-import org.springframework.boot.context.properties.EnableConfigurationProperties",
                                        "-import org.springframework.boot.runApplication",
                                        "-",
                                        "-@SpringBootApplication",
                                        "-@EnableConfigurationProperties(BlogProperties::class)",
                                        "-class BlogApplication",
                                        "-",
                                        "-fun main(args: Array<String>) {",
                                        "-\trunApplication<BlogApplication>(*args)",
                                        "-}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/kotlin/blog/BlogConfiguration.kt",
                            "content": {
                                "current": "File was deleted in this commit",
                                "diffs": [
                                    [
                                        "-package blog",
                                        "-",
                                        "-import org.springframework.boot.ApplicationRunner",
                                        "-import org.springframework.context.annotation.Bean",
                                        "-import org.springframework.context.annotation.Configuration",
                                        "-",
                                        "-@Configuration",
                                        "-class BlogConfiguration {",
                                        "-",
                                        "-    @Bean",
                                        "-    fun databaseInitializer(userRepository: UserRepository,",
                                        "-                            articleRepository: ArticleRepository) = ApplicationRunner {",
                                        "-",
                                        "-        val smaldini = userRepository.save(User(\"smaldini\", \"St\u00e9phane\", \"Maldini\"))",
                                        "-        articleRepository.save(Article(",
                                        "-                title = \"Reactor Bismuth is out\",",
                                        "-                headline = \"Lorem ipsum\",",
                                        "-                content = \"dolor sit amet\",",
                                        "-                author = smaldini",
                                        "-        ))",
                                        "-        articleRepository.save(Article(",
                                        "-                title = \"Reactor Aluminium has landed\",",
                                        "-                headline = \"Lorem ipsum\",",
                                        "-                content = \"dolor sit amet\",",
                                        "-                author = smaldini",
                                        "-        ))",
                                        "-    }",
                                        "-}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/kotlin/blog/BlogProperties.kt",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "-package blog",
                                        "-",
                                        "-import org.springframework.boot.context.properties.ConfigurationProperties",
                                        "-",
                                        "-// TODO Use \"val\" instead of \"lateinit var\" when spring-boot#8762 will be fixed",
                                        "-@ConfigurationProperties(\"blog\")",
                                        "-class BlogProperties {",
                                        "-",
                                        "-\tlateinit var title: String",
                                        "-\tval banner = Banner()",
                                        "-",
                                        "-\tclass Banner {",
                                        "-\t\tvar title: String? = null",
                                        "-\t\tlateinit var content: String",
                                        "-\t}",
                                        "-",
                                        "-}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/kotlin/blog/Entities.kt",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "-package blog",
                                        "-",
                                        "-import java.time.LocalDateTime",
                                        "-import javax.persistence.*",
                                        "-",
                                        "-@Entity",
                                        "-class Article(",
                                        "-\t\tvar title: String,",
                                        "-\t\tvar headline: String,",
                                        "-\t\tvar content: String,",
                                        "-\t\t@ManyToOne var author: User,",
                                        "-\t\tvar slug: String = title.toSlug(),",
                                        "-\t\tvar addedAt: LocalDateTime = LocalDateTime.now(),",
                                        "-\t\t@Id @GeneratedValue var id: Long? = null)",
                                        "-",
                                        "-@Entity",
                                        "-class User(",
                                        "-\t\tvar login: String,",
                                        "-\t\tvar firstname: String,",
                                        "-\t\tvar lastname: String,",
                                        "-\t\tvar description: String? = null,",
                                        "-\t\t@Id @GeneratedValue var id: Long? = null)",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/kotlin/blog/Extensions.kt",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "-package blog",
                                        "-",
                                        "-import java.time.LocalDateTime",
                                        "-import java.time.format.DateTimeFormatterBuilder",
                                        "-import java.time.temporal.ChronoField",
                                        "-import java.util.*",
                                        "-",
                                        "-fun LocalDateTime.format() = this.format(englishDateFormatter)",
                                        "-",
                                        "-private val daysLookup = (1..31).associate { it.toLong() to getOrdinal(it) }",
                                        "-",
                                        "-private val englishDateFormatter = DateTimeFormatterBuilder()",
                                        "-\t\t.appendPattern(\"yyyy-MM-dd\")",
                                        "-\t\t.appendLiteral(\" \")",
                                        "-\t\t.appendText(ChronoField.DAY_OF_MONTH, daysLookup)",
                                        "-\t\t.appendLiteral(\" \")",
                                        "-\t\t.appendPattern(\"yyyy\")",
                                        "-\t\t.toFormatter(Locale.ENGLISH)",
                                        "-",
                                        "-private fun getOrdinal(n: Int) = when {",
                                        "-\tn in 11..13 -> \"${n}th\"",
                                        "-\tn % 10 == 1 -> \"${n}st\"",
                                        "-\tn % 10 == 2 -> \"${n}nd\"",
                                        "-\tn % 10 == 3 -> \"${n}rd\"",
                                        "-\telse -> \"${n}th\"",
                                        "-}",
                                        "-",
                                        "-fun String.toSlug() = toLowerCase()",
                                        "-\t\t.replace(\"\\n\", \" \")",
                                        "-\t\t.replace(\"[^a-z\\\\d\\\\s]\".toRegex(), \" \")",
                                        "-\t\t.split(\" \")",
                                        "-\t\t.joinToString(\"-\")",
                                        "-\t\t.replace(\"-+\".toRegex(), \"-\")",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/kotlin/blog/HtmlController.kt",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "-package blog",
                                        "-",
                                        "-import org.springframework.stereotype.Controller",
                                        "-import org.springframework.ui.Model",
                                        "-import org.springframework.ui.set",
                                        "-import org.springframework.web.bind.annotation.GetMapping",
                                        "-import org.springframework.web.bind.annotation.PathVariable",
                                        "-",
                                        "-@Controller",
                                        "-class HtmlController(private val repository: ArticleRepository,",
                                        "-\t\t\t\t\t private val properties: BlogProperties) {",
                                        "-",
                                        "-\t@GetMapping(\"/\")",
                                        "-\tfun blog(model: Model): String {",
                                        "-\t\tmodel[\"title\"] = properties.title",
                                        "-\t\tmodel[\"banner\"] = properties.banner",
                                        "-\t\tmodel[\"articles\"] = repository.findAllByOrderByAddedAtDesc().map { it.render() }",
                                        "-\t\treturn \"blog\"",
                                        "-\t}",
                                        "-",
                                        "-\t@GetMapping(\"/article/{slug}\")",
                                        "-\tfun article(@PathVariable slug: String, model: Model): String {",
                                        "-\t\tval article = repository",
                                        "-\t\t\t\t.findBySlug(slug)",
                                        "-\t\t\t\t?.render()",
                                        "-\t\t\t\t?: throw IllegalArgumentException(\"Wrong article slug provided\")",
                                        "-\t\tmodel[\"title\"] = article.title",
                                        "-\t\tmodel[\"article\"] = article",
                                        "-\t\treturn \"article\"",
                                        "-\t}",
                                        "-",
                                        "-\tfun Article.render() = RenderedArticle(",
                                        "-\t\t\tslug,",
                                        "-\t\t\ttitle,",
                                        "-\t\t\theadline,",
                                        "-\t\t\tcontent,",
                                        "-\t\t\tauthor,",
                                        "-\t\t\taddedAt.format()",
                                        "-\t)",
                                        "-",
                                        "-\tdata class RenderedArticle(",
                                        "-\t\t\tval slug: String,",
                                        "-\t\t\tval title: String,",
                                        "-\t\t\tval headline: String,",
                                        "-\t\t\tval content: String,",
                                        "-\t\t\tval author: User,",
                                        "-\t\t\tval addedAt: String)",
                                        "-",
                                        "-}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/kotlin/blog/HttpControllers.kt",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "-package blog",
                                        "-",
                                        "-import org.springframework.web.bind.annotation.*",
                                        "-",
                                        "-@RestController",
                                        "-@RequestMapping(\"/api/article\")",
                                        "-class ArticleController(private val repository: ArticleRepository) {",
                                        "-",
                                        "-\t@GetMapping(\"/\")",
                                        "-\tfun findAll() = repository.findAllByOrderByAddedAtDesc()",
                                        "-",
                                        "-\t@GetMapping(\"/{slug}\")",
                                        "-\tfun findOne(@PathVariable slug: String) =",
                                        "-\t\t\trepository.findBySlug(slug) ?: throw IllegalArgumentException(\"Wrong article slug provided\")",
                                        "-",
                                        "-}",
                                        "-",
                                        "-@RestController",
                                        "-@RequestMapping(\"/api/user\")",
                                        "-class UserController(private val repository: UserRepository) {",
                                        "-",
                                        "-\t@GetMapping(\"/\")",
                                        "-\tfun findAll() = repository.findAll()",
                                        "-",
                                        "-\t@GetMapping(\"/{login}\")",
                                        "-\tfun findOne(@PathVariable login: String) = repository.findByLogin(login)",
                                        "-}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/kotlin/blog/Repositories.kt",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "-package blog",
                                        "-",
                                        "-import org.springframework.data.repository.CrudRepository",
                                        "-",
                                        "-interface ArticleRepository : CrudRepository<Article, Long> {",
                                        "-\tfun findBySlug(slug: String): Article?",
                                        "-\tfun findAllByOrderByAddedAtDesc(): Iterable<Article>",
                                        "-}",
                                        "-",
                                        "-interface UserRepository : CrudRepository<User, Long> {",
                                        "-\tfun findByLogin(login: String): User",
                                        "-}",
                                        "-",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/kotlin/com/example/blog/BlogApplication.kt",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "+package com.example.blog",
                                        "+",
                                        "+import org.springframework.boot.autoconfigure.SpringBootApplication",
                                        "+import org.springframework.boot.context.properties.EnableConfigurationProperties",
                                        "+import org.springframework.boot.runApplication",
                                        "+",
                                        "+@SpringBootApplication",
                                        "+@EnableConfigurationProperties(BlogProperties::class)",
                                        "+class BlogApplication",
                                        "+",
                                        "+fun main(args: Array<String>) {",
                                        "+\trunApplication<BlogApplication>(*args)",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/kotlin/com/example/blog/BlogConfiguration.kt",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        "+package com.example.blog",
                                        "+",
                                        "+import org.springframework.boot.ApplicationRunner",
                                        "+import org.springframework.context.annotation.Bean",
                                        "+import org.springframework.context.annotation.Configuration",
                                        "+",
                                        "+@Configuration",
                                        "+class BlogConfiguration {",
                                        "+",
                                        "+    @Bean",
                                        "+    fun databaseInitializer(userRepository: UserRepository,",
                                        "+\t\t\t\t\t\t\tarticleRepository: ArticleRepository) = ApplicationRunner {",
                                        "+",
                                        "+        val smaldini = userRepository.save(User(\"smaldini\", \"St\u00e9phane\", \"Maldini\"))",
                                        "+        articleRepository.save(Article(",
                                        "+\t\t\t\ttitle = \"Reactor Bismuth is out\",",
                                        "+\t\t\t\theadline = \"Lorem ipsum\",",
                                        "+\t\t\t\tcontent = \"dolor sit amet\",",
                                        "+\t\t\t\tauthor = smaldini",
                                        "+\t\t))",
                                        "+        articleRepository.save(Article(",
                                        "+\t\t\t\ttitle = \"Reactor Aluminium has landed\",",
                                        "+\t\t\t\theadline = \"Lorem ipsum\",",
                                        "+\t\t\t\tcontent = \"dolor sit amet\",",
                                        "+\t\t\t\tauthor = smaldini",
                                        "+\t\t))",
                                        "+    }",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/kotlin/com/example/blog/BlogProperties.kt",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "+package com.example.blog",
                                        "+",
                                        "+import org.springframework.boot.context.properties.ConfigurationProperties",
                                        "+",
                                        "+// TODO Use \"val\" instead of \"lateinit var\" when spring-boot#8762 will be fixed",
                                        "+@ConfigurationProperties(\"blog\")",
                                        "+class BlogProperties {",
                                        "+",
                                        "+\tlateinit var title: String",
                                        "+\tval banner = Banner()",
                                        "+",
                                        "+\tclass Banner {",
                                        "+\t\tvar title: String? = null",
                                        "+\t\tlateinit var content: String",
                                        "+\t}",
                                        "+",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/kotlin/com/example/blog/Entities.kt",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "+package com.example.blog",
                                        "+",
                                        "+import java.time.LocalDateTime",
                                        "+import javax.persistence.*",
                                        "+",
                                        "+@Entity",
                                        "+class Article(",
                                        "+\t\tvar title: String,",
                                        "+\t\tvar headline: String,",
                                        "+\t\tvar content: String,",
                                        "+\t\t@ManyToOne var author: User,",
                                        "+\t\tvar slug: String = title.toSlug(),",
                                        "+\t\tvar addedAt: LocalDateTime = LocalDateTime.now(),",
                                        "+\t\t@Id @GeneratedValue var id: Long? = null)",
                                        "+",
                                        "+@Entity",
                                        "+class User(",
                                        "+\t\tvar login: String,",
                                        "+\t\tvar firstname: String,",
                                        "+\t\tvar lastname: String,",
                                        "+\t\tvar description: String? = null,",
                                        "+\t\t@Id @GeneratedValue var id: Long? = null)",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/kotlin/com/example/blog/Extensions.kt",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "+package com.example.blog",
                                        "+",
                                        "+import java.time.LocalDateTime",
                                        "+import java.time.format.DateTimeFormatterBuilder",
                                        "+import java.time.temporal.ChronoField",
                                        "+import java.util.*",
                                        "+",
                                        "+fun LocalDateTime.format() = this.format(englishDateFormatter)",
                                        "+",
                                        "+private val daysLookup = (1..31).associate { it.toLong() to getOrdinal(it) }",
                                        "+",
                                        "+private val englishDateFormatter = DateTimeFormatterBuilder()",
                                        "+\t\t.appendPattern(\"yyyy-MM-dd\")",
                                        "+\t\t.appendLiteral(\" \")",
                                        "+\t\t.appendText(ChronoField.DAY_OF_MONTH, daysLookup)",
                                        "+\t\t.appendLiteral(\" \")",
                                        "+\t\t.appendPattern(\"yyyy\")",
                                        "+\t\t.toFormatter(Locale.ENGLISH)",
                                        "+",
                                        "+private fun getOrdinal(n: Int) = when {",
                                        "+\tn in 11..13 -> \"${n}th\"",
                                        "+\tn % 10 == 1 -> \"${n}st\"",
                                        "+\tn % 10 == 2 -> \"${n}nd\"",
                                        "+\tn % 10 == 3 -> \"${n}rd\"",
                                        "+\telse -> \"${n}th\"",
                                        "+}",
                                        "+",
                                        "+fun String.toSlug() = toLowerCase()",
                                        "+\t\t.replace(\"\\n\", \" \")",
                                        "+\t\t.replace(\"[^a-z\\\\d\\\\s]\".toRegex(), \" \")",
                                        "+\t\t.split(\" \")",
                                        "+\t\t.joinToString(\"-\")",
                                        "+\t\t.replace(\"-+\".toRegex(), \"-\")",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/kotlin/com/example/blog/HtmlController.kt",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "+package com.example.blog",
                                        "+",
                                        "+import org.springframework.stereotype.Controller",
                                        "+import org.springframework.ui.Model",
                                        "+import org.springframework.ui.set",
                                        "+import org.springframework.web.bind.annotation.GetMapping",
                                        "+import org.springframework.web.bind.annotation.PathVariable",
                                        "+",
                                        "+@Controller",
                                        "+class HtmlController(private val repository: ArticleRepository,",
                                        "+\t\t\t\t\t private val properties: BlogProperties) {",
                                        "+",
                                        "+\t@GetMapping(\"/\")",
                                        "+\tfun blog(model: Model): String {",
                                        "+\t\tmodel[\"title\"] = properties.title",
                                        "+\t\tmodel[\"banner\"] = properties.banner",
                                        "+\t\tmodel[\"articles\"] = repository.findAllByOrderByAddedAtDesc().map { it.render() }",
                                        "+\t\treturn \"blog\"",
                                        "+\t}",
                                        "+",
                                        "+\t@GetMapping(\"/article/{slug}\")",
                                        "+\tfun article(@PathVariable slug: String, model: Model): String {",
                                        "+\t\tval article = repository",
                                        "+\t\t\t\t.findBySlug(slug)",
                                        "+\t\t\t\t?.render()",
                                        "+\t\t\t\t?: throw IllegalArgumentException(\"Wrong article slug provided\")",
                                        "+\t\tmodel[\"title\"] = article.title",
                                        "+\t\tmodel[\"article\"] = article",
                                        "+\t\treturn \"article\"",
                                        "+\t}",
                                        "+",
                                        "+\tfun Article.render() = RenderedArticle(",
                                        "+\t\t\tslug,",
                                        "+\t\t\ttitle,",
                                        "+\t\t\theadline,",
                                        "+\t\t\tcontent,",
                                        "+\t\t\tauthor,",
                                        "+\t\t\taddedAt.format()",
                                        "+\t)",
                                        "+",
                                        "+\tdata class RenderedArticle(",
                                        "+\t\t\tval slug: String,",
                                        "+\t\t\tval title: String,",
                                        "+\t\t\tval headline: String,",
                                        "+\t\t\tval content: String,",
                                        "+\t\t\tval author: User,",
                                        "+\t\t\tval addedAt: String)",
                                        "+",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/kotlin/com/example/blog/HttpControllers.kt",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "+package com.example.blog",
                                        "+",
                                        "+import org.springframework.web.bind.annotation.*",
                                        "+",
                                        "+@RestController",
                                        "+@RequestMapping(\"/api/article\")",
                                        "+class ArticleController(private val repository: ArticleRepository) {",
                                        "+",
                                        "+\t@GetMapping(\"/\")",
                                        "+\tfun findAll() = repository.findAllByOrderByAddedAtDesc()",
                                        "+",
                                        "+\t@GetMapping(\"/{slug}\")",
                                        "+\tfun findOne(@PathVariable slug: String) =",
                                        "+\t\t\trepository.findBySlug(slug) ?: throw IllegalArgumentException(\"Wrong article slug provided\")",
                                        "+",
                                        "+}",
                                        "+",
                                        "+@RestController",
                                        "+@RequestMapping(\"/api/user\")",
                                        "+class UserController(private val repository: UserRepository) {",
                                        "+",
                                        "+\t@GetMapping(\"/\")",
                                        "+\tfun findAll() = repository.findAll()",
                                        "+",
                                        "+\t@GetMapping(\"/{login}\")",
                                        "+\tfun findOne(@PathVariable login: String) = repository.findByLogin(login)",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/kotlin/com/example/blog/Repositories.kt",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "+package com.example.blog",
                                        "+",
                                        "+import org.springframework.data.repository.CrudRepository",
                                        "+",
                                        "+interface ArticleRepository : CrudRepository<Article, Long> {",
                                        "+\tfun findBySlug(slug: String): Article?",
                                        "+\tfun findAllByOrderByAddedAtDesc(): Iterable<Article>",
                                        "+}",
                                        "+",
                                        "+interface UserRepository : CrudRepository<User, Long> {",
                                        "+\tfun findByLogin(login: String): User",
                                        "+}",
                                        "+",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/test/kotlin/blog/BlogApplicationTests.kt",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "-package blog",
                                        "-",
                                        "-import org.junit.jupiter.api.Test",
                                        "-import org.springframework.boot.test.context.SpringBootTest",
                                        "-",
                                        "-@SpringBootTest",
                                        "-class BlogApplicationTests {",
                                        "-",
                                        "-\t@Test",
                                        "-\tfun contextLoads() {",
                                        "-\t}",
                                        "-",
                                        "-}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/test/kotlin/blog/HttpControllersTests.kt",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "-package blog",
                                        "-",
                                        "-import com.ninjasquad.springmockk.MockkBean",
                                        "-import io.mockk.every",
                                        "-import org.junit.jupiter.api.Test",
                                        "-import org.springframework.beans.factory.annotation.Autowired",
                                        "-import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest",
                                        "-import org.springframework.test.web.servlet.MockMvc",
                                        "-import org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get",
                                        "-import org.springframework.http.MediaType",
                                        "-import org.springframework.test.web.servlet.result.MockMvcResultMatchers.*",
                                        "-",
                                        "-@WebMvcTest",
                                        "-class HttpControllersTests(@Autowired val mockMvc: MockMvc) {",
                                        "-",
                                        "-\t@MockkBean",
                                        "-\tlateinit var userRepository: UserRepository",
                                        "-",
                                        "-\t@MockkBean",
                                        "-\tlateinit var articleRepository: ArticleRepository",
                                        "-",
                                        "-\t@Test",
                                        "-\tfun `List articles`() {",
                                        "-\t\tval juergen = User(\"springjuergen\", \"Juergen\", \"Hoeller\")",
                                        "-\t\tval spring5Article = Article(\"Spring Framework 5.0 goes GA\", \"Dear Spring community ...\", \"Lorem ipsum\", juergen)",
                                        "-\t\tval spring43Article = Article(\"Spring Framework 4.3 goes GA\", \"Dear Spring community ...\", \"Lorem ipsum\", juergen)",
                                        "-\t\tevery { articleRepository.findAllByOrderByAddedAtDesc() } returns listOf(spring5Article, spring43Article)",
                                        "-\t\tmockMvc.perform(get(\"/api/article/\").accept(MediaType.APPLICATION_JSON))",
                                        "-\t\t\t\t.andExpect(status().isOk)",
                                        "-\t\t\t\t.andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8))",
                                        "-\t\t\t\t.andExpect(jsonPath(\"\\$.[0].author.login\").value(juergen.login))",
                                        "-\t\t\t\t.andExpect(jsonPath(\"\\$.[0].slug\").value(spring5Article.slug))",
                                        "-\t\t\t\t.andExpect(jsonPath(\"\\$.[1].author.login\").value(juergen.login))",
                                        "-\t\t\t\t.andExpect(jsonPath(\"\\$.[1].slug\").value(spring43Article.slug))",
                                        "-\t}",
                                        "-",
                                        "-\t@Test",
                                        "-\tfun `List users`() {",
                                        "-\t\tval juergen = User(\"springjuergen\", \"Juergen\", \"Hoeller\")",
                                        "-\t\tval smaldini = User(\"smaldini\", \"St\u00e9phane\", \"Maldini\")",
                                        "-\t\tevery { userRepository.findAll() } returns listOf(juergen, smaldini)",
                                        "-\t\tmockMvc.perform(get(\"/api/user/\").accept(MediaType.APPLICATION_JSON))",
                                        "-\t\t\t\t.andExpect(status().isOk)",
                                        "-\t\t\t\t.andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8))",
                                        "-\t\t\t\t.andExpect(jsonPath(\"\\$.[0].login\").value(juergen.login))",
                                        "-\t\t\t\t.andExpect(jsonPath(\"\\$.[1].login\").value(smaldini.login))",
                                        "-\t}",
                                        "-}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/test/kotlin/blog/IntegrationTests.kt",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "-package blog",
                                        "-",
                                        "-import org.assertj.core.api.Assertions.*",
                                        "-import org.junit.jupiter.api.AfterAll",
                                        "-import org.junit.jupiter.api.BeforeAll",
                                        "-import org.junit.jupiter.api.Test",
                                        "-import org.springframework.beans.factory.annotation.Autowired",
                                        "-import org.springframework.boot.test.context.SpringBootTest",
                                        "-import org.springframework.boot.test.web.client.TestRestTemplate",
                                        "-import org.springframework.boot.test.web.client.getForEntity",
                                        "-import org.springframework.http.HttpStatus",
                                        "-",
                                        "-@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)",
                                        "-class IntegrationTests(@Autowired val restTemplate: TestRestTemplate) {",
                                        "-",
                                        "-\t@BeforeAll",
                                        "-\tfun setup() {",
                                        "-\t\tprintln(\">> Setup\")",
                                        "-\t}",
                                        "-",
                                        "-\t@Test",
                                        "-\tfun `Assert blog page title, content and status code`() {",
                                        "-\t\tprintln(\">> Assert blog page title, content and status code\")",
                                        "-\t\tval entity = restTemplate.getForEntity<String>(\"/\")",
                                        "-\t\tassertThat(entity.statusCode).isEqualTo(HttpStatus.OK)",
                                        "-\t\tassertThat(entity.body).contains(\"<h1>Blog</h1>\", \"Reactor\")",
                                        "-\t}",
                                        "-",
                                        "-\t@Test",
                                        "-\tfun `Assert article page title, content and status code`() {",
                                        "-\t\tprintln(\">> Assert article page title, content and status code\")",
                                        "-\t\tval title = \"Reactor Aluminium has landed\"",
                                        "-\t\tval entity = restTemplate.getForEntity<String>(\"/article/${title.toSlug()}\")",
                                        "-\t\tassertThat(entity.statusCode).isEqualTo(HttpStatus.OK)",
                                        "-\t\tassertThat(entity.body).contains(title, \"Lorem ipsum\", \"dolor sit amet\")",
                                        "-\t}",
                                        "-",
                                        "-\t@AfterAll",
                                        "-\tfun teardown() {",
                                        "-\t\tprintln(\">> Tear down\")",
                                        "-\t}",
                                        "-",
                                        "-}",
                                        "\\ No newline at end of file",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/test/kotlin/blog/RepositoriesTests.kt",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "-package blog",
                                        "-",
                                        "-import org.assertj.core.api.Assertions.assertThat",
                                        "-import org.junit.jupiter.api.Test",
                                        "-import org.springframework.beans.factory.annotation.Autowired",
                                        "-import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest",
                                        "-import org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager",
                                        "-import org.springframework.data.repository.findByIdOrNull",
                                        "-",
                                        "-@DataJpaTest",
                                        "-class RepositoriesTests @Autowired constructor(",
                                        "-\t\tval entityManager: TestEntityManager,",
                                        "-\t\tval userRepository: UserRepository,",
                                        "-\t\tval articleRepository: ArticleRepository) {",
                                        "-",
                                        "-\t@Test",
                                        "-\tfun `When findByIdOrNull then return Article`() {",
                                        "-\t\tval juergen = User(\"springjuergen\", \"Juergen\", \"Hoeller\")",
                                        "-\t\tentityManager.persist(juergen)",
                                        "-\t\tval article = Article(\"Spring Framework 5.0 goes GA\", \"Dear Spring community ...\", \"Lorem ipsum\", juergen)",
                                        "-\t\tentityManager.persist(article)",
                                        "-\t\tentityManager.flush()",
                                        "-\t\tval found = articleRepository.findByIdOrNull(article.id!!)",
                                        "-\t\tassertThat(found).isEqualTo(article)",
                                        "-\t}",
                                        "-",
                                        "-\t@Test",
                                        "-\tfun `When findByLogin then return User`() {",
                                        "-\t\tval juergen = User(\"springjuergen\", \"Juergen\", \"Hoeller\")",
                                        "-\t\tentityManager.persist(juergen)",
                                        "-\t\tentityManager.flush()",
                                        "-\t\tval user = userRepository.findByLogin(juergen.login)",
                                        "-\t\tassertThat(user).isEqualTo(juergen)",
                                        "-\t}",
                                        "-}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/test/kotlin/com/example/blog/BlogApplicationTests.kt",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "+package com.example.blog",
                                        "+",
                                        "+import org.junit.jupiter.api.Test",
                                        "+import org.springframework.boot.test.context.SpringBootTest",
                                        "+",
                                        "+@SpringBootTest",
                                        "+class BlogApplicationTests {",
                                        "+",
                                        "+\t@Test",
                                        "+\tfun contextLoads() {",
                                        "+\t}",
                                        "+",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/test/kotlin/com/example/blog/HttpControllersTests.kt",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "+package com.example.blog",
                                        "+",
                                        "+import com.ninjasquad.springmockk.MockkBean",
                                        "+import io.mockk.every",
                                        "+import org.junit.jupiter.api.Test",
                                        "+import org.springframework.beans.factory.annotation.Autowired",
                                        "+import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest",
                                        "+import org.springframework.test.web.servlet.MockMvc",
                                        "+import org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get",
                                        "+import org.springframework.http.MediaType",
                                        "+import org.springframework.test.web.servlet.result.MockMvcResultMatchers.*",
                                        "+",
                                        "+@WebMvcTest",
                                        "+class HttpControllersTests(@Autowired val mockMvc: MockMvc) {",
                                        "+",
                                        "+\t@MockkBean",
                                        "+\tlateinit var userRepository: UserRepository",
                                        "+",
                                        "+\t@MockkBean",
                                        "+\tlateinit var articleRepository: ArticleRepository",
                                        "+",
                                        "+\t@Test",
                                        "+\tfun `List articles`() {",
                                        "+\t\tval juergen = User(\"springjuergen\", \"Juergen\", \"Hoeller\")",
                                        "+\t\tval spring5Article = Article(\"Spring Framework 5.0 goes GA\", \"Dear Spring community ...\", \"Lorem ipsum\", juergen)",
                                        "+\t\tval spring43Article = Article(\"Spring Framework 4.3 goes GA\", \"Dear Spring community ...\", \"Lorem ipsum\", juergen)",
                                        "+\t\tevery { articleRepository.findAllByOrderByAddedAtDesc() } returns listOf(spring5Article, spring43Article)",
                                        "+\t\tmockMvc.perform(get(\"/api/article/\").accept(MediaType.APPLICATION_JSON))",
                                        "+\t\t\t\t.andExpect(status().isOk)",
                                        "+\t\t\t\t.andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8))",
                                        "+\t\t\t\t.andExpect(jsonPath(\"\\$.[0].author.login\").value(juergen.login))",
                                        "+\t\t\t\t.andExpect(jsonPath(\"\\$.[0].slug\").value(spring5Article.slug))",
                                        "+\t\t\t\t.andExpect(jsonPath(\"\\$.[1].author.login\").value(juergen.login))",
                                        "+\t\t\t\t.andExpect(jsonPath(\"\\$.[1].slug\").value(spring43Article.slug))",
                                        "+\t}",
                                        "+",
                                        "+\t@Test",
                                        "+\tfun `List users`() {",
                                        "+\t\tval juergen = User(\"springjuergen\", \"Juergen\", \"Hoeller\")",
                                        "+\t\tval smaldini = User(\"smaldini\", \"St\u00e9phane\", \"Maldini\")",
                                        "+\t\tevery { userRepository.findAll() } returns listOf(juergen, smaldini)",
                                        "+\t\tmockMvc.perform(get(\"/api/user/\").accept(MediaType.APPLICATION_JSON))",
                                        "+\t\t\t\t.andExpect(status().isOk)",
                                        "+\t\t\t\t.andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8))",
                                        "+\t\t\t\t.andExpect(jsonPath(\"\\$.[0].login\").value(juergen.login))",
                                        "+\t\t\t\t.andExpect(jsonPath(\"\\$.[1].login\").value(smaldini.login))",
                                        "+\t}",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/test/kotlin/com/example/blog/IntegrationTests.kt",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "+package com.example.blog",
                                        "+",
                                        "+import org.assertj.core.api.Assertions.*",
                                        "+import org.junit.jupiter.api.AfterAll",
                                        "+import org.junit.jupiter.api.BeforeAll",
                                        "+import org.junit.jupiter.api.Test",
                                        "+import org.springframework.beans.factory.annotation.Autowired",
                                        "+import org.springframework.boot.test.context.SpringBootTest",
                                        "+import org.springframework.boot.test.web.client.TestRestTemplate",
                                        "+import org.springframework.boot.test.web.client.getForEntity",
                                        "+import org.springframework.http.HttpStatus",
                                        "+",
                                        "+@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)",
                                        "+class IntegrationTests(@Autowired val restTemplate: TestRestTemplate) {",
                                        "+",
                                        "+\t@BeforeAll",
                                        "+\tfun setup() {",
                                        "+\t\tprintln(\">> Setup\")",
                                        "+\t}",
                                        "+",
                                        "+\t@Test",
                                        "+\tfun `Assert blog page title, content and status code`() {",
                                        "+\t\tprintln(\">> Assert blog page title, content and status code\")",
                                        "+\t\tval entity = restTemplate.getForEntity<String>(\"/\")",
                                        "+\t\tassertThat(entity.statusCode).isEqualTo(HttpStatus.OK)",
                                        "+\t\tassertThat(entity.body).contains(\"<h1>Blog</h1>\", \"Reactor\")",
                                        "+\t}",
                                        "+",
                                        "+\t@Test",
                                        "+\tfun `Assert article page title, content and status code`() {",
                                        "+\t\tprintln(\">> Assert article page title, content and status code\")",
                                        "+\t\tval title = \"Reactor Aluminium has landed\"",
                                        "+\t\tval entity = restTemplate.getForEntity<String>(\"/article/${title.toSlug()}\")",
                                        "+\t\tassertThat(entity.statusCode).isEqualTo(HttpStatus.OK)",
                                        "+\t\tassertThat(entity.body).contains(title, \"Lorem ipsum\", \"dolor sit amet\")",
                                        "+\t}",
                                        "+",
                                        "+\t@AfterAll",
                                        "+\tfun teardown() {",
                                        "+\t\tprintln(\">> Tear down\")",
                                        "+\t}",
                                        "+",
                                        "+}",
                                        "\\ No newline at end of file",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/test/kotlin/com/example/blog/RepositoriesTests.kt",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "+package com.example.blog",
                                        "+",
                                        "+import org.assertj.core.api.Assertions.assertThat",
                                        "+import org.junit.jupiter.api.Test",
                                        "+import org.springframework.beans.factory.annotation.Autowired",
                                        "+import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest",
                                        "+import org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager",
                                        "+import org.springframework.data.repository.findByIdOrNull",
                                        "+",
                                        "+@DataJpaTest",
                                        "+class RepositoriesTests @Autowired constructor(",
                                        "+\t\tval entityManager: TestEntityManager,",
                                        "+\t\tval userRepository: UserRepository,",
                                        "+\t\tval articleRepository: ArticleRepository) {",
                                        "+",
                                        "+\t@Test",
                                        "+\tfun `When findByIdOrNull then return Article`() {",
                                        "+\t\tval juergen = User(\"springjuergen\", \"Juergen\", \"Hoeller\")",
                                        "+\t\tentityManager.persist(juergen)",
                                        "+\t\tval article = Article(\"Spring Framework 5.0 goes GA\", \"Dear Spring community ...\", \"Lorem ipsum\", juergen)",
                                        "+\t\tentityManager.persist(article)",
                                        "+\t\tentityManager.flush()",
                                        "+\t\tval found = articleRepository.findByIdOrNull(article.id!!)",
                                        "+\t\tassertThat(found).isEqualTo(article)",
                                        "+\t}",
                                        "+",
                                        "+\t@Test",
                                        "+\tfun `When findByLogin then return User`() {",
                                        "+\t\tval juergen = User(\"springjuergen\", \"Juergen\", \"Hoeller\")",
                                        "+\t\tentityManager.persist(juergen)",
                                        "+\t\tentityManager.flush()",
                                        "+\t\tval user = userRepository.findByLogin(juergen.login)",
                                        "+\t\tassertThat(user).isEqualTo(juergen)",
                                        "+\t}",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "9a4d7411c9b0cb3b4885cb862bcec1ba5249069b",
                    "link": "https://github.com/spring-guides/tut-spring-boot-kotlin/commit/9a4d7411c9b0cb3b4885cb862bcec1ba5249069b",
                    "files": [
                        {
                            "name": "README.adoc",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " [[using-command-line]]",
                                        " === Using command line",
                                        " ",
                                        "-You can use the Initializr HTTP API https://docs.spring.io/initializr/docs/current/reference/htmlsingle/#command-line[from the command line] with, for example, curl on a UN*X like system:",
                                        "+You can use the Initializr HTTP API https://docs.spring.io/initializr/docs/current/reference/html/#command-line[from the command line] with, for example, curl on a UN*X like system:",
                                        " ",
                                        " [source]",
                                        " ----",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "3d4b305b04bb7ff064140b0b5c088585ae6d79fe",
                    "link": "https://github.com/spring-guides/tut-spring-boot-kotlin/commit/3d4b305b04bb7ff064140b0b5c088585ae6d79fe",
                    "files": [
                        {
                            "name": "README.adoc",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " ",
                                        " \t@GetMapping(\"/\")",
                                        " \tfun blog(model: Model): String {",
                                        "-\t\tmodel[\"title\"] = properties.title",
                                        "+\t\tmodel[\"title\"] = \"Blog\"",
                                        " \t\tmodel[\"articles\"] = repository.findAllByOrderByAddedAtDesc().map { it.render() }",
                                        " \t\treturn \"blog\"",
                                        " \t}",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "b8b31b2000f616a87f60ceacea688537d773aad2",
                    "link": "https://github.com/spring-guides/tut-spring-boot-kotlin/commit/b8b31b2000f616a87f60ceacea688537d773aad2",
                    "files": [
                        {
                            "name": "README.adoc",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " ",
                                        " Optional parameters with default values are defined at the last position in order to make it possible to omit them when using positional arguments (Kotlin also supports https://kotlinlang.org/docs/reference/functions.html#named-arguments[named arguments]). Notice that in Kotlin it is not unusual to group concise class declarations in the same file.",
                                        " ",
                                        "-We also declares our Spring Data JPA repositories as following.",
                                        "+We also declare our Spring Data JPA repositories as following.",
                                        " ",
                                        " `src/main/kotlin/blog/Repositories.kt`",
                                        " [source,kotlin]",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "388c3958406b748f4a06d614a46d924133588819",
                    "link": "https://github.com/spring-guides/tut-spring-boot-kotlin/commit/388c3958406b748f4a06d614a46d924133588819",
                    "files": [
                        {
                            "name": "README.adoc",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " import org.jetbrains.kotlin.gradle.tasks.KotlinCompile",
                                        " ",
                                        " plugins {",
                                        "-\tkotlin(\"plugin.jpa\") version \"1.3.61\"",
                                        "-\tid(\"org.springframework.boot\") version \"2.2.2.RELEASE\"",
                                        "+\tkotlin(\"plugin.jpa\") version \"1.4.32\"",
                                        "+\tid(\"org.springframework.boot\") version \"2.4.4\"",
                                        " \tid(\"io.spring.dependency-management\") version \"1.0.8.RELEASE\"",
                                        "-\tkotlin(\"jvm\") version \"1.3.61\"",
                                        "-\tkotlin(\"plugin.spring\") version \"1.3.61\"",
                                        "+\tkotlin(\"jvm\") version \"1.4.32\"",
                                        "+\tkotlin(\"plugin.spring\") version \"1.4.32\"",
                                        " }",
                                        " ----",
                                        " "
                                    ],
                                    [
                                        " ----",
                                        " plugins {",
                                        " \t...",
                                        "-\tkotlin(\"plugin.allopen\") version \"1.3.61\"",
                                        "+\tkotlin(\"plugin.allopen\") version \"1.4.32\"",
                                        " }",
                                        " ",
                                        " allOpen {"
                                    ],
                                    [
                                        " }",
                                        " testImplementation(\"org.junit.jupiter:junit-jupiter-api\")",
                                        " testRuntimeOnly(\"org.junit.jupiter:junit-jupiter-engine\")",
                                        "-testImplementation(\"com.ninja-squad:springmockk:1.1.3\")",
                                        "+testImplementation(\"com.ninja-squad:springmockk:3.0.1\")",
                                        " ----",
                                        " ",
                                        " Or with Maven:"
                                    ],
                                    [
                                        " <dependency>",
                                        " \t<groupId>com.ninja-squad</groupId>",
                                        " \t<artifactId>springmockk</artifactId>",
                                        "-\t<version>1.1.3</version>",
                                        "+\t<version>3.0.1</version>",
                                        " \t<scope>test</scope>",
                                        " </dependency>",
                                        " ----"
                                    ],
                                    [
                                        " ----",
                                        " plugins {",
                                        " \t...",
                                        "-\tkotlin(\"kapt\") version \"1.3.61\"",
                                        "+\tkotlin(\"kapt\") version \"1.4.32\"",
                                        " }",
                                        " ",
                                        " dependencies {",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "build.gradle.kts",
                            "content": {
                                "current": "import org.jetbrains.kotlin.gradle.tasks.KotlinCompile\n\nplugins {\n\tid(\"org.springframework.boot\") version \"2.4.4\"\n\tid(\"io.spring.dependency-management\") version \"1.0.11.RELEASE\"\n\tkotlin(\"jvm\") version \"1.4.32\"\n\tkotlin(\"plugin.spring\") version \"1.4.32\"\n\tkotlin(\"plugin.allopen\") version \"1.4.32\"\n\tkotlin(\"plugin.jpa\") version \"1.4.32\"\n\tkotlin(\"kapt\") version \"1.4.32\"\n}\n\ngroup = \"com.example\"\nversion = \"0.0.1-SNAPSHOT\"\njava.sourceCompatibility = JavaVersion.VERSION_1_8\n\nrepositories {\n\tmavenCentral()\n}\n\ndependencies {\n\timplementation(\"org.springframework.boot:spring-boot-starter-data-jpa\")\n\timplementation(\"org.springframework.boot:spring-boot-starter-mustache\")\n\timplementation(\"org.springframework.boot:spring-boot-starter-web\")\n\timplementation(\"com.fasterxml.jackson.module:jackson-module-kotlin\")\n\timplementation(\"org.jetbrains.kotlin:kotlin-reflect\")\n\timplementation(\"org.jetbrains.kotlin:kotlin-stdlib-jdk8\")\n\truntimeOnly(\"com.h2database:h2\")\n\truntimeOnly(\"org.springframework.boot:spring-boot-devtools\")\n\tkapt(\"org.springframework.boot:spring-boot-configuration-processor\")\n\ttestImplementation(\"org.springframework.boot:spring-boot-starter-test\") {\n\t\texclude(group = \"org.junit.vintage\", module = \"junit-vintage-engine\")\n\t\texclude(module = \"mockito-core\")\n\t}\n\ttestImplementation(\"org.junit.jupiter:junit-jupiter-api\")\n\ttestRuntimeOnly(\"org.junit.jupiter:junit-jupiter-engine\")\n\ttestImplementation(\"com.ninja-squad:springmockk:3.0.1\")\n}\n\ntasks.withType<KotlinCompile> {\n\tkotlinOptions {\n\t\tfreeCompilerArgs = listOf(\"-Xjsr305=strict\")\n\t\tjvmTarget = \"1.8\"\n\t}\n}\n\nallOpen {\n\tannotation(\"javax.persistence.Entity\")\n\tannotation(\"javax.persistence.Embeddable\")\n\tannotation(\"javax.persistence.MappedSuperclass\")\n}\n\ntasks.withType<Test> {\n\tuseJUnitPlatform()\n}\n",
                                "diffs": [
                                    [
                                        " import org.jetbrains.kotlin.gradle.tasks.KotlinCompile",
                                        " ",
                                        " plugins {",
                                        "-\tid(\"org.springframework.boot\") version \"2.2.2.RELEASE\"",
                                        "-\tid(\"io.spring.dependency-management\") version \"1.0.8.RELEASE\"",
                                        "-\tkotlin(\"jvm\") version \"1.3.61\"",
                                        "-\tkotlin(\"plugin.spring\") version \"1.3.61\"",
                                        "-\tkotlin(\"plugin.allopen\") version \"1.3.61\"",
                                        "-\tkotlin(\"plugin.jpa\") version \"1.3.61\"",
                                        "-\tkotlin(\"kapt\") version \"1.3.61\"",
                                        "+\tid(\"org.springframework.boot\") version \"2.4.4\"",
                                        "+\tid(\"io.spring.dependency-management\") version \"1.0.11.RELEASE\"",
                                        "+\tkotlin(\"jvm\") version \"1.4.32\"",
                                        "+\tkotlin(\"plugin.spring\") version \"1.4.32\"",
                                        "+\tkotlin(\"plugin.allopen\") version \"1.4.32\"",
                                        "+\tkotlin(\"plugin.jpa\") version \"1.4.32\"",
                                        "+\tkotlin(\"kapt\") version \"1.4.32\"",
                                        " }",
                                        " ",
                                        " group = \"com.example\""
                                    ],
                                    [
                                        " \t}",
                                        " \ttestImplementation(\"org.junit.jupiter:junit-jupiter-api\")",
                                        " \ttestRuntimeOnly(\"org.junit.jupiter:junit-jupiter-engine\")",
                                        "-\ttestImplementation(\"com.ninja-squad:springmockk:1.1.3\")",
                                        "+\ttestImplementation(\"com.ninja-squad:springmockk:3.0.1\")",
                                        " }",
                                        " ",
                                        " tasks.withType<KotlinCompile> {",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "gradle/wrapper/gradle-wrapper.properties",
                            "content": {
                                "current": "distributionBase=GRADLE_USER_HOME\ndistributionPath=wrapper/dists\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-6.8.3-bin.zip\nzipStoreBase=GRADLE_USER_HOME\nzipStorePath=wrapper/dists\n",
                                "diffs": [
                                    [
                                        " distributionBase=GRADLE_USER_HOME",
                                        " distributionPath=wrapper/dists",
                                        "-distributionUrl=https\\://services.gradle.org/distributions/gradle-5.6.4-bin.zip",
                                        "+distributionUrl=https\\://services.gradle.org/distributions/gradle-6.8.3-bin.zip",
                                        " zipStoreBase=GRADLE_USER_HOME",
                                        " zipStorePath=wrapper/dists",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "pom.xml",
                            "content": {
                                "current": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\n\t<groupId>com.example</groupId>\n\t<artifactId>blog</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\t<packaging>jar</packaging>\n\n\t<name>blog</name>\n\t<description>Demo project for Spring Boot</description>\n\n\t<parent>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\n\t\t<version>2.4.4</version>\n\t\t<relativePath/> <!-- lookup parent from repository -->\n\t</parent>\n\n\t<properties>\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\t\t<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n\t\t<java.version>1.8</java.version>\n\t\t<kotlin.version>1.4.32</kotlin.version>\n\t</properties>\n\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-mustache</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>com.fasterxml.jackson.module</groupId>\n\t\t\t<artifactId>jackson-module-kotlin</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.jetbrains.kotlin</groupId>\n\t\t\t<artifactId>kotlin-stdlib-jdk8</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.jetbrains.kotlin</groupId>\n\t\t\t<artifactId>kotlin-reflect</artifactId>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-devtools</artifactId>\n\t\t\t<scope>runtime</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>com.h2database</groupId>\n\t\t\t<artifactId>h2</artifactId>\n\t\t\t<scope>runtime</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n\t\t\t<scope>test</scope>\n\t\t\t<exclusions>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<groupId>org.junit.vintage</groupId>\n\t\t\t\t\t<artifactId>junit-vintage-engine</artifactId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<groupId>org.mockito</groupId>\n\t\t\t\t\t<artifactId>mockito-core</artifactId>\n\t\t\t\t</exclusion>\n\t\t\t</exclusions>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.junit.jupiter</groupId>\n\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>com.ninja-squad</groupId>\n\t\t\t<artifactId>springmockk</artifactId>\n\t\t\t<version>3.0.1</version>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t</dependencies>\n\n\t<build>\n\t\t<sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>\n\t\t<testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<artifactId>kotlin-maven-plugin</artifactId>\n\t\t\t\t<groupId>org.jetbrains.kotlin</groupId>\n\t\t\t\t<configuration>\n\t\t\t\t\t<args>\n\t\t\t\t\t\t<arg>-Xjsr305=strict</arg>\n\t\t\t\t\t</args>\n\t\t\t\t\t<compilerPlugins>\n\t\t\t\t\t\t<plugin>spring</plugin>\n\t\t\t\t\t\t<plugin>jpa</plugin>\n\t\t\t\t\t\t<plugin>all-open</plugin>\n\t\t\t\t\t</compilerPlugins>\n\t\t\t\t\t<pluginOptions>\n\t\t\t\t\t\t<option>all-open:annotation=javax.persistence.Entity</option>\n\t\t\t\t\t\t<option>all-open:annotation=javax.persistence.Embeddable</option>\n\t\t\t\t\t\t<option>all-open:annotation=javax.persistence.MappedSuperclass</option>\n\t\t\t\t\t</pluginOptions>\n\t\t\t\t</configuration>\n\t\t\t\t<dependencies>\n\t\t\t\t\t<dependency>\n\t\t\t\t\t\t<groupId>org.jetbrains.kotlin</groupId>\n\t\t\t\t\t\t<artifactId>kotlin-maven-allopen</artifactId>\n\t\t\t\t\t\t<version>${kotlin.version}</version>\n\t\t\t\t\t</dependency>\n\t\t\t\t\t<dependency>\n\t\t\t\t\t\t<groupId>org.jetbrains.kotlin</groupId>\n\t\t\t\t\t\t<artifactId>kotlin-maven-noarg</artifactId>\n\t\t\t\t\t\t<version>${kotlin.version}</version>\n\t\t\t\t\t</dependency>\n\t\t\t\t</dependencies>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>kapt</id>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>kapt</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<sourceDirs>\n\t\t\t\t\t\t\t\t<sourceDir>src/main/kotlin</sourceDir>\n\t\t\t\t\t\t\t</sourceDirs>\n\t\t\t\t\t\t\t<annotationProcessorPaths>\n\t\t\t\t\t\t\t\t<annotationProcessorPath>\n\t\t\t\t\t\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t\t\t\t\t\t<artifactId>spring-boot-configuration-processor</artifactId>\n\t\t\t\t\t\t\t\t\t<version>${project.parent.version}</version>\n\t\t\t\t\t\t\t\t</annotationProcessorPath>\n\t\t\t\t\t\t\t</annotationProcessorPaths>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n\n\n</project>\n",
                                "diffs": [
                                    [
                                        " \t<parent>",
                                        " \t\t<groupId>org.springframework.boot</groupId>",
                                        " \t\t<artifactId>spring-boot-starter-parent</artifactId>",
                                        "-\t\t<version>2.2.2.RELEASE</version>",
                                        "+\t\t<version>2.4.4</version>",
                                        " \t\t<relativePath/> <!-- lookup parent from repository -->",
                                        " \t</parent>",
                                        " "
                                    ],
                                    [
                                        " \t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>",
                                        " \t\t<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>",
                                        " \t\t<java.version>1.8</java.version>",
                                        "-\t\t<kotlin.version>1.3.61</kotlin.version>",
                                        "+\t\t<kotlin.version>1.4.32</kotlin.version>",
                                        " \t</properties>",
                                        " ",
                                        " \t<dependencies>"
                                    ],
                                    [
                                        " \t\t<dependency>",
                                        " \t\t\t<groupId>com.ninja-squad</groupId>",
                                        " \t\t\t<artifactId>springmockk</artifactId>",
                                        "-\t\t\t<version>1.1.3</version>",
                                        "+\t\t\t<version>3.0.1</version>",
                                        " \t\t\t<scope>test</scope>",
                                        " \t\t</dependency>",
                                        " \t</dependencies>",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "a25d4ef81458d7b0a1a05cc87bb9195b89404efb",
                    "link": "https://github.com/spring-guides/tut-spring-boot-kotlin/commit/a25d4ef81458d7b0a1a05cc87bb9195b89404efb",
                    "files": [
                        {
                            "name": "README.adoc",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " :icons: font",
                                        " :source-highlighter: prettify",
                                        " :project_id: tut-spring-boot-kotlin",
                                        "+:images: https://raw.githubusercontent.com/spring-guides/tut-spring-boot-kotlin/master/images",
                                        " :tabsize: 2",
                                        " ",
                                        "-This tutorial shows you how to build efficiently a sample blog application by combining the power of https://projects.spring.io/spring-boot/[Spring Boot] and https://kotlinlang.org/[Kotlin].",
                                        "+This tutorial shows you how to build efficiently a sample blog application by combining the power of https://spring.io/projects/spring-boot/[Spring Boot] and https://kotlinlang.org/[Kotlin].",
                                        " ",
                                        " If you are starting with Kotlin, you can learn the language by reading the https://kotlinlang.org/docs/reference/[reference documentation], following the online https://play.kotlinlang.org/[Kotlin Koans tutorial] or just using https://docs.spring.io/spring/docs/current/spring-framework-reference/[Spring Framework reference documentation] which now provides code samples in Kotlin.",
                                        " "
                                    ],
                                    [
                                        " \t\t- Spring Boot DevTools",
                                        " \t. Click \"Generate Project\".",
                                        " ",
                                        "-image::./images/initializr.png[]",
                                        "+image::{images}/initializr.png[]",
                                        " ",
                                        " The .zip file contains a standard project in the root directory, so you might want to create an empty directory before you unpack it.",
                                        " ",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "4fc16001420797eef32ec69f33b898007f632806",
                    "link": "https://github.com/spring-guides/tut-spring-boot-kotlin/commit/4fc16001420797eef32ec69f33b898007f632806",
                    "files": [
                        {
                            "name": "README.adoc",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " [[using-the-initializr-website]]",
                                        " === Using the Initializr Website",
                                        " ",
                                        "-Go to https://start.spring.io and choose Kotlin language. You can also directly go to https://start.spring.io/#!language=kotlin in order to get Kotlin preselected.",
                                        "-",
                                        "-Then choose Gradle build system, \"blog\" artifact, \"blog\" package name (in advanced settings) and also add \"Web\", \"Mustache\", \"JPA\" and \"H2\" dependencies as starting points, then click on \"Generate Project\".",
                                        "-",
                                        "-image::https://github.com/spring-guides/tut-spring-boot-kotlin/raw/master/images/initializr.png[]",
                                        "+Visit https://start.spring.io and choose the Kotlin language. Or visit https://start.spring.io/#!language=kotlin to preselect Kotlin.",
                                        "+",
                                        "+\t. Select \"Gradle Project\" as the build tool",
                                        "+\t. Click \"Switch to the full version\" and enter the following artifact coordinates:",
                                        "+\t\t- **Artifact:** `blog`",
                                        "+\t\t- **Package Name:** `blog`",
                                        "+\t. Add the following dependencies:",
                                        "+\t\t- Web",
                                        "+\t\t- Mustache",
                                        "+\t\t- JPA",
                                        "+\t\t- H2",
                                        "+\t. Click \"Generate Project\".",
                                        "+",
                                        "+image::./images/initializr.png[]",
                                        " ",
                                        " The .zip file contains a standard Gradle project in the root directory, so you might want to create an empty directory before you unpack it.",
                                        " ",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "afcffbae5ae185ebd921f3de3a04a42329d04e5a",
                    "link": "https://github.com/spring-guides/tut-spring-boot-kotlin/commit/afcffbae5ae185ebd921f3de3a04a42329d04e5a",
                    "files": [
                        {
                            "name": "mvnw",
                            "content": {
                                "current": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Maven2 Start Up Batch script\n#\n# Required ENV vars:\n# ------------------\n#   JAVA_HOME - location of a JDK home dir\n#\n# Optional ENV vars\n# -----------------\n#   M2_HOME - location of maven2's installed home dir\n#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n#     e.g. to debug Maven itself, use\n#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n# ----------------------------------------------------------------------------\n\nif [ -z \"$MAVEN_SKIP_RC\" ] ; then\n\n  if [ -f /etc/mavenrc ] ; then\n    . /etc/mavenrc\n  fi\n\n  if [ -f \"$HOME/.mavenrc\" ] ; then\n    . \"$HOME/.mavenrc\"\n  fi\n\nfi\n\n# OS specific support.  $var _must_ be set to either true or false.\ncygwin=false;\ndarwin=false;\nmingw=false\ncase \"`uname`\" in\n  CYGWIN*) cygwin=true ;;\n  MINGW*) mingw=true;;\n  Darwin*) darwin=true\n    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n    if [ -z \"$JAVA_HOME\" ]; then\n      if [ -x \"/usr/libexec/java_home\" ]; then\n        export JAVA_HOME=\"`/usr/libexec/java_home`\"\n      else\n        export JAVA_HOME=\"/Library/Java/Home\"\n      fi\n    fi\n    ;;\nesac\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  if [ -r /etc/gentoo-release ] ; then\n    JAVA_HOME=`java-config --jre-home`\n  fi\nfi\n\nif [ -z \"$M2_HOME\" ] ; then\n  ## resolve links - $0 may be a link to maven's home\n  PRG=\"$0\"\n\n  # need this for relative symlinks\n  while [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n      PRG=\"$link\"\n    else\n      PRG=\"`dirname \"$PRG\"`/$link\"\n    fi\n  done\n\n  saveddir=`pwd`\n\n  M2_HOME=`dirname \"$PRG\"`/..\n\n  # make it fully qualified\n  M2_HOME=`cd \"$M2_HOME\" && pwd`\n\n  cd \"$saveddir\"\n  # echo Using m2 at $M2_HOME\nfi\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched\nif $cygwin ; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=`cygpath --unix \"$M2_HOME\"`\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`\nfi\n\n# For Migwn, ensure paths are in UNIX format before anything is touched\nif $mingw ; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=\"`(cd \"$M2_HOME\"; pwd)`\"\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"\n  # TODO classpath?\nfi\n\nif [ -z \"$JAVA_HOME\" ]; then\n  javaExecutable=\"`which javac`\"\n  if [ -n \"$javaExecutable\" ] && ! [ \"`expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)'`\" = \"no\" ]; then\n    # readlink(1) is not available as standard on Solaris 10.\n    readLink=`which readlink`\n    if [ ! `expr \"$readLink\" : '\\([^ ]*\\)'` = \"no\" ]; then\n      if $darwin ; then\n        javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n        javaExecutable=\"`cd \\\"$javaHome\\\" && pwd -P`/javac\"\n      else\n        javaExecutable=\"`readlink -f \\\"$javaExecutable\\\"`\"\n      fi\n      javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n      javaHome=`expr \"$javaHome\" : '\\(.*\\)/bin'`\n      JAVA_HOME=\"$javaHome\"\n      export JAVA_HOME\n    fi\n  fi\nfi\n\nif [ -z \"$JAVACMD\" ] ; then\n  if [ -n \"$JAVA_HOME\"  ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n  else\n    JAVACMD=\"`which java`\"\n  fi\nfi\n\nif [ ! -x \"$JAVACMD\" ] ; then\n  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n  echo \"  We cannot execute $JAVACMD\" >&2\n  exit 1\nfi\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  echo \"Warning: JAVA_HOME environment variable is not set.\"\nfi\n\nCLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher\n\n# traverses directory structure from process work directory to filesystem root\n# first directory with .mvn subdirectory is considered project base directory\nfind_maven_basedir() {\n\n  if [ -z \"$1\" ]\n  then\n    echo \"Path not specified to find_maven_basedir\"\n    return 1\n  fi\n\n  basedir=\"$1\"\n  wdir=\"$1\"\n  while [ \"$wdir\" != '/' ] ; do\n    if [ -d \"$wdir\"/.mvn ] ; then\n      basedir=$wdir\n      break\n    fi\n    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n    if [ -d \"${wdir}\" ]; then\n      wdir=`cd \"$wdir/..\"; pwd`\n    fi\n    # end of workaround\n  done\n  echo \"${basedir}\"\n}\n\n# concatenates all lines of a file\nconcat_lines() {\n  if [ -f \"$1\" ]; then\n    echo \"$(tr -s '\\n' ' ' < \"$1\")\"\n  fi\n}\n\nBASE_DIR=`find_maven_basedir \"$(pwd)\"`\nif [ -z \"$BASE_DIR\" ]; then\n  exit 1;\nfi\n\nexport MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}\necho $MAVEN_PROJECTBASEDIR\nMAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=`cygpath --path --windows \"$M2_HOME\"`\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`\n  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n    MAVEN_PROJECTBASEDIR=`cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\"`\nfi\n\nWRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nexec \"$JAVACMD\" \\\n  $MAVEN_OPTS \\\n  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n  \"-Dmaven.home=${M2_HOME}\" \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\"\n",
                                "diffs": [
                                    [
                                        " # \"License\"); you may not use this file except in compliance",
                                        " # with the License.  You may obtain a copy of the License at",
                                        " #",
                                        "-#    http://www.apache.org/licenses/LICENSE-2.0",
                                        "+#    https://www.apache.org/licenses/LICENSE-2.0",
                                        " #",
                                        " # Unless required by applicable law or agreed to in writing,",
                                        " # software distributed under the License is distributed on an",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "mvnw.cmd",
                            "content": {
                                "current": "@REM ----------------------------------------------------------------------------\n@REM Licensed to the Apache Software Foundation (ASF) under one\n@REM or more contributor license agreements.  See the NOTICE file\n@REM distributed with this work for additional information\n@REM regarding copyright ownership.  The ASF licenses this file\n@REM to you under the Apache License, Version 2.0 (the\n@REM \"License\"); you may not use this file except in compliance\n@REM with the License.  You may obtain a copy of the License at\n@REM\n@REM    https://www.apache.org/licenses/LICENSE-2.0\n@REM\n@REM Unless required by applicable law or agreed to in writing,\n@REM software distributed under the License is distributed on an\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@REM KIND, either express or implied.  See the License for the\n@REM specific language governing permissions and limitations\n@REM under the License.\n@REM ----------------------------------------------------------------------------\n\n@REM ----------------------------------------------------------------------------\n@REM Maven2 Start Up Batch script\n@REM\n@REM Required ENV vars:\n@REM JAVA_HOME - location of a JDK home dir\n@REM\n@REM Optional ENV vars\n@REM M2_HOME - location of maven2's installed home dir\n@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a key stroke before ending\n@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n@REM     e.g. to debug Maven itself, use\n@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n@REM ----------------------------------------------------------------------------\n\n@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n@echo off\n@REM enable echoing my setting MAVEN_BATCH_ECHO to 'on'\n@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n\n@REM set %HOME% to equivalent of $HOME\nif \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n\n@REM Execute a user defined script before this one\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n@REM check for pre script, once with legacy .bat ending and once with .cmd ending\nif exist \"%HOME%\\mavenrc_pre.bat\" call \"%HOME%\\mavenrc_pre.bat\"\nif exist \"%HOME%\\mavenrc_pre.cmd\" call \"%HOME%\\mavenrc_pre.cmd\"\n:skipRcPre\n\n@setlocal\n\nset ERROR_CODE=0\n\n@REM To isolate internal variables from possible post scripts, we use another setlocal\n@setlocal\n\n@REM ==== START VALIDATION ====\nif not \"%JAVA_HOME%\" == \"\" goto OkJHome\n\necho.\necho Error: JAVA_HOME not found in your environment. >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n:OkJHome\nif exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n\necho.\necho Error: JAVA_HOME is set to an invalid directory. >&2\necho JAVA_HOME = \"%JAVA_HOME%\" >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n@REM ==== END VALIDATION ====\n\n:init\n\n@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n@REM Fallback to current working directory if not found.\n\nset MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\nIF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n\nset EXEC_DIR=%CD%\nset WDIR=%EXEC_DIR%\n:findBaseDir\nIF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\ncd ..\nIF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\nset WDIR=%CD%\ngoto findBaseDir\n\n:baseDirFound\nset MAVEN_PROJECTBASEDIR=%WDIR%\ncd \"%EXEC_DIR%\"\ngoto endDetectBaseDir\n\n:baseDirNotFound\nset MAVEN_PROJECTBASEDIR=%EXEC_DIR%\ncd \"%EXEC_DIR%\"\n\n:endDetectBaseDir\n\nIF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n\n@setlocal EnableExtensions EnableDelayedExpansion\nfor /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n\n:endReadAdditionalConfig\n\nSET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\n\nset WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\nset WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\n%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\nif ERRORLEVEL 1 goto error\ngoto end\n\n:error\nset ERROR_CODE=1\n\n:end\n@endlocal & set ERROR_CODE=%ERROR_CODE%\n\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPost\n@REM check for post script, once with legacy .bat ending and once with .cmd ending\nif exist \"%HOME%\\mavenrc_post.bat\" call \"%HOME%\\mavenrc_post.bat\"\nif exist \"%HOME%\\mavenrc_post.cmd\" call \"%HOME%\\mavenrc_post.cmd\"\n:skipRcPost\n\n@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\nif \"%MAVEN_BATCH_PAUSE%\" == \"on\" pause\n\nif \"%MAVEN_TERMINATE_CMD%\" == \"on\" exit %ERROR_CODE%\n\nexit /B %ERROR_CODE%\n",
                                "diffs": [
                                    [
                                        " @REM \"License\"); you may not use this file except in compliance",
                                        " @REM with the License.  You may obtain a copy of the License at",
                                        " @REM",
                                        "-@REM    http://www.apache.org/licenses/LICENSE-2.0",
                                        "+@REM    https://www.apache.org/licenses/LICENSE-2.0",
                                        " @REM",
                                        " @REM Unless required by applicable law or agreed to in writing,",
                                        " @REM software distributed under the License is distributed on an",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "a71b0c1fb27bb68049efeee7514781372198fc56",
                    "link": "https://github.com/spring-guides/tut-spring-boot-kotlin/commit/a71b0c1fb27bb68049efeee7514781372198fc56",
                    "files": [
                        {
                            "name": "README.adoc",
                            "content": {
                                "current": ":toc:\n:icons: font\n:source-highlighter: prettify\n:project_id: tut-spring-boot-kotlin\n:images: https://raw.githubusercontent.com/spring-guides/tut-spring-boot-kotlin/master/images\n:tabsize: 2\n\nThis tutorial shows you how to build efficiently a sample blog application by combining the power of https://spring.io/projects/spring-boot/[Spring Boot] and https://kotlinlang.org/[Kotlin].\n\nIf you are starting with Kotlin, you can learn the language by reading the https://kotlinlang.org/docs/reference/[reference documentation], following the online https://play.kotlinlang.org/[Kotlin Koans tutorial] or just using https://docs.spring.io/spring/docs/current/spring-framework-reference/[Spring Framework reference documentation] which now provides code samples in Kotlin.\n\nSpring Kotlin support is documented in the https://docs.spring.io/spring/docs/current/spring-framework-reference/languages.html#kotlin[Spring Framework] and https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-kotlin.html[Spring Boot] reference documentation. If you need help, search or ask questions with the https://stackoverflow.com/questions/tagged/kotlin+spring[`spring` and `kotlin` tags on StackOverflow] or come discuss in the `#spring` channel of https://slack.kotlinlang.org/[Kotlin Slack].\n\n== Creating a New Project\n\nFirst we need to create a Spring Boot application, which can be done in a number of ways.\n\n[[using-the-initializr-website]]\n=== Using the Initializr Website\n\nVisit https://start.spring.io and choose the Kotlin language.\nGradle is the most commonly used build tool in Kotlin, and it provides a Kotlin DSL which is used by default when generating a Kotlin project, so this is the recommended choice. But you can also use Maven if you are more comfortable with it.\nNotice that you can use https://start.spring.io/#!language=kotlin&type=gradle-project-kotlin to have Kotlin and Gradle selected by default.\n\n\t. Select \"Gradle - Kotlin\" or \"Maven\" depending on which build tool you want to use\n\t. Enter the following artifact coordinates: `blog`\n\t. Add the following dependencies:\n\t\t- Spring Web\n\t\t- Mustache\n\t\t- Spring Data JPA\n\t\t- H2 Database\n\t\t- Spring Boot DevTools\n\t. Click \"Generate Project\".\n\nThe .zip file contains a standard project in the root directory, so you might want to create an empty directory before you unpack it.\n\n[[using-command-line]]\n=== Using command line\n\nYou can use the Initializr HTTP API https://docs.spring.io/initializr/docs/current/reference/html/#command-line[from the command line] with, for example, curl on a UN*X like system:\n\n[source]\n----\n$ mkdir blog && cd blog\n$ curl https://start.spring.io/starter.zip -d language=kotlin -d type=gradle-project-kotlin -d dependencies=web,mustache,jpa,h2,devtools -d packageName=com.example.blog -d name=Blog -o blog.zip\n----\n\nAdd `-d type=gradle-project` if you want to use Gradle.\n\n[[using-intellij-idea]]\n=== Using IntelliJ IDEA\n\nSpring Initializr is also integrated in IntelliJ IDEA Ultimate edition and allows you to create and import a new project without having to leave the IDE for the command-line or the web UI.\n\nTo access the wizard, go to File | New | Project, and select Spring Initializr.\n\nFollow the steps of the wizard to use the following parameters:\n\n - Artifact: \"blog\"\n - Type: \"Gradle - Kotlin\" or \"Maven\"\n - Language: Kotlin\n - Name: \"Blog\"\n - Dependencies: \"Spring Web Starter\", \"Mustache\", \"Spring Data JPA\", \"H2 Database\" and \"Spring Boot DevTools\"\n\n[[gradle-build]]\n== Understanding the Gradle Build\n\nIf you're using a Maven Build, you can <<maven-build, skip to the dedicated section>>.\n\n=== Plugins\n\nIn addition to the obvious https://kotlinlang.org/docs/gradle.html[Kotlin Gradle plugin], the default configuration declares the https://kotlinlang.org/docs/all-open-plugin.html#spring-support[kotlin-spring plugin] which automatically opens classes and methods (unlike in Java, the default qualifier is `final` in Kotlin) annotated or meta-annotated with Spring annotations. This is useful to be able to create `@Configuration` or `@Transactional` beans without having to add the `open` qualifier required by CGLIB proxies for example.\n\nIn order to be able to use Kotlin non-nullable properties with JPA, https://kotlinlang.org/docs/reference/compiler-plugins.html#jpa-support[Kotlin JPA plugin] is also enabled. It generates no-arg constructors for any class annotated with `@Entity`, `@MappedSuperclass` or `@Embeddable`.\n\n\n`build.gradle.kts`\n[source,kotlin]\n----\nimport org.jetbrains.kotlin.gradle.tasks.KotlinCompile\n\nplugins {\n\tid(\"org.springframework.boot\") version \"3.0.1\"\n\tid(\"io.spring.dependency-management\") version \"1.1.0\"\n\tkotlin(\"jvm\") version \"1.8.0\"\n\tkotlin(\"plugin.spring\") version \"1.8.0\"\n\tkotlin(\"plugin.jpa\") version \"1.8.0\"\n}\n----\n\n=== Compiler options\n\nOne of Kotlin's key features is https://kotlinlang.org/docs/null-safety.html[null-safety] - which cleanly deals with `null` values at compile time rather than bumping into the famous `NullPointerException` at runtime. This makes applications safer through nullability declarations and expressing \"value or no value\" semantics without paying the cost of wrappers like `Optional`. Note that Kotlin allows using functional constructs with nullable values; check out this https://www.baeldung.com/kotlin/null-safety[comprehensive guide to Kotlin null-safety].\n\nAlthough Java does not allow one to express null-safety in its type-system, Spring Framework provides null-safety of the whole Spring Framework API via tooling-friendly annotations declared in the `org.springframework.lang` package. By default, types from Java APIs used in Kotlin are recognized as https://kotlinlang.org/docs/reference/java-interop.html#null-safety-and-platform-types[platform types] for which null-checks are relaxed. https://kotlinlang.org/docs/java-interop.html#jsr-305-support[Kotlin support for JSR 305 annotations] + Spring nullability annotations provide null-safety for the whole Spring Framework API to Kotlin developers, with the advantage of dealing with `null` related issues at compile time.\n\nThis feature can be enabled by adding the `-Xjsr305` compiler flag with the `strict` options.\n\n`build.gradle.kts`\n[source,kotlin]\n----\ntasks.withType<KotlinCompile> {\n\tkotlinOptions {\n\t\tfreeCompilerArgs += \"-Xjsr305=strict\"\n\t}\n}\n----\n\n=== Dependencies\n\n2 Kotlin specific libraries are required (the standard library is added automatically with Gradle) for such Spring Boot web application and configured by default:\n\n - `kotlin-reflect` is Kotlin reflection library\n - `jackson-module-kotlin` adds support for serialization/deserialization of Kotlin classes and data classes (single constructor classes can be used automatically, and those with secondary constructors or static factories are also supported)\n\n`build.gradle.kts`\n[source,kotlin]\n----\ndependencies {\n\timplementation(\"org.springframework.boot:spring-boot-starter-data-jpa\")\n\timplementation(\"org.springframework.boot:spring-boot-starter-mustache\")\n\timplementation(\"org.springframework.boot:spring-boot-starter-web\")\n\timplementation(\"com.fasterxml.jackson.module:jackson-module-kotlin\")\n\timplementation(\"org.jetbrains.kotlin:kotlin-reflect\")\n\truntimeOnly(\"com.h2database:h2\")\n\truntimeOnly(\"org.springframework.boot:spring-boot-devtools\")\n\ttestImplementation(\"org.springframework.boot:spring-boot-starter-test\")\n}\n----\n\nRecent versions of H2 require special configuration to properly escape reserved keywords like `user`.\n\n`src/main/resources/application.properties`\n[source,properties]\n----\nspring.jpa.properties.hibernate.globally_quoted_identifiers=true\nspring.jpa.properties.hibernate.globally_quoted_identifiers_skip_column_definitions=true\n----\n\nSpring Boot Gradle plugin automatically uses the Kotlin version declared via the Kotlin Gradle plugin.\n\nYou can now take a <<understanding-generated-app, deeper look at the generated application>>.\n\n[[maven-build]]\n== Understanding the Maven Build\n\n=== Plugins\n\nIn addition to the obvious https://kotlinlang.org/docs/reference/using-maven.html[Kotlin Maven plugin], the default configuration declares the https://kotlinlang.org/docs/reference/compiler-plugins.html#spring-support[kotlin-spring plugin] which automatically opens classes and methods (unlike in Java, the default qualifier is `final` in Kotlin) annotated or meta-annotated with Spring annotations. This is useful to be able to create `@Configuration` or `@Transactional` beans without having to add the `open` qualifier required by CGLIB proxies for example.\n\nIn order to be able to use Kotlin non-nullable properties with JPA, https://kotlinlang.org/docs/reference/compiler-plugins.html#jpa-support[Kotlin JPA plugin] is also enabled. It generates no-arg constructors for any class annotated with `@Entity`, `@MappedSuperclass` or `@Embeddable`.\n\n`pom.xml`\n[source,xml]\n----\n<build>\n\t\t<sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>\n\t\t<testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.jetbrains.kotlin</groupId>\n\t\t\t\t<artifactId>kotlin-maven-plugin</artifactId>\n\t\t\t\t<configuration>\n\t\t\t\t\t<compilerPlugins>\n\t\t\t\t\t\t<plugin>jpa</plugin>\n\t\t\t\t\t\t<plugin>spring</plugin>\n\t\t\t\t\t</compilerPlugins>\n\t\t\t\t\t<args>\n\t\t\t\t\t\t<arg>-Xjsr305=strict</arg>\n\t\t\t\t\t</args>\n\t\t\t\t</configuration>\n\t\t\t\t<dependencies>\n\t\t\t\t\t<dependency>\n\t\t\t\t\t\t<groupId>org.jetbrains.kotlin</groupId>\n\t\t\t\t\t\t<artifactId>kotlin-maven-noarg</artifactId>\n\t\t\t\t\t\t<version>${kotlin.version}</version>\n\t\t\t\t\t</dependency>\n\t\t\t\t\t<dependency>\n\t\t\t\t\t\t<groupId>org.jetbrains.kotlin</groupId>\n\t\t\t\t\t\t<artifactId>kotlin-maven-allopen</artifactId>\n\t\t\t\t\t\t<version>${kotlin.version}</version>\n\t\t\t\t\t</dependency>\n\t\t\t\t</dependencies>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n----\n\nOne of Kotlin's key features is https://kotlinlang.org/docs/null-safety.html[null-safety] - which cleanly deals with `null` values at compile time rather than bumping into the famous `NullPointerException` at runtime. This makes applications safer through nullability declarations and expressing \"value or no value\" semantics without paying the cost of wrappers like `Optional`. Note that Kotlin allows using functional constructs with nullable values; check out this https://www.baeldung.com/kotlin-null-safety[comprehensive guide to Kotlin null-safety].\n\nAlthough Java does not allow one to express null-safety in its type-system, Spring Framework provides null-safety of the whole Spring Framework API via tooling-friendly annotations declared in the `org.springframework.lang` package. By default, types from Java APIs used in Kotlin are recognized as https://kotlinlang.org/docs/reference/java-interop.html#null-safety-and-platform-types[platform types] for which null-checks are relaxed. https://kotlinlang.org/docs/reference/java-interop.html#jsr-305-support[Kotlin support for JSR 305 annotations] + Spring nullability annotations provide null-safety for the whole Spring Framework API to Kotlin developers, with the advantage of dealing with `null` related issues at compile time.\n\nThis feature can be enabled by adding the `-Xjsr305` compiler flag with the `strict` options.\n\nNotice also that Kotlin compiler is configured to generate Java 8 bytecode (Java 6 by default).\n\n=== Dependencies\n\n3 Kotlin specific libraries are required for such Spring Boot web application and configured by default:\n\n - `kotlin-stdlib` is the Kotlin standard library\n - `kotlin-reflect` is Kotlin reflection library\n - `jackson-module-kotlin` adds support for serialization/deserialization of Kotlin classes and data classes (single constructor classes can be used automatically, and those with secondary constructors or static factories are also supported)\n\n`pom.xml`\n[source,xml]\n----\n<dependencies>\n\t<dependency>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\n\t</dependency>\n\t<dependency>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-mustache</artifactId>\n\t</dependency>\n\t<dependency>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t</dependency>\n\t<dependency>\n\t\t<groupId>com.fasterxml.jackson.module</groupId>\n\t\t<artifactId>jackson-module-kotlin</artifactId>\n\t</dependency>\n\t<dependency>\n\t\t<groupId>org.jetbrains.kotlin</groupId>\n\t\t<artifactId>kotlin-reflect</artifactId>\n\t</dependency>\n\t<dependency>\n\t\t<groupId>org.jetbrains.kotlin</groupId>\n\t\t<artifactId>kotlin-stdlib</artifactId>\n\t</dependency>\n\n\t<dependency>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-devtools</artifactId>\n\t\t<scope>runtime</scope>\n\t</dependency>\n\t<dependency>\n\t\t<groupId>com.h2database</groupId>\n\t\t<artifactId>h2</artifactId>\n\t\t<scope>runtime</scope>\n\t</dependency>\n\t<dependency>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-test</artifactId>\n\t\t<scope>test</scope>\n\t</dependency>\n</dependencies>\n----\n\n[[understanding-generated-app]]\n== Understanding the generated Application\n\n`src/main/kotlin/com/example/blog/BlogApplication.kt`\n[source,kotlin]\n----\npackage com.example.blog\n\nimport org.springframework.boot.autoconfigure.SpringBootApplication\nimport org.springframework.boot.runApplication\n\n@SpringBootApplication\nclass BlogApplication\n\nfun main(args: Array<String>) {\n\trunApplication<BlogApplication>(*args)\n}\n----\n\nCompared to Java, you can notice the lack of semicolons, the lack of brackets on empty class (you can add some if you need to declare beans via `@Bean` annotation) and the use of `runApplication` top level function. `runApplication<BlogApplication>(*args)` is Kotlin idiomatic alternative to `SpringApplication.run(BlogApplication::class.java, *args)` and can be used to customize the application with following syntax.\n\n`src/main/kotlin/com/example/blog/BlogApplication.kt`\n[source,kotlin]\n----\nfun main(args: Array<String>) {\n\trunApplication<BlogApplication>(*args) {\n\t\tsetBannerMode(Banner.Mode.OFF)\n\t}\n}\n----\n\n== Writing your first Kotlin controller\n\nLet's create a simple controller to display a simple web page.\n\n`src/main/kotlin/com/example/blog/HtmlController.kt`\n[source,kotlin]\n----\npackage com.example.blog\n\nimport org.springframework.stereotype.Controller\nimport org.springframework.ui.Model\nimport org.springframework.ui.set\nimport org.springframework.web.bind.annotation.GetMapping\n\n@Controller\nclass HtmlController {\n\n\t@GetMapping(\"/\")\n\tfun blog(model: Model): String {\n\t\tmodel[\"title\"] = \"Blog\"\n\t\treturn \"blog\"\n\t}\n\n}\n----\n\nNotice that we are using here a https://kotlinlang.org/docs/extensions.html[Kotlin extension] that allows to add Kotlin functions or operators to existing Spring types. Here we import the `org.springframework.ui.set` extension function in order to be able to write `model[\"title\"] = \"Blog\"` instead of `model.addAttribute(\"title\", \"Blog\")`.\nThe https://docs.spring.io/spring-framework/docs/current/kdoc-api/[Spring Framework KDoc API] lists all the Kotlin extensions provided to enrich the Java API.\n\nWe also need to create the associated Mustache templates.\n\n`src/main/resources/templates/header.mustache`\n[source]\n----\n<html>\n<head>\n\t<title>{{title}}</title>\n</head>\n<body>\n----\n\n`src/main/resources/templates/footer.mustache`\n[source]\n----\n</body>\n</html>\n----\n\n`src/main/resources/templates/blog.mustache`\n[source]\n----\n{{> header}}\n\n<h1>{{title}}</h1>\n\n{{> footer}}\n----\n\nStart the web application by running the `main` function of `BlogApplication.kt`, and go to `http://localhost:8080/`, you should see a sober web page with a \"Blog\" headline. \n\n== Testing with JUnit 5\n\nJUnit 5 now used by default in Spring Boot provides various features very handy with Kotlin, including https://docs.spring.io/spring/docs/current/spring-framework-reference/testing.html#testcontext-junit-jupiter-di[autowiring of constructor/method parameters] which allows to use non-nullable `val` properties and the possibility to use `@BeforeAll`/`@AfterAll` on regular non-static methods.\n\n=== Writing JUnit 5 tests in Kotlin\n\nFor the sake of this example, let's create an integration test in order to demonstrate various features:\n\n - We use real sentences between backticks instead of camel-case to provide expressive test function names\n - JUnit 5 allows to inject constructor and method parameters, which is a good fit with Kotlin read-only and non-nullable properties\n - This code leverages `getForObject` and `getForEntity` Kotlin extensions (you need to import them)\n\n`src/test/kotlin/com/example/blog/IntegrationTests.kt`\n[source,kotlin]\n----\n@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\nclass IntegrationTests(@Autowired val restTemplate: TestRestTemplate) {\n\n\t@Test\n\tfun `Assert blog page title, content and status code`() {\n\t\tval entity = restTemplate.getForEntity<String>(\"/\")\n\t\tassertThat(entity.statusCode).isEqualTo(HttpStatus.OK)\n\t\tassertThat(entity.body).contains(\"<h1>Blog</h1>\")\n\t}\n\n}\n----\n\n=== Test instance lifecycle\n\nSometimes you need to execute a method before or after all tests of a given class. Like Junit 4, JUnit 5 requires by default these methods to be static (which translates to https://kotlinlang.org/docs/object-declarations.html#companion-objects[`companion object`] in Kotlin, which is quite verbose and not straightforward) because test classes are instantiated one time per test.\n\nBut Junit 5 allows you to change this default behavior and instantiate test classes one time per class. This can be done in https://junit.org/junit5/docs/current/user-guide/#writing-tests-test-instance-lifecycle[various ways], here we will use a property file to change the default behavior for the whole project:\n\n`src/test/resources/junit-platform.properties`\n[source,properties]\n----\njunit.jupiter.testinstance.lifecycle.default = per_class\n----\n\nWith this configuration, we can now use `@BeforeAll` and `@AfterAll` annotations on regular methods like shown in updated version of `IntegrationTests` above.\n\n`src/test/kotlin/com/example/blog/IntegrationTests.kt`\n[source,kotlin]\n----\n@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\nclass IntegrationTests(@Autowired val restTemplate: TestRestTemplate) {\n\n\t@BeforeAll\n\tfun setup() {\n\t\tprintln(\">> Setup\")\n\t}\n\n\t@Test\n\tfun `Assert blog page title, content and status code`() {\n\t\tprintln(\">> Assert blog page title, content and status code\")\n\t\tval entity = restTemplate.getForEntity<String>(\"/\")\n\t\tassertThat(entity.statusCode).isEqualTo(HttpStatus.OK)\n\t\tassertThat(entity.body).contains(\"<h1>Blog</h1>\")\n\t}\n\n\t@Test\n\tfun `Assert article page title, content and status code`() {\n\t\tprintln(\">> TODO\")\n\t}\n\n\t@AfterAll\n\tfun teardown() {\n\t\tprintln(\">> Tear down\")\n\t}\n\n}\n----\n\n== Creating your own extensions\n\nInstead of using util classes with abstract methods like in Java, it is usual in Kotlin to provide such functionalities via Kotlin extensions. Here we are going to add a `format()` function to the existing `LocalDateTime` type in order to generate text with the English date format.\n\n`src/main/kotlin/com/example/blog/Extensions.kt`\n[source,kotlin]\n----\nfun LocalDateTime.format(): String = this.format(englishDateFormatter)\n\nprivate val daysLookup = (1..31).associate { it.toLong() to getOrdinal(it) }\n\nprivate val englishDateFormatter = DateTimeFormatterBuilder()\n\t\t.appendPattern(\"yyyy-MM-dd\")\n\t\t.appendLiteral(\" \")\n\t\t.appendText(ChronoField.DAY_OF_MONTH, daysLookup)\n\t\t.appendLiteral(\" \")\n\t\t.appendPattern(\"yyyy\")\n\t\t.toFormatter(Locale.ENGLISH)\n\nprivate fun getOrdinal(n: Int) = when {\n\tn in 11..13 -> \"${n}th\"\n\tn % 10 == 1 -> \"${n}st\"\n\tn % 10 == 2 -> \"${n}nd\"\n\tn % 10 == 3 -> \"${n}rd\"\n\telse -> \"${n}th\"\n}\n\nfun String.toSlug() = lowercase(Locale.getDefault())\n\t\t.replace(\"\\n\", \" \")\n\t\t.replace(\"[^a-z\\\\d\\\\s]\".toRegex(), \" \")\n\t\t.split(\" \")\n\t\t.joinToString(\"-\")\n\t\t.replace(\"-+\".toRegex(), \"-\")\n----\n\nWe will leverage these extensions in the next section.\n\n== Persistence with JPA\n\nIn order to make lazy fetching working as expected, entities should be `open` as described in https://youtrack.jetbrains.com/issue/KT-28525[KT-28525]. We are going to use the Kotlin `allopen` plugin for that purpose.\n\nWith Gradle:\n\n`build.gradle.kts`\n[source,kotlin]\n----\nplugins {\n\t...\n\tkotlin(\"plugin.allopen\") version \"1.8.0\"\n}\n\nallOpen {\n\tannotation(\"jakarta.persistence.Entity\")\n\tannotation(\"jakarta.persistence.Embeddable\")\n\tannotation(\"jakarta.persistence.MappedSuperclass\")\n}\n----\n\nOr with Maven:\n\n`pom.xml`\n[source,xml]\n----\n<plugin>\n\t<artifactId>kotlin-maven-plugin</artifactId>\n\t<groupId>org.jetbrains.kotlin</groupId>\n\t<configuration>\n\t\t...\n\t\t<compilerPlugins>\n\t\t\t...\n\t\t\t<plugin>all-open</plugin>\n\t\t</compilerPlugins>\n\t\t<pluginOptions>\n\t\t\t<option>all-open:annotation=jakarta.persistence.Entity</option>\n\t\t\t<option>all-open:annotation=jakarta.persistence.Embeddable</option>\n\t\t\t<option>all-open:annotation=jakarta.persistence.MappedSuperclass</option>\n\t\t</pluginOptions>\n\t</configuration>\n</plugin>\n----\n\nThen we create our model by using Kotlin https://kotlinlang.org/docs/reference/classes.html#constructors[primary constructor concise syntax] which allows to declare at the same time the properties and the constructor parameters.\n\n`src/main/kotlin/com/example/blog/Entities.kt`\n[source,kotlin]\n----\n@Entity\nclass Article(\n\t\tvar title: String,\n\t\tvar headline: String,\n\t\tvar content: String,\n\t\t@ManyToOne var author: User,\n\t\tvar slug: String = title.toSlug(),\n\t\tvar addedAt: LocalDateTime = LocalDateTime.now(),\n\t\t@Id @GeneratedValue var id: Long? = null)\n\n@Entity\nclass User(\n\t\tvar login: String,\n\t\tvar firstname: String,\n\t\tvar lastname: String,\n\t\tvar description: String? = null,\n\t\t@Id @GeneratedValue var id: Long? = null)\n----\n\nNotice that we are using here our `String.toSlug()` extension to provide a default argument to the `slug` parameter of `Article` constructor. Optional parameters with default values are defined at the last position in order to make it possible to omit them when using positional arguments (Kotlin also supports https://kotlinlang.org/docs/reference/functions.html#named-arguments[named arguments]). Notice that in Kotlin it is not unusual to group concise class declarations in the same file.\n\nNOTE: Here we don't use https://kotlinlang.org/docs/data-classes.html[`data` classes] with `val` properties because JPA is not designed to work with immutable classes or the methods generated automatically by `data` classes. If you are using other Spring Data flavor, most of them are designed to support such constructs so you should use classes like `data class User(val login: String, ...)` when using Spring Data MongoDB, Spring Data JDBC, etc.\n\nNOTE: While Spring Data JPA makes it possible to use natural IDs (it could have been the `login` property in `User` class) via https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#jpa.entity-persistence.saving-entites[`Persistable`], it is not a good fit with Kotlin due to https://youtrack.jetbrains.com/issue/KT-6653[KT-6653], that's why it is recommended to always use entities with generated IDs in Kotlin.\n\n\nWe also declare our Spring Data JPA repositories as following.\n\n`src/main/kotlin/com/example/blog/Repositories.kt`\n[source,kotlin]\n----\ninterface ArticleRepository : CrudRepository<Article, Long> {\n\tfun findBySlug(slug: String): Article?\n\tfun findAllByOrderByAddedAtDesc(): Iterable<Article>\n}\n\ninterface UserRepository : CrudRepository<User, Long> {\n\tfun findByLogin(login: String): User?\n}\n----\n\nAnd we write JPA tests to check whether basic use cases work as expected.\n\n`src/test/kotlin/com/example/blog/RepositoriesTests.kt`\n[source,kotlin]\n----\n@DataJpaTest\nclass RepositoriesTests @Autowired constructor(\n\t\tval entityManager: TestEntityManager,\n\t\tval userRepository: UserRepository,\n\t\tval articleRepository: ArticleRepository) {\n\n\t@Test\n\tfun `When findByIdOrNull then return Article`() {\n\t\tval johnDoe = User(\"johnDoe\", \"John\", \"Doe\")\n\t\tentityManager.persist(johnDoe)\n\t\tval article = Article(\"Lorem\", \"Lorem\", \"dolor sit amet\", johnDoe)\n\t\tentityManager.persist(article)\n\t\tentityManager.flush()\n\t\tval found = articleRepository.findByIdOrNull(article.id!!)\n\t\tassertThat(found).isEqualTo(article)\n\t}\n\n\t@Test\n\tfun `When findByLogin then return User`() {\n\t\tval johnDoe = User(\"johnDoe\", \"John\", \"Doe\")\n\t\tentityManager.persist(johnDoe)\n\t\tentityManager.flush()\n\t\tval user = userRepository.findByLogin(johnDoe.login)\n\t\tassertThat(user).isEqualTo(johnDoe)\n\t}\n}\n----\n\nNOTE: We use here the `CrudRepository.findByIdOrNull` Kotlin extension provided by default with Spring Data, which is a nullable variant of the `Optional` based `CrudRepository.findById`. Read the great https://medium.com/@elizarov/null-is-your-friend-not-a-mistake-b63ff1751dd5[Null is your friend, not a mistake] blog post for more details.\n\n== Implementing the blog engine\n\nWe update the \"blog\" Mustache templates.\n\n`src/main/resources/templates/blog.mustache`\n[source]\n----\n{{> header}}\n\n<h1>{{title}}</h1>\n\n<div class=\"articles\">\n\n\t{{#articles}}\n\t\t<section>\n\t\t\t<header class=\"article-header\">\n\t\t\t\t<h2 class=\"article-title\"><a href=\"/article/{{slug}}\">{{title}}</a></h2>\n\t\t\t\t<div class=\"article-meta\">By  <strong>{{author.firstname}}</strong>, on <strong>{{addedAt}}</strong></div>\n\t\t\t</header>\n\t\t\t<div class=\"article-description\">\n\t\t\t\t{{headline}}\n\t\t\t</div>\n\t\t</section>\n\t{{/articles}}\n</div>\n\n{{> footer}}\n----\n\nAnd we create an \"article\" new one.\n\n`src/main/resources/templates/article.mustache`\n[source]\n----\n{{> header}}\n\n<section class=\"article\">\n\t<header class=\"article-header\">\n\t\t<h1 class=\"article-title\">{{article.title}}</h1>\n\t\t<p class=\"article-meta\">By  <strong>{{article.author.firstname}}</strong>, on <strong>{{article.addedAt}}</strong></p>\n\t</header>\n\n\t<div class=\"article-description\">\n\t\t{{article.headline}}\n\n\t\t{{article.content}}\n\t</div>\n</section>\n\n{{> footer}}\n----\n\nWe update the `HtmlController` in order to render blog and article pages with the formatted date. `ArticleRepository` and `MarkdownConverter` constructor parameters will be automatically autowired since `HtmlController` has a single constructor (implicit `@Autowired`).\n\n`src/main/kotlin/com/example/blog/HtmlController.kt`\n[source,kotlin]\n----\n@Controller\nclass HtmlController(private val repository: ArticleRepository) {\n\n\t@GetMapping(\"/\")\n\tfun blog(model: Model): String {\n\t\tmodel[\"title\"] = \"Blog\"\n\t\tmodel[\"articles\"] = repository.findAllByOrderByAddedAtDesc().map { it.render() }\n\t\treturn \"blog\"\n\t}\n\n\t@GetMapping(\"/article/{slug}\")\n\tfun article(@PathVariable slug: String, model: Model): String {\n\t\tval article = repository\n\t\t\t\t.findBySlug(slug)\n\t\t\t\t?.render()\n\t\t\t\t?: throw ResponseStatusException(HttpStatus.NOT_FOUND, \"This article does not exist\")\n\t\tmodel[\"title\"] = article.title\n\t\tmodel[\"article\"] = article\n\t\treturn \"article\"\n\t}\n\n\tfun Article.render() = RenderedArticle(\n\t\t\tslug,\n\t\t\ttitle,\n\t\t\theadline,\n\t\t\tcontent,\n\t\t\tauthor,\n\t\t\taddedAt.format()\n\t)\n\n\tdata class RenderedArticle(\n\t\t\tval slug: String,\n\t\t\tval title: String,\n\t\t\tval headline: String,\n\t\t\tval content: String,\n\t\t\tval author: User,\n\t\t\tval addedAt: String)\n\n}\n----\n\nThen, we add data initialization to a new `BlogConfiguration` class.\n\n`src/main/kotlin/com/example/blog/BlogConfiguration.kt`\n[source,kotlin]\n----\n@Configuration\nclass BlogConfiguration {\n\n\t@Bean\n\tfun databaseInitializer(userRepository: UserRepository,\n\t\t\t\t\t\t\tarticleRepository: ArticleRepository) = ApplicationRunner {\n\n\t\tval johnDoe = userRepository.save(User(\"johnDoe\", \"John\", \"Doe\"))\n\t\tarticleRepository.save(Article(\n\t\t\t\ttitle = \"Lorem\",\n\t\t\t\theadline = \"Lorem\",\n\t\t\t\tcontent = \"dolor sit amet\",\n\t\t\t\tauthor = johnDoe\n\t\t))\n\t\tarticleRepository.save(Article(\n\t\t\t\ttitle = \"Ipsum\",\n\t\t\t\theadline = \"Ipsum\",\n\t\t\t\tcontent = \"dolor sit amet\",\n\t\t\t\tauthor = johnDoe\n\t\t))\n\t}\n}\n----\n\nNOTE: Notice the usage of named parameters to make the code more readable.\n\nAnd we also update the integration tests accordingly.\n\n`src/test/kotlin/com/example/blog/IntegrationTests.kt`\n[source,kotlin]\n----\n@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\nclass IntegrationTests(@Autowired val restTemplate: TestRestTemplate) {\n\n\t@BeforeAll\n\tfun setup() {\n\t\tprintln(\">> Setup\")\n\t}\n\n\t@Test\n\tfun `Assert blog page title, content and status code`() {\n\t\tprintln(\">> Assert blog page title, content and status code\")\n\t\tval entity = restTemplate.getForEntity<String>(\"/\")\n\t\tassertThat(entity.statusCode).isEqualTo(HttpStatus.OK)\n\t\tassertThat(entity.body).contains(\"<h1>Blog</h1>\", \"Lorem\")\n\t}\n\n\t@Test\n\tfun `Assert article page title, content and status code`() {\n\t\tprintln(\">> Assert article page title, content and status code\")\n\t\tval title = \"Lorem\"\n\t\tval entity = restTemplate.getForEntity<String>(\"/article/${title.toSlug()}\")\n\t\tassertThat(entity.statusCode).isEqualTo(HttpStatus.OK)\n\t\tassertThat(entity.body).contains(title, \"Lorem\", \"dolor sit amet\")\n\t}\n\n\t@AfterAll\n\tfun teardown() {\n\t\tprintln(\">> Tear down\")\n\t}\n\n}\n----\n\nStart (or restart) the web application, and go to `http://localhost:8080/`, you should see the list of articles with clickable links to see a specific article.\n\n== Exposing HTTP API\n\nWe are now going to implement the HTTP API via `@RestController` annotated controllers.\n\n`src/main/kotlin/com/example/blog/HttpControllers.kt`\n[source,kotlin]\n----\n@RestController\n@RequestMapping(\"/api/article\")\nclass ArticleController(private val repository: ArticleRepository) {\n\n\t@GetMapping(\"/\")\n\tfun findAll() = repository.findAllByOrderByAddedAtDesc()\n\n\t@GetMapping(\"/{slug}\")\n\tfun findOne(@PathVariable slug: String) =\n\t\t\trepository.findBySlug(slug) ?: throw ResponseStatusException(HttpStatus.NOT_FOUND, \"This article does not exist\")\n\n}\n\n@RestController\n@RequestMapping(\"/api/user\")\nclass UserController(private val repository: UserRepository) {\n\n\t@GetMapping(\"/\")\n\tfun findAll() = repository.findAll()\n\n\t@GetMapping(\"/{login}\")\n\tfun findOne(@PathVariable login: String) =\n\t\t\trepository.findByLogin(login) ?: throw ResponseStatusException(HttpStatus.NOT_FOUND, \"This user does not exist\")\n}\n----\n\nFor tests, instead of integration tests, we are going to leverage `@WebMvcTest` and https://mockk.io/[Mockk] which is similar to https://site.mockito.org/[Mockito] but better suited for Kotlin.\n\nSince `@MockBean` and `@SpyBean` annotations are specific to Mockito, we are going to leverage https://github.com/Ninja-Squad/springmockk[SpringMockK] which provides similar `@MockkBean` and `@SpykBean` annotations for Mockk.\n\nWith Gradle:\n\n`build.gradle.kts`\n[source,kotlin]\n----\ntestImplementation(\"org.springframework.boot:spring-boot-starter-test\") {\n\texclude(module = \"mockito-core\")\n}\ntestImplementation(\"org.junit.jupiter:junit-jupiter-api\")\ntestRuntimeOnly(\"org.junit.jupiter:junit-jupiter-engine\")\ntestImplementation(\"com.ninja-squad:springmockk:4.0.0\")\n----\n\nOr with Maven:\n\n`pom.xml`\n[source,xml]\n----\n<dependency>\n\t<groupId>org.springframework.boot</groupId>\n\t<artifactId>spring-boot-starter-test</artifactId>\n\t<scope>test</scope>\n</dependency>\n<dependency>\n\t<groupId>org.junit.jupiter</groupId>\n\t<artifactId>junit-jupiter-engine</artifactId>\n\t<scope>test</scope>\n</dependency>\n<dependency>\n\t<groupId>com.ninja-squad</groupId>\n\t<artifactId>springmockk</artifactId>\n\t<version>4.0.0</version>\n\t<scope>test</scope>\n</dependency>\n----\n\n`src/test/kotlin/com/example/blog/HttpControllersTests.kt`\n[source,kotlin]\n----\n@WebMvcTest\nclass HttpControllersTests(@Autowired val mockMvc: MockMvc) {\n\n\t@MockkBean\n\tlateinit var userRepository: UserRepository\n\n\t@MockkBean\n\tlateinit var articleRepository: ArticleRepository\n\n\t@Test\n\tfun `List articles`() {\n\t\tval johnDoe = User(\"johnDoe\", \"John\", \"Doe\")\n\t\tval lorem5Article = Article(\"Lorem\", \"Lorem\", \"dolor sit amet\", johnDoe)\n\t\tval ipsumArticle = Article(\"Ipsum\", \"Ipsum\", \"dolor sit amet\", johnDoe)\n\t\tevery { articleRepository.findAllByOrderByAddedAtDesc() } returns listOf(lorem5Article, ipsumArticle)\n\t\tmockMvc.perform(get(\"/api/article/\").accept(MediaType.APPLICATION_JSON))\n\t\t\t\t.andExpect(status().isOk)\n\t\t\t\t.andExpect(content().contentType(MediaType.APPLICATION_JSON))\n\t\t\t\t.andExpect(jsonPath(\"\\$.[0].author.login\").value(johnDoe.login))\n\t\t\t\t.andExpect(jsonPath(\"\\$.[0].slug\").value(lorem5Article.slug))\n\t\t\t\t.andExpect(jsonPath(\"\\$.[1].author.login\").value(johnDoe.login))\n\t\t\t\t.andExpect(jsonPath(\"\\$.[1].slug\").value(ipsumArticle.slug))\n\t}\n\n\t@Test\n\tfun `List users`() {\n\t\tval johnDoe = User(\"johnDoe\", \"John\", \"Doe\")\n\t\tval janeDoe = User(\"janeDoe\", \"Jane\", \"Doe\")\n\t\tevery { userRepository.findAll() } returns listOf(johnDoe, janeDoe)\n\t\tmockMvc.perform(get(\"/api/user/\").accept(MediaType.APPLICATION_JSON))\n\t\t\t\t.andExpect(status().isOk)\n\t\t\t\t.andExpect(content().contentType(MediaType.APPLICATION_JSON))\n\t\t\t\t.andExpect(jsonPath(\"\\$.[0].login\").value(johnDoe.login))\n\t\t\t\t.andExpect(jsonPath(\"\\$.[1].login\").value(janeDoe.login))\n\t}\n}\n----\n\nNOTE: `$` needs to be escaped in strings as it is used for string interpolation.\n\n== Configuration properties\n\nIn Kotlin, the recommended way to manage your application properties is to use read-only properties.\n\n`src/main/kotlin/com/example/blog/BlogProperties.kt`\n[source,kotlin]\n----\n@ConfigurationProperties(\"blog\")\ndata class BlogProperties(var title: String, val banner: Banner) {\n\tdata class Banner(val title: String? = null, val content: String)\n}\n----\n\nThen we enable it at `BlogApplication` level.\n\n`src/main/kotlin/com/example/blog/BlogApplication.kt`\n[source,kotlin]\n----\n@SpringBootApplication\n@EnableConfigurationProperties(BlogProperties::class)\nclass BlogApplication {\n\t// ...\n}\n----\n\nTo generate https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#configuration-metadata-annotation-processor[your own metadata] in order to get these custom properties recognized by your IDE, https://kotlinlang.org/docs/reference/kapt.html[kapt should be configured] with the `spring-boot-configuration-processor` dependency as following.\n\n`build.gradle.kts`\n[source,kotlin]\n----\nplugins {\n\t...\n\tkotlin(\"kapt\") version \"1.8.0\"\n}\n\ndependencies {\n\t...\n\tkapt(\"org.springframework.boot:spring-boot-configuration-processor\")\n}\n----\n\nNOTE: Note that some features (such as detecting the default value or deprecated items) are not working due to limitations in the model kapt provides. Also annotation processing is not yet supported with Maven due to https://youtrack.jetbrains.com/issue/KT-18022[KT-18022], see https://github.com/spring-io/initializr/issues/438[initializr#438] for more details.\n\nIn IntelliJ IDEA:\n\n - Make sure Spring Boot plugin in enabled in menu File | Settings | Plugins | Spring Boot\n - Enable annotation processing via menu File | Settings | Build, Execution, Deployment | Compiler | Annotation Processors | Enable annotation processing\n - Since https://youtrack.jetbrains.com/issue/KT-15040[Kapt is not yet integrated in IDEA], you need to run manually the command `./gradlew kaptKotlin` to generate the metadata\n\nYour custom properties should now be recognized when editing `application.properties` (autocomplete, validation, etc.).\n\n`src/main/resources/application.properties`\n[source,properties]\n----\nblog.title=Blog\nblog.banner.title=Warning\nblog.banner.content=The blog will be down tomorrow.\n----\n\nEdit the template and the controller accordingly.\n\n`src/main/resources/templates/blog.mustache`\n[source]\n----\n{{> header}}\n\n<div class=\"articles\">\n\n\t{{#banner.title}}\n\t<section>\n\t\t<header class=\"banner\">\n\t\t\t<h2 class=\"banner-title\">{{banner.title}}</h2>\n\t\t</header>\n\t\t<div class=\"banner-content\">\n\t\t\t{{banner.content}}\n\t\t</div>\n\t</section>\n\t{{/banner.title}}\n\n\t...\n\n</div>\n\n{{> footer}}\n----\n\n`src/main/kotlin/com/example/blog/HtmlController.kt`\n[source,kotlin]\n----\n@Controller\nclass HtmlController(private val repository: ArticleRepository,\n\t\t\t\t\t private val properties: BlogProperties) {\n\n\t@GetMapping(\"/\")\n\tfun blog(model: Model): String {\n\t\tmodel[\"title\"] = properties.title\n\t\tmodel[\"banner\"] = properties.banner\n\t\tmodel[\"articles\"] = repository.findAllByOrderByAddedAtDesc().map { it.render() }\n\t\treturn \"blog\"\n\t}\n\n\t// ...\n----\n\nRestart the web application, refresh `http://localhost:8080/`, you should see the banner on the blog homepage.\n\n== Conclusion\n\nWe have now finished to build this sample Kotlin blog application. The source code https://github.com/spring-guides/tut-spring-boot-kotlin[is available on Github]. You can also have a look to https://docs.spring.io/spring/docs/current/spring-framework-reference/languages.html#kotlin[Spring Framework] and https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-kotlin.html[Spring Boot] reference documentation if you need more details on specific features.\n",
                                "diffs": [
                                    [
                                        " [source,properties]",
                                        " ----",
                                        " spring.jpa.properties.hibernate.globally_quoted_identifiers=true",
                                        "-spring.jpa.properties.hibernate.globally_quoted_identifiers_skip_column_definitions = true",
                                        "+spring.jpa.properties.hibernate.globally_quoted_identifiers_skip_column_definitions=true",
                                        " ----",
                                        " ",
                                        " Spring Boot Gradle plugin automatically uses the Kotlin version declared via the Kotlin Gradle plugin.",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "repo_name": "android-custom-lint-rules",
            "org_name": "googlesamples",
            "commits": [
                {
                    "message": "",
                    "sha": "499d2b30a38f85c6679786dc6804cf001074b564",
                    "link": "https://github.com/googlesamples/android-custom-lint-rules/commit/499d2b30a38f85c6679786dc6804cf001074b564",
                    "files": [
                        {
                            "name": "README.md",
                            "content": {
                                "current": "Custom Lint Rules\n============\n\nThe [Android `lint` tool](http://developer.android.com/tools/help/lint.html) is a static code\n analysis tool that checks your Android project source files for potential bugs and optimization\n improvements for correctness, security, performance, usability, accessibility, and\n internationalization. Lint comes with over 200 checks, however it can be extended with additional\n custom rules.\n\n**NOTE: The lint API is not a final API; if you rely on this be prepared\n to adjust your code for the next tools release.**\n\nIntroduction\n------------\n\nThe Android Lint API allows users to create custom lint rules. For example, if you are the author of\n a library project, and your library project has certain usage requirements, you can write\n additional lint rules to check that your library is used correctly, and then you can distribute\n those extra lint rules for users of the library. Similarly, you may have company-local rules you'd\n like to enforce.\n\nThis sample demonstrates how to create a custom lint checks and corresponding tests for those rules.\n\nGetting Started\n---------------\n\n##### Fetch code\n\n`git clone https://github.com/googlesamples/custom-lint-rules.git`\n\n##### Build the validator\n\n`./gradlew build`\n\n##### Copy to the lint directory\n\n`cp ./build/libs/custom-lint-rules.jar ~/.android/lint/`\n\n##### Verify whether the issues are registered with lint\n\n`lint --show MainActivityDetector`\n\n##### Run lint\n\n`./gradlew lint`\n\n> Note: If you can't run `lint` directly, you may want to include android tools `PATH` in your\n `~/.bash_profile`.\n> (i.e. `PATH=$PATH:~/Library/Android/sdk/tools`)\n>\n> Then run `source ~/.bash_profile`.\n\nSupport\n-------\n\n- Google+ Community: https://plus.google.com/communities/android\n- Stack Overflow: http://stackoverflow.com/questions/tagged/android\n\nIf you've found an error in this sample, please file an issue:\nhttps://github.com/googlesamples/custom-lint-rules/issues\n\nPatches are encouraged, and may be submitted by forking this project and\nsubmitting a pull request through GitHub.\n\nLicense\n-------\nLicensed under the Apache 2.0 license. See the LICENSE file for details.\n\nHow to make contributions?\n--------------------------\nPlease read and follow the steps in the CONTRIBUTING.md\n",
                                "diffs": [
                                    [
                                        " The [Android `lint` tool](http://developer.android.com/tools/help/lint.html) is a static code",
                                        "  analysis tool that checks your Android project source files for potential bugs and optimization",
                                        "  improvements for correctness, security, performance, usability, accessibility, and",
                                        "- internationalization. Lint comes with over 100 checks, however it can be extended with additional",
                                        "+ internationalization. Lint comes with over 200 checks, however it can be extended with additional",
                                        "  custom rules.",
                                        " ",
                                        " **NOTE: The lint API is not a final API; if you rely on this be prepared"
                                    ],
                                    [
                                        " ",
                                        " ##### Run lint",
                                        " ",
                                        "-`lint`",
                                        "+`./gradlew lint`",
                                        " ",
                                        " > Note: If you can't run `lint` directly, you may want to include android tools `PATH` in your",
                                        "  `~/.bash_profile`.",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "gradle/wrapper/gradle-wrapper.properties",
                            "content": {
                                "current": "#Fri Aug 21 14:39:26 PDT 2015\ndistributionBase=GRADLE_USER_HOME\ndistributionPath=wrapper/dists\nzipStoreBase=GRADLE_USER_HOME\nzipStorePath=wrapper/dists\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-2.4-all.zip\n",
                                "diffs": [
                                    [
                                        "-#Wed Apr 10 15:27:10 PDT 2013",
                                        "+#Fri Aug 21 14:39:26 PDT 2015",
                                        " distributionBase=GRADLE_USER_HOME",
                                        " distributionPath=wrapper/dists",
                                        " zipStoreBase=GRADLE_USER_HOME",
                                        " zipStorePath=wrapper/dists",
                                        "-distributionUrl=https\\://services.gradle.org/distributions/gradle-2.2.1-all.zip",
                                        "+distributionUrl=https\\://services.gradle.org/distributions/gradle-2.4-all.zip",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/java/com/example/google/lint/MainActivityDetector.java",
                            "content": {
                                "current": "/*\n * Copyright (C) 2015 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.example.google.lint;\n\nimport com.android.annotations.NonNull;\nimport com.android.tools.lint.detector.api.Category;\nimport com.android.tools.lint.detector.api.Context;\nimport com.android.tools.lint.detector.api.Detector;\nimport com.android.tools.lint.detector.api.Implementation;\nimport com.android.tools.lint.detector.api.Issue;\nimport com.android.tools.lint.detector.api.LintUtils;\nimport com.android.tools.lint.detector.api.Location;\nimport com.android.tools.lint.detector.api.ResourceXmlDetector;\nimport com.android.tools.lint.detector.api.Scope;\nimport com.android.tools.lint.detector.api.Severity;\nimport com.android.tools.lint.detector.api.XmlContext;\n\nimport org.w3c.dom.Element;\nimport org.w3c.dom.Node;\n\nimport java.io.File;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.EnumSet;\n\nimport static com.android.SdkConstants.ANDROID_MANIFEST_XML;\nimport static com.android.SdkConstants.ANDROID_URI;\nimport static com.android.SdkConstants.ATTR_NAME;\nimport static com.android.SdkConstants.TAG_ACTIVITY;\nimport static com.android.SdkConstants.TAG_APPLICATION;\nimport static com.android.SdkConstants.TAG_INTENT_FILTER;\nimport static com.android.xml.AndroidManifest.NODE_ACTION;\nimport static com.android.xml.AndroidManifest.NODE_CATEGORY;\nimport static com.example.google.lint.ManifestConstants.ACTION_NAME_MAIN;\nimport static com.example.google.lint.ManifestConstants.CATEGORY_NAME_LAUNCHER;\n\n/**\n * Checks for an activity with a launcher intent in <code>AndroidManifest.xml</code>.\n * <p/>\n * <b>NOTE: This is not a final API; if you rely on this be prepared\n * to adjust your code for the next tools release.</b>\n */\npublic class MainActivityDetector extends ResourceXmlDetector implements Detector.XmlScanner {\n    public static final Issue ISSUE = Issue.create(\n            \"MainActivityDetector\",\n            \"Missing Launcher Activities\",\n            \"This app should have an activity with a launcher intent.\",\n            Category.CORRECTNESS,\n            8,\n            Severity.ERROR,\n            new Implementation(\n                    MainActivityDetector.class,\n                    EnumSet.of(Scope.MANIFEST)));\n\n    /**\n     * This will be <code>true</code> if the current file we're checking has at least one activity.\n     */\n    private boolean mHasActivity;\n    /**\n     * This will be <code>true</code> if the file has an activity with a launcher intent.\n     */\n    private boolean mHasLauncherActivity;\n    /**\n     * The manifest file location for the main project, <code>null</code> if there is no manifest.\n     */\n    private Location mManifestLocation;\n\n    /**\n     * No-args constructor used by the lint framework to instantiate the detector.\n     */\n    public MainActivityDetector() {\n    }\n\n    @Override\n    public Collection<String> getApplicableElements() {\n        return Collections.singleton(TAG_ACTIVITY);\n    }\n\n    @Override\n    public void beforeCheckProject(@NonNull Context context) {\n        mHasActivity = false;\n        mHasLauncherActivity = false;\n        mManifestLocation = null;\n    }\n\n    @Override\n    public void afterCheckProject(@NonNull Context context) {\n        // Don't report issues on libraries that may not have a launcher activity\n        if (context.getProject() == context.getMainProject()\n                && !context.getMainProject().isLibrary()\n                && mManifestLocation != null) {\n            if (!mHasActivity) {\n                context.report(ISSUE, mManifestLocation,\n                        \"Expecting \" + ANDROID_MANIFEST_XML + \" to have an <\" + TAG_APPLICATION +\n                                \"> tag.\");\n            } else if (!mHasLauncherActivity) {\n                // Report the issue if the manifest file has no activity with a launcher intent.\n                context.report(ISSUE, mManifestLocation,\n                        \"Expecting \" + ANDROID_MANIFEST_XML +\n                                \" to have an activity with a launcher intent.\");\n            }\n        }\n    }\n\n    @Override\n    public void afterCheckFile(@NonNull Context context) {\n        // Store a reference to the manifest file in case we need to report it's location.\n        if (context.getProject() == context.getMainProject()) {\n            mManifestLocation = Location.create(context.file);\n        }\n    }\n\n    @Override\n    public void visitElement(XmlContext context, Element activityElement) {\n        // Checks every activity and reports an error if there is no activity with a launcher\n        // intent.\n        mHasActivity = true;\n        if (isMainActivity(activityElement)) {\n            mHasLauncherActivity = true;\n        }\n    }\n\n    /**\n     * Returns true if the XML node is an activity with a launcher intent.\n     *\n     * @param activityNode The node to check.\n     * @return <code>true</code> if the node is an activity with a launcher intent.\n     */\n    private boolean isMainActivity(Node activityNode) {\n        if (TAG_ACTIVITY.equals(activityNode.getNodeName())) {\n            // Loop through all <intent-filter> tags\n            for (Element activityChild : LintUtils.getChildren(activityNode)) {\n                if (TAG_INTENT_FILTER.equals(activityChild.getNodeName())) {\n                    // Check for these children nodes:\n                    //\n                    // <category android:name=\"android.intent.category.LAUNCHER\" />\n                    // <action android:name=\"android.intent.action.MAIN\" />\n                    boolean hasLauncherCategory = false;\n                    boolean hasMainAction = false;\n\n                    for (Element intentFilterChild : LintUtils.getChildren(activityChild)) {\n                        // Check for category tag)\n                        if (NODE_CATEGORY.equals(intentFilterChild.getNodeName())\n                                && CATEGORY_NAME_LAUNCHER.equals(\n                                intentFilterChild.getAttributeNS(ANDROID_URI, ATTR_NAME))) {\n                            hasLauncherCategory = true;\n                        }\n                        // Check for action tag\n                        if (NODE_ACTION.equals(intentFilterChild.getNodeName())\n                                && ACTION_NAME_MAIN.equals(\n                                intentFilterChild.getAttributeNS(ANDROID_URI, ATTR_NAME))) {\n                            hasMainAction = true;\n                        }\n                    }\n\n                    if (hasLauncherCategory && hasMainAction) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}\n",
                                "diffs": [
                                    [
                                        " import com.android.tools.lint.detector.api.Detector;",
                                        " import com.android.tools.lint.detector.api.Implementation;",
                                        " import com.android.tools.lint.detector.api.Issue;",
                                        "+import com.android.tools.lint.detector.api.LintUtils;",
                                        " import com.android.tools.lint.detector.api.Location;",
                                        " import com.android.tools.lint.detector.api.ResourceXmlDetector;",
                                        " import com.android.tools.lint.detector.api.Scope;"
                                    ],
                                    [
                                        " ",
                                        " import org.w3c.dom.Element;",
                                        " import org.w3c.dom.Node;",
                                        "-import org.w3c.dom.NodeList;",
                                        " ",
                                        "-import java.util.Arrays;",
                                        "+import java.io.File;",
                                        " import java.util.Collection;",
                                        "+import java.util.Collections;",
                                        " import java.util.EnumSet;",
                                        " ",
                                        " import static com.android.SdkConstants.ANDROID_MANIFEST_XML;"
                                    ],
                                    [
                                        " import static com.android.SdkConstants.TAG_INTENT_FILTER;",
                                        " import static com.android.xml.AndroidManifest.NODE_ACTION;",
                                        " import static com.android.xml.AndroidManifest.NODE_CATEGORY;",
                                        "+import static com.example.google.lint.ManifestConstants.ACTION_NAME_MAIN;",
                                        "+import static com.example.google.lint.ManifestConstants.CATEGORY_NAME_LAUNCHER;",
                                        " ",
                                        " /**",
                                        "- * Checks for a main activity in <code>AndroidManifest.xml</code>.",
                                        "+ * Checks for an activity with a launcher intent in <code>AndroidManifest.xml</code>.",
                                        "  * <p/>",
                                        "  * <b>NOTE: This is not a final API; if you rely on this be prepared",
                                        "  * to adjust your code for the next tools release.</b>"
                                    ],
                                    [
                                        " public class MainActivityDetector extends ResourceXmlDetector implements Detector.XmlScanner {",
                                        "     public static final Issue ISSUE = Issue.create(",
                                        "             \"MainActivityDetector\",",
                                        "-            \"Checks for a main activity\",",
                                        "-            \"This app should have a main launcher activity.\",",
                                        "+            \"Missing Launcher Activities\",",
                                        "+            \"This app should have an activity with a launcher intent.\",",
                                        "             Category.CORRECTNESS,",
                                        "             8,",
                                        "             Severity.ERROR,"
                                    ],
                                    [
                                        "                     EnumSet.of(Scope.MANIFEST)));",
                                        " ",
                                        "     /**",
                                        "-     * Will be <code>true</code> if the current file we're checking has at least one activity.",
                                        "+     * This will be <code>true</code> if the current file we're checking has at least one activity.",
                                        "      */",
                                        "     private boolean mHasActivity;",
                                        "     /**",
                                        "-     * Will be <code>true</code> if the file has a main activity.",
                                        "+     * This will be <code>true</code> if the file has an activity with a launcher intent.",
                                        "      */",
                                        "-    private boolean mHasMainActivity;",
                                        "+    private boolean mHasLauncherActivity;",
                                        "+    /**",
                                        "+     * The manifest file location for the main project, <code>null</code> if there is no manifest.",
                                        "+     */",
                                        "+    private Location mManifestLocation;",
                                        "+",
                                        "+    /**",
                                        "+     * No-args constructor used by the lint framework to instantiate the detector.",
                                        "+     */",
                                        "+    public MainActivityDetector() {",
                                        "+    }",
                                        " ",
                                        "     @Override",
                                        "     public Collection<String> getApplicableElements() {",
                                        "-        return Arrays.asList(",
                                        "-                TAG_ACTIVITY",
                                        "-        );",
                                        "+        return Collections.singleton(TAG_ACTIVITY);",
                                        "     }",
                                        " ",
                                        "     @Override",
                                        "-    public void beforeCheckFile(@NonNull Context context) {",
                                        "+    public void beforeCheckProject(@NonNull Context context) {",
                                        "         mHasActivity = false;",
                                        "-        mHasMainActivity = false;",
                                        "+        mHasLauncherActivity = false;",
                                        "+        mManifestLocation = null;",
                                        "+    }",
                                        "+",
                                        "+    @Override",
                                        "+    public void afterCheckProject(@NonNull Context context) {",
                                        "+        // Don't report issues on libraries that may not have a launcher activity",
                                        "+        if (context.getProject() == context.getMainProject()",
                                        "+                && !context.getMainProject().isLibrary()",
                                        "+                && mManifestLocation != null) {",
                                        "+            if (!mHasActivity) {",
                                        "+                context.report(ISSUE, mManifestLocation,",
                                        "+                        \"Expecting \" + ANDROID_MANIFEST_XML + \" to have an <\" + TAG_APPLICATION +",
                                        "+                                \"> tag.\");",
                                        "+            } else if (!mHasLauncherActivity) {",
                                        "+                // Report the issue if the manifest file has no activity with a launcher intent.",
                                        "+                context.report(ISSUE, mManifestLocation,",
                                        "+                        \"Expecting \" + ANDROID_MANIFEST_XML +",
                                        "+                                \" to have an activity with a launcher intent.\");",
                                        "+            }",
                                        "+        }",
                                        "     }",
                                        " ",
                                        "     @Override",
                                        "     public void afterCheckFile(@NonNull Context context) {",
                                        "-        // Report an error if there are no <application> tags to check.",
                                        "-        // We assume the application tag is in the right place (i.e. have correct parent elements).",
                                        "-        Location location = Location.create(context.file);",
                                        "-        if (!mHasActivity) {",
                                        "-            context.report(ISSUE, location,",
                                        "-                    \"Expecting \" + ANDROID_MANIFEST_XML + \" to have an <\" + TAG_APPLICATION +",
                                        "-                            \"> tag.\");",
                                        "-        } else if (!mHasMainActivity) {",
                                        "-            // Report the issue if the manifest file has no main activity.",
                                        "-            context.report(ISSUE, location,",
                                        "-                    \"Expecting \" + ANDROID_MANIFEST_XML + \" to have a main activity.\");",
                                        "+        // Store a reference to the manifest file in case we need to report it's location.",
                                        "+        if (context.getProject() == context.getMainProject()) {",
                                        "+            mManifestLocation = Location.create(context.file);",
                                        "         }",
                                        "     }",
                                        " ",
                                        "     @Override",
                                        "     public void visitElement(XmlContext context, Element activityElement) {",
                                        "-        // Checks every activity under the <application> element and reports an error if there is",
                                        "-        // no main activity.",
                                        "+        // Checks every activity and reports an error if there is no activity with a launcher",
                                        "+        // intent.",
                                        "         mHasActivity = true;",
                                        "         if (isMainActivity(activityElement)) {",
                                        "-            mHasMainActivity = true;",
                                        "+            mHasLauncherActivity = true;",
                                        "         }",
                                        "     }",
                                        " ",
                                        "     /**",
                                        "-     * Returns true if the XML node is a main activity.",
                                        "-     * <p/>",
                                        "-     * A main activity is an <code>&lt;activity&gt;</code> node with an <code>&lt;",
                                        "-     * intent-filter&gt;</code> that contains the following tags:",
                                        "-     * <p/>",
                                        "-     * <pre>",
                                        "-     *   <category android:name=\"android.intent.category.LAUNCHER\" />",
                                        "-     *   <action android:name=\"android.intent.action.MAIN\" />",
                                        "-     * </pre>",
                                        "+     * Returns true if the XML node is an activity with a launcher intent.",
                                        "      *",
                                        "      * @param activityNode The node to check.",
                                        "-     * @return <code>true</code> if the node is a main activity.",
                                        "+     * @return <code>true</code> if the node is an activity with a launcher intent.",
                                        "      */",
                                        "     private boolean isMainActivity(Node activityNode) {",
                                        "         if (TAG_ACTIVITY.equals(activityNode.getNodeName())) {",
                                        "             // Loop through all <intent-filter> tags",
                                        "-            NodeList activityChildren = activityNode.getChildNodes();",
                                        "-            for (int i = 0; i < activityChildren.getLength(); ++i) {",
                                        "-                Node activityChild = activityChildren.item(i);",
                                        "+            for (Element activityChild : LintUtils.getChildren(activityNode)) {",
                                        "                 if (TAG_INTENT_FILTER.equals(activityChild.getNodeName())) {",
                                        "-                    NodeList intentFilterChildren = activityChild.getChildNodes();",
                                        "-",
                                        "                     // Check for these children nodes:",
                                        "                     //",
                                        "                     // <category android:name=\"android.intent.category.LAUNCHER\" />"
                                    ],
                                    [
                                        "                     boolean hasLauncherCategory = false;",
                                        "                     boolean hasMainAction = false;",
                                        " ",
                                        "-                    for (int j = 0; j < intentFilterChildren.getLength(); ++j) {",
                                        "-                        Node intentFilterChild = intentFilterChildren.item(j);",
                                        "-                        // Check for category tag",
                                        "-                        if (NODE_CATEGORY.equals(intentFilterChild.getNodeName())) {",
                                        "-                            Node categoryName = intentFilterChild.getAttributes()",
                                        "-                                    .getNamedItemNS(ANDROID_URI, ATTR_NAME);",
                                        "-                            if (categoryName != null && categoryName.getNodeValue().equals(",
                                        "-                                    ManifestConstants.CATEGORY_NAME_LAUNCHER)) {",
                                        "-                                hasLauncherCategory = true;",
                                        "-                            }",
                                        "+                    for (Element intentFilterChild : LintUtils.getChildren(activityChild)) {",
                                        "+                        // Check for category tag)",
                                        "+                        if (NODE_CATEGORY.equals(intentFilterChild.getNodeName())",
                                        "+                                && CATEGORY_NAME_LAUNCHER.equals(",
                                        "+                                intentFilterChild.getAttributeNS(ANDROID_URI, ATTR_NAME))) {",
                                        "+                            hasLauncherCategory = true;",
                                        "                         }",
                                        "                         // Check for action tag",
                                        "-                        if (NODE_ACTION.equals(intentFilterChild.getNodeName())) {",
                                        "-                            Node actionName = intentFilterChild.getAttributes()",
                                        "-                                    .getNamedItemNS(ANDROID_URI, ATTR_NAME);",
                                        "-                            if (actionName != null && actionName.getNodeValue().equals(",
                                        "-                                    ManifestConstants.ACTION_NAME_MAIN)) {",
                                        "-                                hasMainAction = true;",
                                        "-                            }",
                                        "+                        if (NODE_ACTION.equals(intentFilterChild.getNodeName())",
                                        "+                                && ACTION_NAME_MAIN.equals(",
                                        "+                                intentFilterChild.getAttributeNS(ANDROID_URI, ATTR_NAME))) {",
                                        "+                            hasMainAction = true;",
                                        "                         }",
                                        "                     }",
                                        " ",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/java/com/example/google/lint/MyIssueRegistry.java",
                            "content": {
                                "current": "/*\n * Copyright (C) 2015 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.example.google.lint;\n\nimport com.android.tools.lint.client.api.IssueRegistry;\nimport com.android.tools.lint.detector.api.Issue;\n\nimport java.util.Collections;\nimport java.util.List;\n\n/**\n * The list of issues that will be checked when running <code>lint</code>.\n */\n@SuppressWarnings(\"unused\")\npublic class MyIssueRegistry extends IssueRegistry {\n    @Override\n    public List<Issue> getIssues() {\n        return Collections.singletonList(MainActivityDetector.ISSUE);\n    }\n}\n",
                                "diffs": [
                                    [
                                        " public class MyIssueRegistry extends IssueRegistry {",
                                        "     @Override",
                                        "     public List<Issue> getIssues() {",
                                        "-        return Collections.singletonList(",
                                        "-                MainActivityDetector.ISSUE",
                                        "-        );",
                                        "+        return Collections.singletonList(MainActivityDetector.ISSUE);",
                                        "     }",
                                        " }",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/test/java/com/example/google/lint/MainActivityDetectorTest.java",
                            "content": {
                                "current": "/*\n * Copyright (C) 2015 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.example.google.lint;\n\nimport com.android.annotations.NonNull;\nimport com.android.tools.lint.checks.infrastructure.LintDetectorTest;\nimport com.android.tools.lint.client.api.LintClient;\nimport com.android.tools.lint.detector.api.Detector;\nimport com.android.tools.lint.detector.api.Issue;\nimport com.android.tools.lint.detector.api.Project;\n\nimport java.util.Collections;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Set;\n\nimport static com.android.SdkConstants.FN_ANDROID_MANIFEST_XML;\n\n/**\n * <b>NOTE: This is not a final API; if you rely on this be prepared\n * to adjust your code for the next tools release.</b>\n */\npublic class MainActivityDetectorTest extends LintDetectorTest {\n    /**\n     * The set of enabled issues for a given test.\n     */\n    private Set<Issue> mEnabled = new HashSet<Issue>();\n\n    @Override\n    protected Detector getDetector() {\n        return new MainActivityDetector();\n    }\n\n    @Override\n    protected List<Issue> getIssues() {\n        return Collections.singletonList(MainActivityDetector.ISSUE);\n    }\n\n    /**\n     * Gets the configuration for the test.\n     * Each test can have a set of enabled issues by assigning the member field {@link #mEnabled}.\n     */\n    @Override\n    protected TestConfiguration getConfiguration(LintClient client, Project project) {\n        return new TestConfiguration(client, project, null) {\n            @Override\n            public boolean isEnabled(@NonNull Issue issue) {\n                return super.isEnabled(issue) && mEnabled.contains(issue);\n            }\n        };\n    }\n\n    /**\n     * Test that a manifest with an activity with a launcher intent has no warnings.\n     */\n    public void testHasMainActivity() throws Exception {\n        mEnabled = Collections.singleton(MainActivityDetector.ISSUE);\n        String expected = \"No warnings.\";\n        String result = lintProject(xml(FN_ANDROID_MANIFEST_XML, \"\" +\n                \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +\n                \"<manifest package=\\\"com.example.android.custom-lint-rules\\\"\\n\" +\n                \"          xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\">\\n\" +\n                \"    <application>\\n\" +\n                \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +\n                \".OtherActivity\\\">\\n\" +\n                \"        </activity>\\n\" +\n                \"\\n\" +\n                \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +\n                \".MainActivity\\\">\\n\" +\n                \"            <intent-filter>\\n\" +\n                \"                <action android:name=\\\"android.intent.action.MAIN\\\"/>\\n\" +\n                \"                <category android:name=\\\"android.intent.category.LAUNCHER\\\"/>\\n\" +\n                \"            </intent-filter>\\n\" +\n                \"        </activity>\\n\" +\n                \"    </application>\\n\" +\n                \"</manifest>\"));\n        assertEquals(expected, result);\n    }\n\n    /**\n     * Test that a manifest <em>without</em> an activity with a launcher intent reports an error.\n     */\n    public void testMissingMainActivity() throws Exception {\n        mEnabled = Collections.singleton(MainActivityDetector.ISSUE);\n        String expected = \"AndroidManifest.xml: Error: Expecting AndroidManifest.xml to have an \" +\n                \"activity with a launcher intent. [MainActivityDetector]\\n\" +\n                \"1 errors, 0 warnings\\n\";\n        String result = lintProject(xml(FN_ANDROID_MANIFEST_XML, \"\" +\n                \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +\n                \"<manifest package=\\\"com.example.android.custom-lint-rules\\\"\\n\" +\n                \"          xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\">\\n\" +\n                \"    <application>\\n\" +\n                \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +\n                \".Activity1\\\">\\n\" +\n                \"            <intent-filter>\\n\" +\n                \"                <action android:name=\\\"android.intent.action.VIEW\\\" />\\n\" +\n                \"\\n\" +\n                \"                <category android:name=\\\"android.intent.category.HOME\\\" />\\n\" +\n                \"                <category android:name=\\\"android.intent.category.LAUNCHER\\\" />\\n\" +\n                \"                <category android:name=\\\"android.intent.category.DEFAULT\\\" />\\n\" +\n                \"                <category android:name=\\\"android.intent.category.BROWSABLE\\\" \" +\n                \"/>\\n\" +\n                \"            </intent-filter>\\n\" +\n                \"        </activity>\\n\" +\n                \"\\n\" +\n                \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +\n                \".Activity2\\\">\\n\" +\n                \"        </activity>\\n\" +\n                \"\\n\" +\n                \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +\n                \".Activity3\\\">\\n\" +\n                \"            <intent-filter>\\n\" +\n                \"                <action android:name=\\\"android.intent.action.SEND\\\"/>\\n\" +\n                \"                <category android:name=\\\"android.intent.category.DEFAULT\\\"/>\\n\" +\n                \"                <data android:mimeType=\\\"text/plain\\\"/>\\n\" +\n                \"            </intent-filter>\\n\" +\n                \"        </activity>\\n\" +\n                \"    </application>\\n\" +\n                \"</manifest>\"));\n        assertEquals(expected, result);\n    }\n\n    /**\n     * Test that a manifest without an <code>&lt;application&gt;</code> tag reports an error.\n     */\n    public void testMissingApplication() throws Exception {\n        mEnabled = Collections.singleton(MainActivityDetector.ISSUE);\n        String expected = \"AndroidManifest.xml: Error: Expecting AndroidManifest.xml to have an \" +\n                \"<application> tag. [MainActivityDetector]\\n\" +\n                \"1 errors, 0 warnings\\n\";\n        String result = lintProject(xml(FN_ANDROID_MANIFEST_XML, \"\" +\n                \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +\n                \"<manifest package=\\\"com.example.android.custom-lint-rules\\\"\\n\" +\n                \"          xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\">\\n\" +\n                \"</manifest>\"));\n        assertEquals(expected, result);\n    }\n}\n",
                                "diffs": [
                                    [
                                        " import com.android.tools.lint.detector.api.Issue;",
                                        " import com.android.tools.lint.detector.api.Project;",
                                        " ",
                                        "-import java.util.Arrays;",
                                        " import java.util.Collections;",
                                        " import java.util.HashSet;",
                                        " import java.util.List;"
                                    ],
                                    [
                                        " ",
                                        "     @Override",
                                        "     protected List<Issue> getIssues() {",
                                        "-        return Arrays.asList(",
                                        "-                MainActivityDetector.ISSUE",
                                        "-        );",
                                        "+        return Collections.singletonList(MainActivityDetector.ISSUE);",
                                        "     }",
                                        " ",
                                        "     /**"
                                    ],
                                    [
                                        "     }",
                                        " ",
                                        "     /**",
                                        "-     * Test that a manifest with a main activity has no warnings.",
                                        "+     * Test that a manifest with an activity with a launcher intent has no warnings.",
                                        "      */",
                                        "     public void testHasMainActivity() throws Exception {",
                                        "         mEnabled = Collections.singleton(MainActivityDetector.ISSUE);"
                                    ],
                                    [
                                        "     }",
                                        " ",
                                        "     /**",
                                        "-     * Test that a manifest <em>without</em> a main activity reports an error.",
                                        "+     * Test that a manifest <em>without</em> an activity with a launcher intent reports an error.",
                                        "      */",
                                        "     public void testMissingMainActivity() throws Exception {",
                                        "         mEnabled = Collections.singleton(MainActivityDetector.ISSUE);",
                                        "-        String expected = \"AndroidManifest.xml: Error: Expecting AndroidManifest.xml to have a \" +",
                                        "-                \"main activity. [MainActivityDetector]\\n\" +",
                                        "+        String expected = \"AndroidManifest.xml: Error: Expecting AndroidManifest.xml to have an \" +",
                                        "+                \"activity with a launcher intent. [MainActivityDetector]\\n\" +",
                                        "                 \"1 errors, 0 warnings\\n\";",
                                        "         String result = lintProject(xml(FN_ANDROID_MANIFEST_XML, \"\" +",
                                        "                 \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "af20a35ea03ad10798626c330d9e4e22a1c637a9",
                    "link": "https://github.com/googlesamples/android-custom-lint-rules/commit/af20a35ea03ad10798626c330d9e4e22a1c637a9",
                    "files": [
                        {
                            "name": "README.md",
                            "content": {
                                "current": "Custom Lint Rules\n=================\n\nThe [Android `lint` tool](http://developer.android.com/tools/help/lint.html) is a static code\n analysis tool that checks your Android project source files for potential bugs and optimization\n improvements for correctness, security, performance, usability, accessibility, and\n internationalization. Lint comes with over 200 checks, however it can be extended with additional\n custom rules.\n\n**NOTE: The lint API is not a final API; if you rely on this be prepared\n to adjust your code for the next tools release.**\n\nIntroduction\n------------\n\nThe Android Lint API allows users to create custom lint rules. For example, if you are the author of\n a library project, and your library project has certain usage requirements, you can write\n additional lint rules to check that your library is used correctly, and then you can distribute\n those extra lint rules for users of the library. Similarly, you may have company-local rules you'd\n like to enforce.\n\nThis sample demonstrates how to create a custom lint checks and corresponding tests for those rules.\n\nGetting Started\n---------------\n\n##### Fetch code\n\n```\ngit clone https://github.com/googlesamples/android-custom-lint-rules.git\ncd android-custom-lint-rules\n```\n\n##### Build the code\n\nFor Android Studio 3.x and above, use the sample in `android-studio-3`.\nIf you are targeting Android Studio 2.x and older, use the sample in `android-studio-2`.\n\n##### Lint Dependencies\n\nWhen building your own rules, you will likely want to know which dependencies you should bring into your own project. \nThe below descriptions of the dependencies included within this project serve to help you make that decision:\n\nSource Dependencies\n\n- **com.android.tools.lint:lint-api**: The most important one; it contains things like `LintClient`, the `Detector` \nbase class, the `Issue` class, and everything else that Lint checks rely on in the Lint framework.\n- **com.android.tools.lint:lint-checks**: Contains the built-in checks that are developed internally. Also contains \nutilities that are sometimes useful for other lint checks, such as the `VersionChecks` class (which figures out whether \na given UAST element is known to only be called at a given API level, either by surrounding `if >= SDK-version` checks or \n`if < SDK-version` early returns in the method).\n\nTest Dependencies\n\n- **com.android.tools.lint:lint-tests**: Contains useful utilities for writing unit tests for Lint checks, \nincluding the `LintDetectorTest` base class.\n- **com.android.tools:testutils**: It's unlikely that you need to depend on this directly. The test infrastructure \ndepends on it indirectly though (the methods we use there were mostly for the older lint test infrastructure, \nnot the newer one).  \n- **com.android.tools.lint:lint**: Lint checks don't need to depend on this. It's a separate artifact used by tools \nthat want to integrate lint with the command line, such as the Gradle integration of lint. This is where things like \nterminal output, HTML reporting, command line parsing etc is handled.\n\n\nSupport\n-------\n\n- The \"lint-dev\" Google group: https://groups.google.com/forum/#!forum/lint-dev\n- Google+ Community: https://plus.google.com/communities/105153134372062985968\n- Stack Overflow: http://stackoverflow.com/questions/tagged/android\n\nIf you've found an error in this sample, please file an issue:\nhttps://github.com/googlesamples/android-custom-lint-rules/issues\n\nPatches are encouraged, and may be submitted by forking this project and\nsubmitting a pull request through GitHub.\n\nLicense\n-------\nLicensed under the Apache 2.0 license. See the LICENSE file for details.\n\nHow to make contributions?\n--------------------------\nPlease read and follow the steps in the CONTRIBUTING.md\n",
                                "diffs": [
                                    [
                                        " For Android Studio 3.x and above, use the sample in `android-studio-3`.",
                                        " If you are targeting Android Studio 2.x and older, use the sample in `android-studio-2`.",
                                        " ",
                                        "+##### Lint Dependencies",
                                        "+",
                                        "+When building your own rules, you will likely want to know which dependencies you should bring into your own project. ",
                                        "+The below descriptions of the dependencies included within this project serve to help you make that decision:",
                                        "+",
                                        "+Source Dependencies",
                                        "+",
                                        "+- **com.android.tools.lint:lint-api**: The most important one; it contains things like `LintClient`, the `Detector` ",
                                        "+base class, the `Issue` class, and everything else that Lint checks rely on in the Lint framework.",
                                        "+- **com.android.tools.lint:lint-checks**: Contains the built-in checks that are developed internally. Also contains ",
                                        "+utilities that are sometimes useful for other lint checks, such as the `VersionChecks` class (which figures out whether ",
                                        "+a given UAST element is known to only be called at a given API level, either by surrounding `if >= SDK-version` checks or ",
                                        "+`if < SDK-version` early returns in the method).",
                                        "+",
                                        "+Test Dependencies",
                                        "+",
                                        "+- **com.android.tools.lint:lint-tests**: Contains useful utilities for writing unit tests for Lint checks, ",
                                        "+including the `LintDetectorTest` base class.",
                                        "+- **com.android.tools:testutils**: It's unlikely that you need to depend on this directly. The test infrastructure ",
                                        "+depends on it indirectly though (the methods we use there were mostly for the older lint test infrastructure, ",
                                        "+not the newer one).  ",
                                        "+- **com.android.tools.lint:lint**: Lint checks don't need to depend on this. It's a separate artifact used by tools ",
                                        "+that want to integrate lint with the command line, such as the Gradle integration of lint. This is where things like ",
                                        "+terminal output, HTML reporting, command line parsing etc is handled.",
                                        "+",
                                        "+",
                                        " Support",
                                        " -------",
                                        " ",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "android-studio-2/build.gradle",
                            "content": {
                                "current": "/*\n * Copyright (C) 2015 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\napply plugin: 'java'\n\nrepositories {\n    google()\n    jcenter()\n}\n\next {\n    lintVersion = '26.0.0-beta2'\n}\n\ndependencies {\n    // For a description of the below dependencies, see the main project README\n    compile \"com.android.tools.lint:lint-api:$lintVersion\"\n    compile \"com.android.tools.lint:lint-checks:$lintVersion\"\n    testCompile \"junit:junit:4.11\"\n    testCompile \"com.android.tools.lint:lint:$lintVersion\"\n    testCompile \"com.android.tools.lint:lint-tests:$lintVersion\"\n    testCompile \"com.android.tools:testutils:$lintVersion\"\n}\n\njar {\n    manifest {\n        attributes(\"Lint-Registry\": \"com.example.google.lint.MyIssueRegistry\")\n    }\n}\n\ndefaultTasks 'assemble'\n",
                                "diffs": [
                                    [
                                        " }",
                                        " ",
                                        " dependencies {",
                                        "+    // For a description of the below dependencies, see the main project README",
                                        "     compile \"com.android.tools.lint:lint-api:$lintVersion\"",
                                        "     compile \"com.android.tools.lint:lint-checks:$lintVersion\"",
                                        "     testCompile \"junit:junit:4.11\"",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "android-studio-3/checks/build.gradle",
                            "content": {
                                "current": "apply plugin: 'java-library'\n\ndependencies {\n    // For a description of the below dependencies, see the main project README\n    compileOnly \"com.android.tools.lint:lint-api:$lintVersion\"\n    compileOnly \"com.android.tools.lint:lint-checks:$lintVersion\"\n    testCompile \"junit:junit:4.12\"\n    testCompile \"com.android.tools.lint:lint:$lintVersion\"\n    testCompile \"com.android.tools.lint:lint-tests:$lintVersion\"\n    testCompile \"com.android.tools:testutils:$lintVersion\"\n}\n\nsourceCompatibility = \"1.8\"\ntargetCompatibility = \"1.8\"\n\njar {\n    manifest {\n        // Only use the \"-v2\" key here if your checks have been updated to the\n        // new 3.0 APIs (including UAST)\n        attributes(\"Lint-Registry-v2\": \"com.example.lint.checks.SampleIssueRegistry\")\n    }\n}\n",
                                "diffs": [
                                    [
                                        " apply plugin: 'java-library'",
                                        " ",
                                        " dependencies {",
                                        "+    // For a description of the below dependencies, see the main project README",
                                        "     compileOnly \"com.android.tools.lint:lint-api:$lintVersion\"",
                                        "     compileOnly \"com.android.tools.lint:lint-checks:$lintVersion\"",
                                        "     testCompile \"junit:junit:4.12\"",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "bfcb1f2f01460e2cb3a3aa5f1f36fa3d52eff069",
                    "link": "https://github.com/googlesamples/android-custom-lint-rules/commit/bfcb1f2f01460e2cb3a3aa5f1f36fa3d52eff069",
                    "files": [
                        {
                            "name": "src/main/java/com/example/google/lint/MainActivityDetector.java",
                            "content": {
                                "current": "/*\n * Copyright (C) 2015 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.example.google.lint;\n\nimport com.android.annotations.NonNull;\nimport com.android.tools.lint.detector.api.Category;\nimport com.android.tools.lint.detector.api.Context;\nimport com.android.tools.lint.detector.api.Detector;\nimport com.android.tools.lint.detector.api.Implementation;\nimport com.android.tools.lint.detector.api.Issue;\nimport com.android.tools.lint.detector.api.LintUtils;\nimport com.android.tools.lint.detector.api.Location;\nimport com.android.tools.lint.detector.api.ResourceXmlDetector;\nimport com.android.tools.lint.detector.api.Scope;\nimport com.android.tools.lint.detector.api.Severity;\nimport com.android.tools.lint.detector.api.XmlContext;\n\nimport org.w3c.dom.Element;\nimport org.w3c.dom.Node;\n\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.EnumSet;\n\nimport static com.android.SdkConstants.ANDROID_MANIFEST_XML;\nimport static com.android.SdkConstants.ANDROID_URI;\nimport static com.android.SdkConstants.ATTR_NAME;\nimport static com.android.SdkConstants.TAG_ACTIVITY;\nimport static com.android.SdkConstants.TAG_APPLICATION;\nimport static com.android.SdkConstants.TAG_INTENT_FILTER;\nimport static com.android.xml.AndroidManifest.NODE_ACTION;\nimport static com.android.xml.AndroidManifest.NODE_CATEGORY;\nimport static com.example.google.lint.ManifestConstants.ACTION_NAME_MAIN;\nimport static com.example.google.lint.ManifestConstants.CATEGORY_NAME_LAUNCHER;\n\n/**\n * Checks for an activity with a launcher intent in <code>AndroidManifest.xml</code>.\n * <p/>\n * <b>NOTE: This is not a final API; if you rely on this be prepared\n * to adjust your code for the next tools release.</b>\n */\npublic class MainActivityDetector extends ResourceXmlDetector implements Detector.XmlScanner {\n    public static final Issue ISSUE = Issue.create(\n            \"MainActivityDetector\",\n            \"Missing Launcher Activities\",\n            \"This app should have an activity with a launcher intent.\",\n            Category.CORRECTNESS,\n            8,\n            Severity.ERROR,\n            new Implementation(\n                    MainActivityDetector.class,\n                    EnumSet.of(Scope.MANIFEST)));\n\n    /**\n     * This will be <code>true</code> if the current file we're checking has at least one activity.\n     */\n    private boolean mHasActivity;\n    /**\n     * This will be <code>true</code> if the file has an activity with a launcher intent.\n     */\n    private boolean mHasLauncherActivity;\n    /**\n     * The manifest file location for the main project, <code>null</code> if there is no manifest.\n     */\n    private Location mManifestLocation;\n\n    /**\n     * No-args constructor used by the lint framework to instantiate the detector.\n     */\n    public MainActivityDetector() {\n    }\n\n    @Override\n    public Collection<String> getApplicableElements() {\n        return Collections.singleton(TAG_ACTIVITY);\n    }\n\n    @Override\n    public void beforeCheckProject(@NonNull Context context) {\n        mHasActivity = false;\n        mHasLauncherActivity = false;\n        mManifestLocation = null;\n    }\n\n    @Override\n    public void afterCheckProject(@NonNull Context context) {\n        // Don't report issues on libraries that may not have a launcher activity\n        if (context.getProject() == context.getMainProject()\n                && !context.getMainProject().isLibrary()\n                && mManifestLocation != null) {\n            if (!mHasActivity) {\n                context.report(ISSUE, mManifestLocation,\n                        \"Expecting \" + ANDROID_MANIFEST_XML + \" to have an <\" + TAG_APPLICATION +\n                                \"> tag.\");\n            } else if (!mHasLauncherActivity) {\n                // Report the issue if the manifest file has no activity with a launcher intent.\n                context.report(ISSUE, mManifestLocation,\n                        \"Expecting \" + ANDROID_MANIFEST_XML +\n                                \" to have an activity with a launcher intent.\");\n            }\n        }\n    }\n\n    @Override\n    public void afterCheckFile(@NonNull Context context) {\n        // Store a reference to the manifest file in case we need to report it's location.\n        if (context.getProject() == context.getMainProject()) {\n            mManifestLocation = Location.create(context.file);\n        }\n    }\n\n    @Override\n    public void visitElement(XmlContext context, Element activityElement) {\n        // Checks every activity and reports an error if there is no activity with a launcher\n        // intent.\n        mHasActivity = true;\n        if (isMainActivity(activityElement)) {\n            mHasLauncherActivity = true;\n        }\n    }\n\n    /**\n     * Returns true if the XML node is an activity with a launcher intent.\n     *\n     * @param activityNode The node to check.\n     * @return <code>true</code> if the node is an activity with a launcher intent.\n     */\n    private boolean isMainActivity(Node activityNode) {\n        if (TAG_ACTIVITY.equals(activityNode.getNodeName())) {\n            // Loop through all <intent-filter> tags\n            for (Element activityChild : LintUtils.getChildren(activityNode)) {\n                if (TAG_INTENT_FILTER.equals(activityChild.getNodeName())) {\n                    // Check for these children nodes:\n                    //\n                    // <category android:name=\"android.intent.category.LAUNCHER\" />\n                    // <action android:name=\"android.intent.action.MAIN\" />\n                    boolean hasLauncherCategory = false;\n                    boolean hasMainAction = false;\n\n                    for (Element intentFilterChild : LintUtils.getChildren(activityChild)) {\n                        // Check for category tag)\n                        if (NODE_CATEGORY.equals(intentFilterChild.getNodeName())\n                                && CATEGORY_NAME_LAUNCHER.equals(\n                                intentFilterChild.getAttributeNS(ANDROID_URI, ATTR_NAME))) {\n                            hasLauncherCategory = true;\n                        }\n                        // Check for action tag\n                        if (NODE_ACTION.equals(intentFilterChild.getNodeName())\n                                && ACTION_NAME_MAIN.equals(\n                                intentFilterChild.getAttributeNS(ANDROID_URI, ATTR_NAME))) {\n                            hasMainAction = true;\n                        }\n                    }\n\n                    if (hasLauncherCategory && hasMainAction) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}\n",
                                "diffs": [
                                    [
                                        " import org.w3c.dom.Element;",
                                        " import org.w3c.dom.Node;",
                                        " ",
                                        "-import java.io.File;",
                                        " import java.util.Collection;",
                                        " import java.util.Collections;",
                                        " import java.util.EnumSet;",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "12f29057b5d68c9169a5728597764fc009ad4589",
                    "link": "https://github.com/googlesamples/android-custom-lint-rules/commit/12f29057b5d68c9169a5728597764fc009ad4589",
                    "files": [
                        {
                            "name": "docs/api-guide.html",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " ",
                                        " </p><ol start=\"1\">",
                                        " <li class=\"number\">Local analysis which doesn't depend on anything else. For example, a",
                                        "-   lint check check which flags typos can report incidents immediately.",
                                        "+   lint check which flags typos can report incidents immediately.",
                                        "    Lint calls these \u201cdefinite incidents\u201d.",
                                        " ",
                                        " <p></p><p>",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "docs/api-guide/partial-analysis.md.html",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " categories will be explained in subsequent sessions) :",
                                        " ",
                                        " 1. Local analysis which doesn't depend on anything else. For example, a",
                                        "-   lint check check which flags typos can report incidents immediately.",
                                        "-   Lint calls these \u201cdefinite incidents\u201d.",
                                        "+   lint check which flags typos can report incidents immediately. Lint",
                                        "+   calls these \u201cdefinite incidents\u201d.",
                                        " ",
                                        " 2. Local analysis which depends on a few, common conditions. For",
                                        "    example, in Android, a check may only apply if the `minSdkVersion <",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "9f855da4801e58ed6f78476e37b8318c5e15ea91",
                    "link": "https://github.com/googlesamples/android-custom-lint-rules/commit/9f855da4801e58ed6f78476e37b8318c5e15ea91",
                    "files": [
                        {
                            "name": ".gitignore",
                            "content": {
                                "current": "#built application files\n*.apk\n*.ap_\n\n# files for the dex VM\n*.dex\n\n# Java class files\n*.class\n\n# generated files\nbin/\ngen/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Windows thumbnail db\nThumbs.db\n\n# OSX files\n.DS_Store\n\n# Eclipse project files\n.classpath\n.project\n\n# Android Studio\n.idea\n*.iml\n\n#.idea/workspace.xml - remove # and delete .idea if it better suit your needs.\n.gradle\nbuild/\n",
                                "diffs": [
                                    [
                                        "+#built application files",
                                        "+*.apk",
                                        "+*.ap_",
                                        "+",
                                        "+# files for the dex VM",
                                        "+*.dex",
                                        "+",
                                        "+# Java class files",
                                        "+*.class",
                                        "+",
                                        "+# generated files",
                                        "+bin/",
                                        "+gen/",
                                        "+",
                                        "+# Local configuration file (sdk path, etc)",
                                        "+local.properties",
                                        "+",
                                        "+# Windows thumbnail db",
                                        "+Thumbs.db",
                                        "+",
                                        "+# OSX files",
                                        "+.DS_Store",
                                        "+",
                                        "+# Eclipse project files",
                                        "+.classpath",
                                        "+.project",
                                        "+",
                                        "+# Android Studio",
                                        "+.idea",
                                        "+*.iml",
                                        "+",
                                        "+#.idea/workspace.xml - remove # and delete .idea if it better suit your needs.",
                                        "+.gradle",
                                        "+build/",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "CONTRIBUTING.md",
                            "content": {
                                "current": "# How to become a contributor and submit your own code\n\n## Contributor License Agreements\n\nWe'd love to accept your sample apps and patches! Before we can take them, we\nhave to jump a couple of legal hurdles.\n\nPlease fill out either the individual or corporate Contributor License Agreement\n(CLA).\n\n  * If you are an individual writing original source code and you're sure you\n    own the intellectual property, then you'll need to sign an [individual CLA]\n    (https://developers.google.com/open-source/cla/individual).\n  * If you work for a company that wants to allow you to contribute your work,\n    then you'll need to sign a [corporate CLA]\n    (https://developers.google.com/open-source/cla/corporate).\n\nFollow either of the two links above to access the appropriate CLA and\ninstructions for how to sign and return it. Once we receive it, we'll be able to\naccept your pull requests.\n\n## Contributing A Patch\n\n1. Submit an issue describing your proposed change to the repo in question.\n1. The repo owner will respond to your issue promptly.\n1. If your proposed change is accepted, and you haven't already done so, sign a\n   Contributor License Agreement (see details above).\n1. Fork the desired repo, develop and test your code changes.\n1. Ensure that your code adheres to the existing style in the sample to which\n   you are contributing. Refer to the\n   [Google Cloud Platform Samples Style Guide]\n   (https://github.com/GoogleCloudPlatform/Template/wiki/style.html) for the\n   recommended coding standards for this organization.\n1. Ensure that your code has an appropriate set of unit tests which all pass.\n1. Submit a pull request.\n\n",
                                "diffs": [
                                    [
                                        "+# How to become a contributor and submit your own code",
                                        "+",
                                        "+## Contributor License Agreements",
                                        "+",
                                        "+We'd love to accept your sample apps and patches! Before we can take them, we",
                                        "+have to jump a couple of legal hurdles.",
                                        "+",
                                        "+Please fill out either the individual or corporate Contributor License Agreement",
                                        "+(CLA).",
                                        "+",
                                        "+  * If you are an individual writing original source code and you're sure you",
                                        "+    own the intellectual property, then you'll need to sign an [individual CLA]",
                                        "+    (https://developers.google.com/open-source/cla/individual).",
                                        "+  * If you work for a company that wants to allow you to contribute your work,",
                                        "+    then you'll need to sign a [corporate CLA]",
                                        "+    (https://developers.google.com/open-source/cla/corporate).",
                                        "+",
                                        "+Follow either of the two links above to access the appropriate CLA and",
                                        "+instructions for how to sign and return it. Once we receive it, we'll be able to",
                                        "+accept your pull requests.",
                                        "+",
                                        "+## Contributing A Patch",
                                        "+",
                                        "+1. Submit an issue describing your proposed change to the repo in question.",
                                        "+1. The repo owner will respond to your issue promptly.",
                                        "+1. If your proposed change is accepted, and you haven't already done so, sign a",
                                        "+   Contributor License Agreement (see details above).",
                                        "+1. Fork the desired repo, develop and test your code changes.",
                                        "+1. Ensure that your code adheres to the existing style in the sample to which",
                                        "+   you are contributing. Refer to the",
                                        "+   [Google Cloud Platform Samples Style Guide]",
                                        "+   (https://github.com/GoogleCloudPlatform/Template/wiki/style.html) for the",
                                        "+   recommended coding standards for this organization.",
                                        "+1. Ensure that your code has an appropriate set of unit tests which all pass.",
                                        "+1. Submit a pull request.",
                                        "+",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "LICENSE",
                            "content": {
                                "current": "Apache License\n--------------\n\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\nAll image and audio files (including *.png, *.jpg, *.svg, *.mp3, *.wav \nand *.ogg) are licensed under the CC-BY-NC license. All other files are \nlicensed under the Apache 2 license.\n\nCC-BY-NC License\n----------------\n\nAttribution-NonCommercial-ShareAlike 4.0 International\n\n=======================================================================\n\nCreative Commons Corporation (\"Creative Commons\") is not a law firm and\ndoes not provide legal services or legal advice. Distribution of\nCreative Commons public licenses does not create a lawyer-client or\nother relationship. Creative Commons makes its licenses and related\ninformation available on an \"as-is\" basis. Creative Commons gives no\nwarranties regarding its licenses, any material licensed under their\nterms and conditions, or any related information. Creative Commons\ndisclaims all liability for damages resulting from their use to the\nfullest extent possible.\n\nUsing Creative Commons Public Licenses\n\nCreative Commons public licenses provide a standard set of terms and\nconditions that creators and other rights holders may use to share\noriginal works of authorship and other material subject to copyright\nand certain other rights specified in the public license below. The\nfollowing considerations are for informational purposes only, are not\nexhaustive, and do not form part of our licenses.\n\n     Considerations for licensors: Our public licenses are\n     intended for use by those authorized to give the public\n     permission to use material in ways otherwise restricted by\n     copyright and certain other rights. Our licenses are\n     irrevocable. Licensors should read and understand the terms\n     and conditions of the license they choose before applying it.\n     Licensors should also secure all rights necessary before\n     applying our licenses so that the public can reuse the\n     material as expected. Licensors should clearly mark any\n     material not subject to the license. This includes other CC-\n     licensed material, or material used under an exception or\n     limitation to copyright. More considerations for licensors:\n\twiki.creativecommons.org/Considerations_for_licensors\n\n     Considerations for the public: By using one of our public\n     licenses, a licensor grants the public permission to use the\n     licensed material under specified terms and conditions. If\n     the licensor's permission is not necessary for any reason--for\n     example, because of any applicable exception or limitation to\n     copyright--then that use is not regulated by the license. Our\n     licenses grant only permissions under copyright and certain\n     other rights that a licensor has authority to grant. Use of\n     the licensed material may still be restricted for other\n     reasons, including because others have copyright or other\n     rights in the material. A licensor may make special requests,\n     such as asking that all changes be marked or described.\n     Although not required by our licenses, you are encouraged to\n     respect those requests where reasonable. More_considerations\n     for the public: \n\twiki.creativecommons.org/Considerations_for_licensees\n\n=======================================================================\n\nCreative Commons Attribution-NonCommercial-ShareAlike 4.0 International\nPublic License\n\nBy exercising the Licensed Rights (defined below), You accept and agree\nto be bound by the terms and conditions of this Creative Commons\nAttribution-NonCommercial-ShareAlike 4.0 International Public License\n(\"Public License\"). To the extent this Public License may be\ninterpreted as a contract, You are granted the Licensed Rights in\nconsideration of Your acceptance of these terms and conditions, and the\nLicensor grants You such rights in consideration of benefits the\nLicensor receives from making the Licensed Material available under\nthese terms and conditions.\n\n\nSection 1 -- Definitions.\n\n  a. Adapted Material means material subject to Copyright and Similar\n     Rights that is derived from or based upon the Licensed Material\n     and in which the Licensed Material is translated, altered,\n     arranged, transformed, or otherwise modified in a manner requiring\n     permission under the Copyright and Similar Rights held by the\n     Licensor. For purposes of this Public License, where the Licensed\n     Material is a musical work, performance, or sound recording,\n     Adapted Material is always produced where the Licensed Material is\n     synched in timed relation with a moving image.\n\n  b. Adapter's License means the license You apply to Your Copyright\n     and Similar Rights in Your contributions to Adapted Material in\n     accordance with the terms and conditions of this Public License.\n\n  c. BY-NC-SA Compatible License means a license listed at\n     creativecommons.org/compatiblelicenses, approved by Creative\n     Commons as essentially the equivalent of this Public License.\n\n  d. Copyright and Similar Rights means copyright and/or similar rights\n     closely related to copyright including, without limitation,\n     performance, broadcast, sound recording, and Sui Generis Database\n     Rights, without regard to how the rights are labeled or\n     categorized. For purposes of this Public License, the rights\n     specified in Section 2(b)(1)-(2) are not Copyright and Similar\n     Rights.\n\n  e. Effective Technological Measures means those measures that, in the\n     absence of proper authority, may not be circumvented under laws\n     fulfilling obligations under Article 11 of the WIPO Copyright\n     Treaty adopted on December 20, 1996, and/or similar international\n     agreements.\n\n  f. Exceptions and Limitations means fair use, fair dealing, and/or\n     any other exception or limitation to Copyright and Similar Rights\n     that applies to Your use of the Licensed Material.\n\n  g. License Elements means the license attributes listed in the name\n     of a Creative Commons Public License. The License Elements of this\n     Public License are Attribution, NonCommercial, and ShareAlike.\n\n  h. Licensed Material means the artistic or literary work, database,\n     or other material to which the Licensor applied this Public\n     License.\n\n  i. Licensed Rights means the rights granted to You subject to the\n     terms and conditions of this Public License, which are limited to\n     all Copyright and Similar Rights that apply to Your use of the\n     Licensed Material and that the Licensor has authority to license.\n\n  j. Licensor means the individual(s) or entity(ies) granting rights\n     under this Public License.\n\n  k. NonCommercial means not primarily intended for or directed towards\n     commercial advantage or monetary compensation. For purposes of\n     this Public License, the exchange of the Licensed Material for\n     other material subject to Copyright and Similar Rights by digital\n     file-sharing or similar means is NonCommercial provided there is\n     no payment of monetary compensation in connection with the\n     exchange.\n\n  l. Share means to provide material to the public by any means or\n     process that requires permission under the Licensed Rights, such\n     as reproduction, public display, public performance, distribution,\n     dissemination, communication, or importation, and to make material\n     available to the public including in ways that members of the\n     public may access the material from a place and at a time\n     individually chosen by them.\n\n  m. Sui Generis Database Rights means rights other than copyright\n     resulting from Directive 96/9/EC of the European Parliament and of\n     the Council of 11 March 1996 on the legal protection of databases,\n     as amended and/or succeeded, as well as other essentially\n     equivalent rights anywhere in the world.\n\n  n. You means the individual or entity exercising the Licensed Rights\n     under this Public License. Your has a corresponding meaning.\n\n\nSection 2 -- Scope.\n\n  a. License grant.\n\n       1. Subject to the terms and conditions of this Public License,\n          the Licensor hereby grants You a worldwide, royalty-free,\n          non-sublicensable, non-exclusive, irrevocable license to\n          exercise the Licensed Rights in the Licensed Material to:\n\n            a. reproduce and Share the Licensed Material, in whole or\n               in part, for NonCommercial purposes only; and\n\n            b. produce, reproduce, and Share Adapted Material for\n               NonCommercial purposes only.\n\n       2. Exceptions and Limitations. For the avoidance of doubt, where\n          Exceptions and Limitations apply to Your use, this Public\n          License does not apply, and You do not need to comply with\n          its terms and conditions.\n\n       3. Term. The term of this Public License is specified in Section\n          6(a).\n\n       4. Media and formats; technical modifications allowed. The\n          Licensor authorizes You to exercise the Licensed Rights in\n          all media and formats whether now known or hereafter created,\n          and to make technical modifications necessary to do so. The\n          Licensor waives and/or agrees not to assert any right or\n          authority to forbid You from making technical modifications\n          necessary to exercise the Licensed Rights, including\n          technical modifications necessary to circumvent Effective\n          Technological Measures. For purposes of this Public License,\n          simply making modifications authorized by this Section 2(a)\n          (4) never produces Adapted Material.\n\n       5. Downstream recipients.\n\n            a. Offer from the Licensor -- Licensed Material. Every\n               recipient of the Licensed Material automatically\n               receives an offer from the Licensor to exercise the\n               Licensed Rights under the terms and conditions of this\n               Public License.\n\n            b. Additional offer from the Licensor -- Adapted Material.\n               Every recipient of Adapted Material from You\n               automatically receives an offer from the Licensor to\n               exercise the Licensed Rights in the Adapted Material\n               under the conditions of the Adapter's License You apply.\n\n            c. No downstream restrictions. You may not offer or impose\n               any additional or different terms or conditions on, or\n               apply any Effective Technological Measures to, the\n               Licensed Material if doing so restricts exercise of the\n               Licensed Rights by any recipient of the Licensed\n               Material.\n\n       6. No endorsement. Nothing in this Public License constitutes or\n          may be construed as permission to assert or imply that You\n          are, or that Your use of the Licensed Material is, connected\n          with, or sponsored, endorsed, or granted official status by,\n          the Licensor or others designated to receive attribution as\n          provided in Section 3(a)(1)(A)(i).\n\n  b. Other rights.\n\n       1. Moral rights, such as the right of integrity, are not\n          licensed under this Public License, nor are publicity,\n          privacy, and/or other similar personality rights; however, to\n          the extent possible, the Licensor waives and/or agrees not to\n          assert any such rights held by the Licensor to the limited\n          extent necessary to allow You to exercise the Licensed\n          Rights, but not otherwise.\n\n       2. Patent and trademark rights are not licensed under this\n          Public License.\n\n       3. To the extent possible, the Licensor waives any right to\n          collect royalties from You for the exercise of the Licensed\n          Rights, whether directly or through a collecting society\n          under any voluntary or waivable statutory or compulsory\n          licensing scheme. In all other cases the Licensor expressly\n          reserves any right to collect such royalties, including when\n          the Licensed Material is used other than for NonCommercial\n          purposes.\n\n\nSection 3 -- License Conditions.\n\nYour exercise of the Licensed Rights is expressly made subject to the\nfollowing conditions.\n\n  a. Attribution.\n\n       1. If You Share the Licensed Material (including in modified\n          form), You must:\n\n            a. retain the following if it is supplied by the Licensor\n               with the Licensed Material:\n\n                 i. identification of the creator(s) of the Licensed\n                    Material and any others designated to receive\n                    attribution, in any reasonable manner requested by\n                    the Licensor (including by pseudonym if\n                    designated);\n\n                ii. a copyright notice;\n\n               iii. a notice that refers to this Public License;\n\n                iv. a notice that refers to the disclaimer of\n                    warranties;\n\n                 v. a URI or hyperlink to the Licensed Material to the\n                    extent reasonably practicable;\n\n            b. indicate if You modified the Licensed Material and\n               retain an indication of any previous modifications; and\n\n            c. indicate the Licensed Material is licensed under this\n               Public License, and include the text of, or the URI or\n               hyperlink to, this Public License.\n\n       2. You may satisfy the conditions in Section 3(a)(1) in any\n          reasonable manner based on the medium, means, and context in\n          which You Share the Licensed Material. For example, it may be\n          reasonable to satisfy the conditions by providing a URI or\n          hyperlink to a resource that includes the required\n          information.\n       3. If requested by the Licensor, You must remove any of the\n          information required by Section 3(a)(1)(A) to the extent\n          reasonably practicable.\n\n  b. ShareAlike.\n\n     In addition to the conditions in Section 3(a), if You Share\n     Adapted Material You produce, the following conditions also apply.\n\n       1. The Adapter's License You apply must be a Creative Commons\n          license with the same License Elements, this version or\n          later, or a BY-NC-SA Compatible License.\n\n       2. You must include the text of, or the URI or hyperlink to, the\n          Adapter's License You apply. You may satisfy this condition\n          in any reasonable manner based on the medium, means, and\n          context in which You Share Adapted Material.\n\n       3. You may not offer or impose any additional or different terms\n          or conditions on, or apply any Effective Technological\n          Measures to, Adapted Material that restrict exercise of the\n          rights granted under the Adapter's License You apply.\n\n\nSection 4 -- Sui Generis Database Rights.\n\nWhere the Licensed Rights include Sui Generis Database Rights that\napply to Your use of the Licensed Material:\n\n  a. for the avoidance of doubt, Section 2(a)(1) grants You the right\n     to extract, reuse, reproduce, and Share all or a substantial\n     portion of the contents of the database for NonCommercial purposes\n     only;\n\n  b. if You include all or a substantial portion of the database\n     contents in a database in which You have Sui Generis Database\n     Rights, then the database in which You have Sui Generis Database\n     Rights (but not its individual contents) is Adapted Material,\n     including for purposes of Section 3(b); and\n\n  c. You must comply with the conditions in Section 3(a) if You Share\n     all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not\nreplace Your obligations under this Public License where the Licensed\nRights include other Copyright and Similar Rights.\n\n\nSection 5 -- Disclaimer of Warranties and Limitation of Liability.\n\n  a. UNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE\n     EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS\n     AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF\n     ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS,\n     IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION,\n     WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR\n     PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS,\n     ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT\n     KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT\n     ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\n\n  b. TO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE\n     TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION,\n     NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT,\n     INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES,\n     COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR\n     USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN\n     ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR\n     DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR\n     IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\n\n  c. The disclaimer of warranties and limitation of liability provided\n     above shall be interpreted in a manner that, to the extent\n     possible, most closely approximates an absolute disclaimer and\n     waiver of all liability.\n\n\nSection 6 -- Term and Termination.\n\n  a. This Public License applies for the term of the Copyright and\n     Similar Rights licensed here. However, if You fail to comply with\n     this Public License, then Your rights under this Public License\n     terminate automatically.\n\n  b. Where Your right to use the Licensed Material has terminated under\n     Section 6(a), it reinstates:\n\n       1. automatically as of the date the violation is cured, provided\n          it is cured within 30 days of Your discovery of the\n          violation; or\n\n       2. upon express reinstatement by the Licensor.\n\n     For the avoidance of doubt, this Section 6(b) does not affect any\n     right the Licensor may have to seek remedies for Your violations\n     of this Public License.\n\n  c. For the avoidance of doubt, the Licensor may also offer the\n     Licensed Material under separate terms or conditions or stop\n     distributing the Licensed Material at any time; however, doing so\n     will not terminate this Public License.\n\n  d. Sections 1, 5, 6, 7, and 8 survive termination of this Public\n     License.\n\n\nSection 7 -- Other Terms and Conditions.\n\n  a. The Licensor shall not be bound by any additional or different\n     terms or conditions communicated by You unless expressly agreed.\n\n  b. Any arrangements, understandings, or agreements regarding the\n     Licensed Material not stated herein are separate from and\n     independent of the terms and conditions of this Public License.\n\n\nSection 8 -- Interpretation.\n\n  a. For the avoidance of doubt, this Public License does not, and\n     shall not be interpreted to, reduce, limit, restrict, or impose\n     conditions on any use of the Licensed Material that could lawfully\n     be made without permission under this Public License.\n\n  b. To the extent possible, if any provision of this Public License is\n     deemed unenforceable, it shall be automatically reformed to the\n     minimum extent necessary to make it enforceable. If the provision\n     cannot be reformed, it shall be severed from this Public License\n     without affecting the enforceability of the remaining terms and\n     conditions.\n\n  c. No term or condition of this Public License will be waived and no\n     failure to comply consented to unless expressly agreed to by the\n     Licensor.\n\n  d. Nothing in this Public License constitutes or may be interpreted\n     as a limitation upon, or waiver of, any privileges and immunities\n     that apply to the Licensor or You, including from the legal\n     processes of any jurisdiction or authority.\n\n=======================================================================\n\nCreative Commons is not a party to its public licenses.\nNotwithstanding, Creative Commons may elect to apply one of its public\nlicenses to material it publishes and in those instances will be\nconsidered the \"Licensor.\" Except for the limited purpose of indicating\nthat material is shared under a Creative Commons public license or as\notherwise permitted by the Creative Commons policies published at\ncreativecommons.org/policies, Creative Commons does not authorize the\nuse of the trademark \"Creative Commons\" or any other trademark or logo\nof Creative Commons without its prior written consent including,\nwithout limitation, in connection with any unauthorized modifications\nto any of its public licenses or any other arrangements,\nunderstandings, or agreements concerning use of licensed material. For\nthe avoidance of doubt, this paragraph does not form part of the public\nlicenses.\n\nCreative Commons may be contacted at creativecommons.org.\n\n",
                                "diffs": [
                                    [
                                        "+Apache License",
                                        "+--------------",
                                        "+",
                                        "+                           Version 2.0, January 2004",
                                        "+                        http://www.apache.org/licenses/",
                                        "+",
                                        "+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION",
                                        "+",
                                        "+   1. Definitions.",
                                        "+",
                                        "+      \"License\" shall mean the terms and conditions for use, reproduction,",
                                        "+      and distribution as defined by Sections 1 through 9 of this document.",
                                        "+",
                                        "+      \"Licensor\" shall mean the copyright owner or entity authorized by",
                                        "+      the copyright owner that is granting the License.",
                                        "+",
                                        "+      \"Legal Entity\" shall mean the union of the acting entity and all",
                                        "+      other entities that control, are controlled by, or are under common",
                                        "+      control with that entity. For the purposes of this definition,",
                                        "+      \"control\" means (i) the power, direct or indirect, to cause the",
                                        "+      direction or management of such entity, whether by contract or",
                                        "+      otherwise, or (ii) ownership of fifty percent (50%) or more of the",
                                        "+      outstanding shares, or (iii) beneficial ownership of such entity.",
                                        "+",
                                        "+      \"You\" (or \"Your\") shall mean an individual or Legal Entity",
                                        "+      exercising permissions granted by this License.",
                                        "+",
                                        "+      \"Source\" form shall mean the preferred form for making modifications,",
                                        "+      including but not limited to software source code, documentation",
                                        "+      source, and configuration files.",
                                        "+",
                                        "+      \"Object\" form shall mean any form resulting from mechanical",
                                        "+      transformation or translation of a Source form, including but",
                                        "+      not limited to compiled object code, generated documentation,",
                                        "+      and conversions to other media types.",
                                        "+",
                                        "+      \"Work\" shall mean the work of authorship, whether in Source or",
                                        "+      Object form, made available under the License, as indicated by a",
                                        "+      copyright notice that is included in or attached to the work",
                                        "+      (an example is provided in the Appendix below).",
                                        "+",
                                        "+      \"Derivative Works\" shall mean any work, whether in Source or Object",
                                        "+      form, that is based on (or derived from) the Work and for which the",
                                        "+      editorial revisions, annotations, elaborations, or other modifications",
                                        "+      represent, as a whole, an original work of authorship. For the purposes",
                                        "+      of this License, Derivative Works shall not include works that remain",
                                        "+      separable from, or merely link (or bind by name) to the interfaces of,",
                                        "+      the Work and Derivative Works thereof.",
                                        "+",
                                        "+      \"Contribution\" shall mean any work of authorship, including",
                                        "+      the original version of the Work and any modifications or additions",
                                        "+      to that Work or Derivative Works thereof, that is intentionally",
                                        "+      submitted to Licensor for inclusion in the Work by the copyright owner",
                                        "+      or by an individual or Legal Entity authorized to submit on behalf of",
                                        "+      the copyright owner. For the purposes of this definition, \"submitted\"",
                                        "+      means any form of electronic, verbal, or written communication sent",
                                        "+      to the Licensor or its representatives, including but not limited to",
                                        "+      communication on electronic mailing lists, source code control systems,",
                                        "+      and issue tracking systems that are managed by, or on behalf of, the",
                                        "+      Licensor for the purpose of discussing and improving the Work, but",
                                        "+      excluding communication that is conspicuously marked or otherwise",
                                        "+      designated in writing by the copyright owner as \"Not a Contribution.\"",
                                        "+",
                                        "+      \"Contributor\" shall mean Licensor and any individual or Legal Entity",
                                        "+      on behalf of whom a Contribution has been received by Licensor and",
                                        "+      subsequently incorporated within the Work.",
                                        "+",
                                        "+   2. Grant of Copyright License. Subject to the terms and conditions of",
                                        "+      this License, each Contributor hereby grants to You a perpetual,",
                                        "+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable",
                                        "+      copyright license to reproduce, prepare Derivative Works of,",
                                        "+      publicly display, publicly perform, sublicense, and distribute the",
                                        "+      Work and such Derivative Works in Source or Object form.",
                                        "+",
                                        "+   3. Grant of Patent License. Subject to the terms and conditions of",
                                        "+      this License, each Contributor hereby grants to You a perpetual,",
                                        "+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable",
                                        "+      (except as stated in this section) patent license to make, have made,",
                                        "+      use, offer to sell, sell, import, and otherwise transfer the Work,",
                                        "+      where such license applies only to those patent claims licensable",
                                        "+      by such Contributor that are necessarily infringed by their",
                                        "+      Contribution(s) alone or by combination of their Contribution(s)",
                                        "+      with the Work to which such Contribution(s) was submitted. If You",
                                        "+      institute patent litigation against any entity (including a",
                                        "+      cross-claim or counterclaim in a lawsuit) alleging that the Work",
                                        "+      or a Contribution incorporated within the Work constitutes direct",
                                        "+      or contributory patent infringement, then any patent licenses",
                                        "+      granted to You under this License for that Work shall terminate",
                                        "+      as of the date such litigation is filed.",
                                        "+",
                                        "+   4. Redistribution. You may reproduce and distribute copies of the",
                                        "+      Work or Derivative Works thereof in any medium, with or without",
                                        "+      modifications, and in Source or Object form, provided that You",
                                        "+      meet the following conditions:",
                                        "+",
                                        "+      (a) You must give any other recipients of the Work or",
                                        "+          Derivative Works a copy of this License; and",
                                        "+",
                                        "+      (b) You must cause any modified files to carry prominent notices",
                                        "+          stating that You changed the files; and",
                                        "+",
                                        "+      (c) You must retain, in the Source form of any Derivative Works",
                                        "+          that You distribute, all copyright, patent, trademark, and",
                                        "+          attribution notices from the Source form of the Work,",
                                        "+          excluding those notices that do not pertain to any part of",
                                        "+          the Derivative Works; and",
                                        "+",
                                        "+      (d) If the Work includes a \"NOTICE\" text file as part of its",
                                        "+          distribution, then any Derivative Works that You distribute must",
                                        "+          include a readable copy of the attribution notices contained",
                                        "+          within such NOTICE file, excluding those notices that do not",
                                        "+          pertain to any part of the Derivative Works, in at least one",
                                        "+          of the following places: within a NOTICE text file distributed",
                                        "+          as part of the Derivative Works; within the Source form or",
                                        "+          documentation, if provided along with the Derivative Works; or,",
                                        "+          within a display generated by the Derivative Works, if and",
                                        "+          wherever such third-party notices normally appear. The contents",
                                        "+          of the NOTICE file are for informational purposes only and",
                                        "+          do not modify the License. You may add Your own attribution",
                                        "+          notices within Derivative Works that You distribute, alongside",
                                        "+          or as an addendum to the NOTICE text from the Work, provided",
                                        "+          that such additional attribution notices cannot be construed",
                                        "+          as modifying the License.",
                                        "+",
                                        "+      You may add Your own copyright statement to Your modifications and",
                                        "+      may provide additional or different license terms and conditions",
                                        "+      for use, reproduction, or distribution of Your modifications, or",
                                        "+      for any such Derivative Works as a whole, provided Your use,",
                                        "+      reproduction, and distribution of the Work otherwise complies with",
                                        "+      the conditions stated in this License.",
                                        "+",
                                        "+   5. Submission of Contributions. Unless You explicitly state otherwise,",
                                        "+      any Contribution intentionally submitted for inclusion in the Work",
                                        "+      by You to the Licensor shall be under the terms and conditions of",
                                        "+      this License, without any additional terms or conditions.",
                                        "+      Notwithstanding the above, nothing herein shall supersede or modify",
                                        "+      the terms of any separate license agreement you may have executed",
                                        "+      with Licensor regarding such Contributions.",
                                        "+",
                                        "+   6. Trademarks. This License does not grant permission to use the trade",
                                        "+      names, trademarks, service marks, or product names of the Licensor,",
                                        "+      except as required for reasonable and customary use in describing the",
                                        "+      origin of the Work and reproducing the content of the NOTICE file.",
                                        "+",
                                        "+   7. Disclaimer of Warranty. Unless required by applicable law or",
                                        "+      agreed to in writing, Licensor provides the Work (and each",
                                        "+      Contributor provides its Contributions) on an \"AS IS\" BASIS,",
                                        "+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or",
                                        "+      implied, including, without limitation, any warranties or conditions",
                                        "+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A",
                                        "+      PARTICULAR PURPOSE. You are solely responsible for determining the",
                                        "+      appropriateness of using or redistributing the Work and assume any",
                                        "+      risks associated with Your exercise of permissions under this License.",
                                        "+",
                                        "+   8. Limitation of Liability. In no event and under no legal theory,",
                                        "+      whether in tort (including negligence), contract, or otherwise,",
                                        "+      unless required by applicable law (such as deliberate and grossly",
                                        "+      negligent acts) or agreed to in writing, shall any Contributor be",
                                        "+      liable to You for damages, including any direct, indirect, special,",
                                        "+      incidental, or consequential damages of any character arising as a",
                                        "+      result of this License or out of the use or inability to use the",
                                        "+      Work (including but not limited to damages for loss of goodwill,",
                                        "+      work stoppage, computer failure or malfunction, or any and all",
                                        "+      other commercial damages or losses), even if such Contributor",
                                        "+      has been advised of the possibility of such damages.",
                                        "+",
                                        "+   9. Accepting Warranty or Additional Liability. While redistributing",
                                        "+      the Work or Derivative Works thereof, You may choose to offer,",
                                        "+      and charge a fee for, acceptance of support, warranty, indemnity,",
                                        "+      or other liability obligations and/or rights consistent with this",
                                        "+      License. However, in accepting such obligations, You may act only",
                                        "+      on Your own behalf and on Your sole responsibility, not on behalf",
                                        "+      of any other Contributor, and only if You agree to indemnify,",
                                        "+      defend, and hold each Contributor harmless for any liability",
                                        "+      incurred by, or claims asserted against, such Contributor by reason",
                                        "+      of your accepting any such warranty or additional liability.",
                                        "+",
                                        "+   END OF TERMS AND CONDITIONS",
                                        "+",
                                        "+   APPENDIX: How to apply the Apache License to your work.",
                                        "+",
                                        "+      To apply the Apache License to your work, attach the following",
                                        "+      boilerplate notice, with the fields enclosed by brackets \"{}\"",
                                        "+      replaced with your own identifying information. (Don't include",
                                        "+      the brackets!)  The text should be enclosed in the appropriate",
                                        "+      comment syntax for the file format. We also recommend that a",
                                        "+      file or class name and description of purpose be included on the",
                                        "+      same \"printed page\" as the copyright notice for easier",
                                        "+      identification within third-party archives.",
                                        "+",
                                        "+   Copyright {yyyy} {name of copyright owner}",
                                        "+",
                                        "+   Licensed under the Apache License, Version 2.0 (the \"License\");",
                                        "+   you may not use this file except in compliance with the License.",
                                        "+   You may obtain a copy of the License at",
                                        "+",
                                        "+       http://www.apache.org/licenses/LICENSE-2.0",
                                        "+",
                                        "+   Unless required by applicable law or agreed to in writing, software",
                                        "+   distributed under the License is distributed on an \"AS IS\" BASIS,",
                                        "+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                                        "+   See the License for the specific language governing permissions and",
                                        "+   limitations under the License.",
                                        "+",
                                        "+All image and audio files (including *.png, *.jpg, *.svg, *.mp3, *.wav ",
                                        "+and *.ogg) are licensed under the CC-BY-NC license. All other files are ",
                                        "+licensed under the Apache 2 license.",
                                        "+",
                                        "+CC-BY-NC License",
                                        "+----------------",
                                        "+",
                                        "+Attribution-NonCommercial-ShareAlike 4.0 International",
                                        "+",
                                        "+=======================================================================",
                                        "+",
                                        "+Creative Commons Corporation (\"Creative Commons\") is not a law firm and",
                                        "+does not provide legal services or legal advice. Distribution of",
                                        "+Creative Commons public licenses does not create a lawyer-client or",
                                        "+other relationship. Creative Commons makes its licenses and related",
                                        "+information available on an \"as-is\" basis. Creative Commons gives no",
                                        "+warranties regarding its licenses, any material licensed under their",
                                        "+terms and conditions, or any related information. Creative Commons",
                                        "+disclaims all liability for damages resulting from their use to the",
                                        "+fullest extent possible.",
                                        "+",
                                        "+Using Creative Commons Public Licenses",
                                        "+",
                                        "+Creative Commons public licenses provide a standard set of terms and",
                                        "+conditions that creators and other rights holders may use to share",
                                        "+original works of authorship and other material subject to copyright",
                                        "+and certain other rights specified in the public license below. The",
                                        "+following considerations are for informational purposes only, are not",
                                        "+exhaustive, and do not form part of our licenses.",
                                        "+",
                                        "+     Considerations for licensors: Our public licenses are",
                                        "+     intended for use by those authorized to give the public",
                                        "+     permission to use material in ways otherwise restricted by",
                                        "+     copyright and certain other rights. Our licenses are",
                                        "+     irrevocable. Licensors should read and understand the terms",
                                        "+     and conditions of the license they choose before applying it.",
                                        "+     Licensors should also secure all rights necessary before",
                                        "+     applying our licenses so that the public can reuse the",
                                        "+     material as expected. Licensors should clearly mark any",
                                        "+     material not subject to the license. This includes other CC-",
                                        "+     licensed material, or material used under an exception or",
                                        "+     limitation to copyright. More considerations for licensors:",
                                        "+\twiki.creativecommons.org/Considerations_for_licensors",
                                        "+",
                                        "+     Considerations for the public: By using one of our public",
                                        "+     licenses, a licensor grants the public permission to use the",
                                        "+     licensed material under specified terms and conditions. If",
                                        "+     the licensor's permission is not necessary for any reason--for",
                                        "+     example, because of any applicable exception or limitation to",
                                        "+     copyright--then that use is not regulated by the license. Our",
                                        "+     licenses grant only permissions under copyright and certain",
                                        "+     other rights that a licensor has authority to grant. Use of",
                                        "+     the licensed material may still be restricted for other",
                                        "+     reasons, including because others have copyright or other",
                                        "+     rights in the material. A licensor may make special requests,",
                                        "+     such as asking that all changes be marked or described.",
                                        "+     Although not required by our licenses, you are encouraged to",
                                        "+     respect those requests where reasonable. More_considerations",
                                        "+     for the public: ",
                                        "+\twiki.creativecommons.org/Considerations_for_licensees",
                                        "+",
                                        "+=======================================================================",
                                        "+",
                                        "+Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International",
                                        "+Public License",
                                        "+",
                                        "+By exercising the Licensed Rights (defined below), You accept and agree",
                                        "+to be bound by the terms and conditions of this Creative Commons",
                                        "+Attribution-NonCommercial-ShareAlike 4.0 International Public License",
                                        "+(\"Public License\"). To the extent this Public License may be",
                                        "+interpreted as a contract, You are granted the Licensed Rights in",
                                        "+consideration of Your acceptance of these terms and conditions, and the",
                                        "+Licensor grants You such rights in consideration of benefits the",
                                        "+Licensor receives from making the Licensed Material available under",
                                        "+these terms and conditions.",
                                        "+",
                                        "+",
                                        "+Section 1 -- Definitions.",
                                        "+",
                                        "+  a. Adapted Material means material subject to Copyright and Similar",
                                        "+     Rights that is derived from or based upon the Licensed Material",
                                        "+     and in which the Licensed Material is translated, altered,",
                                        "+     arranged, transformed, or otherwise modified in a manner requiring",
                                        "+     permission under the Copyright and Similar Rights held by the",
                                        "+     Licensor. For purposes of this Public License, where the Licensed",
                                        "+     Material is a musical work, performance, or sound recording,",
                                        "+     Adapted Material is always produced where the Licensed Material is",
                                        "+     synched in timed relation with a moving image.",
                                        "+",
                                        "+  b. Adapter's License means the license You apply to Your Copyright",
                                        "+     and Similar Rights in Your contributions to Adapted Material in",
                                        "+     accordance with the terms and conditions of this Public License.",
                                        "+",
                                        "+  c. BY-NC-SA Compatible License means a license listed at",
                                        "+     creativecommons.org/compatiblelicenses, approved by Creative",
                                        "+     Commons as essentially the equivalent of this Public License.",
                                        "+",
                                        "+  d. Copyright and Similar Rights means copyright and/or similar rights",
                                        "+     closely related to copyright including, without limitation,",
                                        "+     performance, broadcast, sound recording, and Sui Generis Database",
                                        "+     Rights, without regard to how the rights are labeled or",
                                        "+     categorized. For purposes of this Public License, the rights",
                                        "+     specified in Section 2(b)(1)-(2) are not Copyright and Similar",
                                        "+     Rights.",
                                        "+",
                                        "+  e. Effective Technological Measures means those measures that, in the",
                                        "+     absence of proper authority, may not be circumvented under laws",
                                        "+     fulfilling obligations under Article 11 of the WIPO Copyright",
                                        "+     Treaty adopted on December 20, 1996, and/or similar international",
                                        "+     agreements.",
                                        "+",
                                        "+  f. Exceptions and Limitations means fair use, fair dealing, and/or",
                                        "+     any other exception or limitation to Copyright and Similar Rights",
                                        "+     that applies to Your use of the Licensed Material.",
                                        "+",
                                        "+  g. License Elements means the license attributes listed in the name",
                                        "+     of a Creative Commons Public License. The License Elements of this",
                                        "+     Public License are Attribution, NonCommercial, and ShareAlike.",
                                        "+",
                                        "+  h. Licensed Material means the artistic or literary work, database,",
                                        "+     or other material to which the Licensor applied this Public",
                                        "+     License.",
                                        "+",
                                        "+  i. Licensed Rights means the rights granted to You subject to the",
                                        "+     terms and conditions of this Public License, which are limited to",
                                        "+     all Copyright and Similar Rights that apply to Your use of the",
                                        "+     Licensed Material and that the Licensor has authority to license.",
                                        "+",
                                        "+  j. Licensor means the individual(s) or entity(ies) granting rights",
                                        "+     under this Public License.",
                                        "+",
                                        "+  k. NonCommercial means not primarily intended for or directed towards",
                                        "+     commercial advantage or monetary compensation. For purposes of",
                                        "+     this Public License, the exchange of the Licensed Material for",
                                        "+     other material subject to Copyright and Similar Rights by digital",
                                        "+     file-sharing or similar means is NonCommercial provided there is",
                                        "+     no payment of monetary compensation in connection with the",
                                        "+     exchange.",
                                        "+",
                                        "+  l. Share means to provide material to the public by any means or",
                                        "+     process that requires permission under the Licensed Rights, such",
                                        "+     as reproduction, public display, public performance, distribution,",
                                        "+     dissemination, communication, or importation, and to make material",
                                        "+     available to the public including in ways that members of the",
                                        "+     public may access the material from a place and at a time",
                                        "+     individually chosen by them.",
                                        "+",
                                        "+  m. Sui Generis Database Rights means rights other than copyright",
                                        "+     resulting from Directive 96/9/EC of the European Parliament and of",
                                        "+     the Council of 11 March 1996 on the legal protection of databases,",
                                        "+     as amended and/or succeeded, as well as other essentially",
                                        "+     equivalent rights anywhere in the world.",
                                        "+",
                                        "+  n. You means the individual or entity exercising the Licensed Rights",
                                        "+     under this Public License. Your has a corresponding meaning.",
                                        "+",
                                        "+",
                                        "+Section 2 -- Scope.",
                                        "+",
                                        "+  a. License grant.",
                                        "+",
                                        "+       1. Subject to the terms and conditions of this Public License,",
                                        "+          the Licensor hereby grants You a worldwide, royalty-free,",
                                        "+          non-sublicensable, non-exclusive, irrevocable license to",
                                        "+          exercise the Licensed Rights in the Licensed Material to:",
                                        "+",
                                        "+            a. reproduce and Share the Licensed Material, in whole or",
                                        "+               in part, for NonCommercial purposes only; and",
                                        "+",
                                        "+            b. produce, reproduce, and Share Adapted Material for",
                                        "+               NonCommercial purposes only.",
                                        "+",
                                        "+       2. Exceptions and Limitations. For the avoidance of doubt, where",
                                        "+          Exceptions and Limitations apply to Your use, this Public",
                                        "+          License does not apply, and You do not need to comply with",
                                        "+          its terms and conditions.",
                                        "+",
                                        "+       3. Term. The term of this Public License is specified in Section",
                                        "+          6(a).",
                                        "+",
                                        "+       4. Media and formats; technical modifications allowed. The",
                                        "+          Licensor authorizes You to exercise the Licensed Rights in",
                                        "+          all media and formats whether now known or hereafter created,",
                                        "+          and to make technical modifications necessary to do so. The",
                                        "+          Licensor waives and/or agrees not to assert any right or",
                                        "+          authority to forbid You from making technical modifications",
                                        "+          necessary to exercise the Licensed Rights, including",
                                        "+          technical modifications necessary to circumvent Effective",
                                        "+          Technological Measures. For purposes of this Public License,",
                                        "+          simply making modifications authorized by this Section 2(a)",
                                        "+          (4) never produces Adapted Material.",
                                        "+",
                                        "+       5. Downstream recipients.",
                                        "+",
                                        "+            a. Offer from the Licensor -- Licensed Material. Every",
                                        "+               recipient of the Licensed Material automatically",
                                        "+               receives an offer from the Licensor to exercise the",
                                        "+               Licensed Rights under the terms and conditions of this",
                                        "+               Public License.",
                                        "+",
                                        "+            b. Additional offer from the Licensor -- Adapted Material.",
                                        "+               Every recipient of Adapted Material from You",
                                        "+               automatically receives an offer from the Licensor to",
                                        "+               exercise the Licensed Rights in the Adapted Material",
                                        "+               under the conditions of the Adapter's License You apply.",
                                        "+",
                                        "+            c. No downstream restrictions. You may not offer or impose",
                                        "+               any additional or different terms or conditions on, or",
                                        "+               apply any Effective Technological Measures to, the",
                                        "+               Licensed Material if doing so restricts exercise of the",
                                        "+               Licensed Rights by any recipient of the Licensed",
                                        "+               Material.",
                                        "+",
                                        "+       6. No endorsement. Nothing in this Public License constitutes or",
                                        "+          may be construed as permission to assert or imply that You",
                                        "+          are, or that Your use of the Licensed Material is, connected",
                                        "+          with, or sponsored, endorsed, or granted official status by,",
                                        "+          the Licensor or others designated to receive attribution as",
                                        "+          provided in Section 3(a)(1)(A)(i).",
                                        "+",
                                        "+  b. Other rights.",
                                        "+",
                                        "+       1. Moral rights, such as the right of integrity, are not",
                                        "+          licensed under this Public License, nor are publicity,",
                                        "+          privacy, and/or other similar personality rights; however, to",
                                        "+          the extent possible, the Licensor waives and/or agrees not to",
                                        "+          assert any such rights held by the Licensor to the limited",
                                        "+          extent necessary to allow You to exercise the Licensed",
                                        "+          Rights, but not otherwise.",
                                        "+",
                                        "+       2. Patent and trademark rights are not licensed under this",
                                        "+          Public License.",
                                        "+",
                                        "+       3. To the extent possible, the Licensor waives any right to",
                                        "+          collect royalties from You for the exercise of the Licensed",
                                        "+          Rights, whether directly or through a collecting society",
                                        "+          under any voluntary or waivable statutory or compulsory",
                                        "+          licensing scheme. In all other cases the Licensor expressly",
                                        "+          reserves any right to collect such royalties, including when",
                                        "+          the Licensed Material is used other than for NonCommercial",
                                        "+          purposes.",
                                        "+",
                                        "+",
                                        "+Section 3 -- License Conditions.",
                                        "+",
                                        "+Your exercise of the Licensed Rights is expressly made subject to the",
                                        "+following conditions.",
                                        "+",
                                        "+  a. Attribution.",
                                        "+",
                                        "+       1. If You Share the Licensed Material (including in modified",
                                        "+          form), You must:",
                                        "+",
                                        "+            a. retain the following if it is supplied by the Licensor",
                                        "+               with the Licensed Material:",
                                        "+",
                                        "+                 i. identification of the creator(s) of the Licensed",
                                        "+                    Material and any others designated to receive",
                                        "+                    attribution, in any reasonable manner requested by",
                                        "+                    the Licensor (including by pseudonym if",
                                        "+                    designated);",
                                        "+",
                                        "+                ii. a copyright notice;",
                                        "+",
                                        "+               iii. a notice that refers to this Public License;",
                                        "+",
                                        "+                iv. a notice that refers to the disclaimer of",
                                        "+                    warranties;",
                                        "+",
                                        "+                 v. a URI or hyperlink to the Licensed Material to the",
                                        "+                    extent reasonably practicable;",
                                        "+",
                                        "+            b. indicate if You modified the Licensed Material and",
                                        "+               retain an indication of any previous modifications; and",
                                        "+",
                                        "+            c. indicate the Licensed Material is licensed under this",
                                        "+               Public License, and include the text of, or the URI or",
                                        "+               hyperlink to, this Public License.",
                                        "+",
                                        "+       2. You may satisfy the conditions in Section 3(a)(1) in any",
                                        "+          reasonable manner based on the medium, means, and context in",
                                        "+          which You Share the Licensed Material. For example, it may be",
                                        "+          reasonable to satisfy the conditions by providing a URI or",
                                        "+          hyperlink to a resource that includes the required",
                                        "+          information.",
                                        "+       3. If requested by the Licensor, You must remove any of the",
                                        "+          information required by Section 3(a)(1)(A) to the extent",
                                        "+          reasonably practicable.",
                                        "+",
                                        "+  b. ShareAlike.",
                                        "+",
                                        "+     In addition to the conditions in Section 3(a), if You Share",
                                        "+     Adapted Material You produce, the following conditions also apply.",
                                        "+",
                                        "+       1. The Adapter's License You apply must be a Creative Commons",
                                        "+          license with the same License Elements, this version or",
                                        "+          later, or a BY-NC-SA Compatible License.",
                                        "+",
                                        "+       2. You must include the text of, or the URI or hyperlink to, the",
                                        "+          Adapter's License You apply. You may satisfy this condition",
                                        "+          in any reasonable manner based on the medium, means, and",
                                        "+          context in which You Share Adapted Material.",
                                        "+",
                                        "+       3. You may not offer or impose any additional or different terms",
                                        "+          or conditions on, or apply any Effective Technological",
                                        "+          Measures to, Adapted Material that restrict exercise of the",
                                        "+          rights granted under the Adapter's License You apply.",
                                        "+",
                                        "+",
                                        "+Section 4 -- Sui Generis Database Rights.",
                                        "+",
                                        "+Where the Licensed Rights include Sui Generis Database Rights that",
                                        "+apply to Your use of the Licensed Material:",
                                        "+",
                                        "+  a. for the avoidance of doubt, Section 2(a)(1) grants You the right",
                                        "+     to extract, reuse, reproduce, and Share all or a substantial",
                                        "+     portion of the contents of the database for NonCommercial purposes",
                                        "+     only;",
                                        "+",
                                        "+  b. if You include all or a substantial portion of the database",
                                        "+     contents in a database in which You have Sui Generis Database",
                                        "+     Rights, then the database in which You have Sui Generis Database",
                                        "+     Rights (but not its individual contents) is Adapted Material,",
                                        "+     including for purposes of Section 3(b); and",
                                        "+",
                                        "+  c. You must comply with the conditions in Section 3(a) if You Share",
                                        "+     all or a substantial portion of the contents of the database.",
                                        "+",
                                        "+For the avoidance of doubt, this Section 4 supplements and does not",
                                        "+replace Your obligations under this Public License where the Licensed",
                                        "+Rights include other Copyright and Similar Rights.",
                                        "+",
                                        "+",
                                        "+Section 5 -- Disclaimer of Warranties and Limitation of Liability.",
                                        "+",
                                        "+  a. UNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE",
                                        "+     EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS",
                                        "+     AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF",
                                        "+     ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS,",
                                        "+     IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION,",
                                        "+     WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR",
                                        "+     PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS,",
                                        "+     ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT",
                                        "+     KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT",
                                        "+     ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.",
                                        "+",
                                        "+  b. TO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE",
                                        "+     TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION,",
                                        "+     NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT,",
                                        "+     INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES,",
                                        "+     COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR",
                                        "+     USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN",
                                        "+     ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR",
                                        "+     DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR",
                                        "+     IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.",
                                        "+",
                                        "+  c. The disclaimer of warranties and limitation of liability provided",
                                        "+     above shall be interpreted in a manner that, to the extent",
                                        "+     possible, most closely approximates an absolute disclaimer and",
                                        "+     waiver of all liability.",
                                        "+",
                                        "+",
                                        "+Section 6 -- Term and Termination.",
                                        "+",
                                        "+  a. This Public License applies for the term of the Copyright and",
                                        "+     Similar Rights licensed here. However, if You fail to comply with",
                                        "+     this Public License, then Your rights under this Public License",
                                        "+     terminate automatically.",
                                        "+",
                                        "+  b. Where Your right to use the Licensed Material has terminated under",
                                        "+     Section 6(a), it reinstates:",
                                        "+",
                                        "+       1. automatically as of the date the violation is cured, provided",
                                        "+          it is cured within 30 days of Your discovery of the",
                                        "+          violation; or",
                                        "+",
                                        "+       2. upon express reinstatement by the Licensor.",
                                        "+",
                                        "+     For the avoidance of doubt, this Section 6(b) does not affect any",
                                        "+     right the Licensor may have to seek remedies for Your violations",
                                        "+     of this Public License.",
                                        "+",
                                        "+  c. For the avoidance of doubt, the Licensor may also offer the",
                                        "+     Licensed Material under separate terms or conditions or stop",
                                        "+     distributing the Licensed Material at any time; however, doing so",
                                        "+     will not terminate this Public License.",
                                        "+",
                                        "+  d. Sections 1, 5, 6, 7, and 8 survive termination of this Public",
                                        "+     License.",
                                        "+",
                                        "+",
                                        "+Section 7 -- Other Terms and Conditions.",
                                        "+",
                                        "+  a. The Licensor shall not be bound by any additional or different",
                                        "+     terms or conditions communicated by You unless expressly agreed.",
                                        "+",
                                        "+  b. Any arrangements, understandings, or agreements regarding the",
                                        "+     Licensed Material not stated herein are separate from and",
                                        "+     independent of the terms and conditions of this Public License.",
                                        "+",
                                        "+",
                                        "+Section 8 -- Interpretation.",
                                        "+",
                                        "+  a. For the avoidance of doubt, this Public License does not, and",
                                        "+     shall not be interpreted to, reduce, limit, restrict, or impose",
                                        "+     conditions on any use of the Licensed Material that could lawfully",
                                        "+     be made without permission under this Public License.",
                                        "+",
                                        "+  b. To the extent possible, if any provision of this Public License is",
                                        "+     deemed unenforceable, it shall be automatically reformed to the",
                                        "+     minimum extent necessary to make it enforceable. If the provision",
                                        "+     cannot be reformed, it shall be severed from this Public License",
                                        "+     without affecting the enforceability of the remaining terms and",
                                        "+     conditions.",
                                        "+",
                                        "+  c. No term or condition of this Public License will be waived and no",
                                        "+     failure to comply consented to unless expressly agreed to by the",
                                        "+     Licensor.",
                                        "+",
                                        "+  d. Nothing in this Public License constitutes or may be interpreted",
                                        "+     as a limitation upon, or waiver of, any privileges and immunities",
                                        "+     that apply to the Licensor or You, including from the legal",
                                        "+     processes of any jurisdiction or authority.",
                                        "+",
                                        "+=======================================================================",
                                        "+",
                                        "+Creative Commons is not a party to its public licenses.",
                                        "+Notwithstanding, Creative Commons may elect to apply one of its public",
                                        "+licenses to material it publishes and in those instances will be",
                                        "+considered the \"Licensor.\" Except for the limited purpose of indicating",
                                        "+that material is shared under a Creative Commons public license or as",
                                        "+otherwise permitted by the Creative Commons policies published at",
                                        "+creativecommons.org/policies, Creative Commons does not authorize the",
                                        "+use of the trademark \"Creative Commons\" or any other trademark or logo",
                                        "+of Creative Commons without its prior written consent including,",
                                        "+without limitation, in connection with any unauthorized modifications",
                                        "+to any of its public licenses or any other arrangements,",
                                        "+understandings, or agreements concerning use of licensed material. For",
                                        "+the avoidance of doubt, this paragraph does not form part of the public",
                                        "+licenses.",
                                        "+",
                                        "+Creative Commons may be contacted at creativecommons.org.",
                                        "+",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "README.md",
                            "content": {
                                "current": "Custom Lint Rules\n============\n\nThe [Android `lint` tool](http://developer.android.com/tools/help/lint.html) is a static code\n analysis tool that checks your Android project source files for potential bugs and optimization\n improvements for correctness, security, performance, usability, accessibility, and\n internationalization. Lint comes with over 100 checks, however it can be extended with additional\n custom rules.\n\nThe Custom Lint Rules API is **not stable** and is subject to change in the future. Be ready to change\n your custom lint rule implementation when the API changes.\n\nIntroduction\n------------\n\nThe Android Lint API allows users to create custom lint rules. For example, if you are the author of\n a library project, and your library project has certain usage requirements, you can write\n additional lint rules to check that your library is used correctly, and then you can distribute\n those extra lint rules for users of the library. Similarly, you may have company-local rules you'd\n like to enforce.\n\nThis sample demonstrates how to create a custom lint checks and corresponding tests for those rules.\n\nGetting Started\n---------------\n\n##### Fetch code\n\n`git clone https://github.com/googlesamples/custom-lint-rules.git`\n\n##### Build the validator\n\n`./gradlew build`\n\n##### Copy to the lint directory\n\n`cp ./build/libs/custom-lint-rules.jar ~/.android/lint/`\n\n##### Verify whether the issues are registered with lint\n\n`lint --show MainActivityDetector`\n\n##### Run lint\n\n`lint`\n\n> Note: If you can't run `lint` directly, you may want to include android tools `PATH` in your\n `~/.bash_profile`.\n> (i.e. `PATH=$PATH:~/Library/Android/sdk/tools`)\n>\n> Then run `source ~/.bash_profile`.\n\nSupport\n-------\n\n- Google+ Community: https://plus.google.com/communities/android\n- Stack Overflow: http://stackoverflow.com/questions/tagged/android\n\nIf you've found an error in this sample, please file an issue:\nhttps://github.com/googlesamples/custom-lint-rules/issues\n\nPatches are encouraged, and may be submitted by forking this project and\nsubmitting a pull request through GitHub.\n\nLicense\n-------\nLicensed under the Apache 2.0 license. See the LICENSE file for details.\n\nHow to make contributions?\n--------------------------\nPlease read and follow the steps in the CONTRIBUTING.md\n",
                                "diffs": [
                                    [
                                        "+Custom Lint Rules",
                                        "+============",
                                        "+",
                                        "+The [Android `lint` tool](http://developer.android.com/tools/help/lint.html) is a static code",
                                        "+ analysis tool that checks your Android project source files for potential bugs and optimization",
                                        "+ improvements for correctness, security, performance, usability, accessibility, and",
                                        "+ internationalization. Lint comes with over 100 checks, however it can be extended with additional",
                                        "+ custom rules.",
                                        "+",
                                        "+The Custom Lint Rules API is **not stable** and is subject to change in the future. Be ready to change",
                                        "+ your custom lint rule implementation when the API changes.",
                                        "+",
                                        "+Introduction",
                                        "+------------",
                                        "+",
                                        "+The Android Lint API allows users to create custom lint rules. For example, if you are the author of",
                                        "+ a library project, and your library project has certain usage requirements, you can write",
                                        "+ additional lint rules to check that your library is used correctly, and then you can distribute",
                                        "+ those extra lint rules for users of the library. Similarly, you may have company-local rules you'd",
                                        "+ like to enforce.",
                                        "+",
                                        "+This sample demonstrates how to create a custom lint checks and corresponding tests for those rules.",
                                        "+",
                                        "+Getting Started",
                                        "+---------------",
                                        "+",
                                        "+##### Fetch code",
                                        "+",
                                        "+`git clone https://github.com/googlesamples/custom-lint-rules.git`",
                                        "+",
                                        "+##### Build the validator",
                                        "+",
                                        "+`./gradlew build`",
                                        "+",
                                        "+##### Copy to the lint directory",
                                        "+",
                                        "+`cp ./build/libs/custom-lint-rules.jar ~/.android/lint/`",
                                        "+",
                                        "+##### Verify whether the issues are registered with lint",
                                        "+",
                                        "+`lint --show MainActivityDetector`",
                                        "+",
                                        "+##### Run lint",
                                        "+",
                                        "+`lint`",
                                        "+",
                                        "+> Note: If you can't run `lint` directly, you may want to include android tools `PATH` in your",
                                        "+ `~/.bash_profile`.",
                                        "+> (i.e. `PATH=$PATH:~/Library/Android/sdk/tools`)",
                                        "+>",
                                        "+> Then run `source ~/.bash_profile`.",
                                        "+",
                                        "+Support",
                                        "+-------",
                                        "+",
                                        "+- Google+ Community: https://plus.google.com/communities/android",
                                        "+- Stack Overflow: http://stackoverflow.com/questions/tagged/android",
                                        "+",
                                        "+If you've found an error in this sample, please file an issue:",
                                        "+https://github.com/googlesamples/custom-lint-rules/issues",
                                        "+",
                                        "+Patches are encouraged, and may be submitted by forking this project and",
                                        "+submitting a pull request through GitHub.",
                                        "+",
                                        "+License",
                                        "+-------",
                                        "+Licensed under the Apache 2.0 license. See the LICENSE file for details.",
                                        "+",
                                        "+How to make contributions?",
                                        "+--------------------------",
                                        "+Please read and follow the steps in the CONTRIBUTING.md",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "build.gradle",
                            "content": {
                                "current": "/*\n * Copyright (C) 2015 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\napply plugin: 'java'\n\nrepositories {\n    jcenter()\n    flatDir {\n        dirs 'libs'\n    }\n}\n\n// JDK 1.6 is required to support all versions of Android Studio.\n// See http://tools.android.com/build/studio.\nsourceCompatibility = 1.6\ndependencies {\n    compile 'com.android.tools.lint:lint-api:24.3.0-beta3'\n    compile 'com.android.tools.lint:lint-checks:24.3.0-beta3'\n    testCompile 'junit:junit:4.11'\n    // TODO(nageshs): Ask AS team why this is not in maven\n    testCompile(name: 'testutils-24.3.0-beta3', ext: 'jar')\n    testCompile(name: 'lint-tests', ext: 'jar')\n    testCompile 'com.android.tools.lint:lint:24.3.0-beta3'\n}\n\njar {\n    manifest {\n        attributes(\"Lint-Registry\": \"MyIssueRegistry\")\n    }\n}\n\ndefaultTasks 'assemble'\n",
                                "diffs": [
                                    [
                                        "+/*",
                                        "+ * Copyright (C) 2015 The Android Open Source Project",
                                        "+ *",
                                        "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                                        "+ * you may not use this file except in compliance with the License.",
                                        "+ * You may obtain a copy of the License at",
                                        "+ *",
                                        "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                                        "+ *",
                                        "+ * Unless required by applicable law or agreed to in writing, software",
                                        "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                                        "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                                        "+ * See the License for the specific language governing permissions and",
                                        "+ * limitations under the License.",
                                        "+ */",
                                        "+",
                                        "+apply plugin: 'java'",
                                        "+",
                                        "+repositories {",
                                        "+    jcenter()",
                                        "+    flatDir {",
                                        "+        dirs 'libs'",
                                        "+    }",
                                        "+}",
                                        "+",
                                        "+// JDK 1.6 is required to support all versions of Android Studio.",
                                        "+// See http://tools.android.com/build/studio.",
                                        "+sourceCompatibility = 1.6",
                                        "+dependencies {",
                                        "+    compile 'com.android.tools.lint:lint-api:24.3.0-beta3'",
                                        "+    compile 'com.android.tools.lint:lint-checks:24.3.0-beta3'",
                                        "+    testCompile 'junit:junit:4.11'",
                                        "+    // TODO(nageshs): Ask AS team why this is not in maven",
                                        "+    testCompile(name: 'testutils-24.3.0-beta3', ext: 'jar')",
                                        "+    testCompile(name: 'lint-tests', ext: 'jar')",
                                        "+    testCompile 'com.android.tools.lint:lint:24.3.0-beta3'",
                                        "+}",
                                        "+",
                                        "+jar {",
                                        "+    manifest {",
                                        "+        attributes(\"Lint-Registry\": \"MyIssueRegistry\")",
                                        "+    }",
                                        "+}",
                                        "+",
                                        "+defaultTasks 'assemble'",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "gradle/wrapper/gradle-wrapper.properties",
                            "content": {
                                "current": "#Wed Apr 10 15:27:10 PDT 2013\ndistributionBase=GRADLE_USER_HOME\ndistributionPath=wrapper/dists\nzipStoreBase=GRADLE_USER_HOME\nzipStorePath=wrapper/dists\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-2.2.1-all.zip\n",
                                "diffs": [
                                    [
                                        "+#Wed Apr 10 15:27:10 PDT 2013",
                                        "+distributionBase=GRADLE_USER_HOME",
                                        "+distributionPath=wrapper/dists",
                                        "+zipStoreBase=GRADLE_USER_HOME",
                                        "+zipStorePath=wrapper/dists",
                                        "+distributionUrl=https\\://services.gradle.org/distributions/gradle-2.2.1-all.zip",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "gradlew",
                            "content": {
                                "current": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n",
                                "diffs": [
                                    [
                                        "+#!/usr/bin/env bash",
                                        "+",
                                        "+##############################################################################",
                                        "+##",
                                        "+##  Gradle start up script for UN*X",
                                        "+##",
                                        "+##############################################################################",
                                        "+",
                                        "+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.",
                                        "+DEFAULT_JVM_OPTS=\"\"",
                                        "+",
                                        "+APP_NAME=\"Gradle\"",
                                        "+APP_BASE_NAME=`basename \"$0\"`",
                                        "+",
                                        "+# Use the maximum available, or set MAX_FD != -1 to use that value.",
                                        "+MAX_FD=\"maximum\"",
                                        "+",
                                        "+warn ( ) {",
                                        "+    echo \"$*\"",
                                        "+}",
                                        "+",
                                        "+die ( ) {",
                                        "+    echo",
                                        "+    echo \"$*\"",
                                        "+    echo",
                                        "+    exit 1",
                                        "+}",
                                        "+",
                                        "+# OS specific support (must be 'true' or 'false').",
                                        "+cygwin=false",
                                        "+msys=false",
                                        "+darwin=false",
                                        "+case \"`uname`\" in",
                                        "+  CYGWIN* )",
                                        "+    cygwin=true",
                                        "+    ;;",
                                        "+  Darwin* )",
                                        "+    darwin=true",
                                        "+    ;;",
                                        "+  MINGW* )",
                                        "+    msys=true",
                                        "+    ;;",
                                        "+esac",
                                        "+",
                                        "+# For Cygwin, ensure paths are in UNIX format before anything is touched.",
                                        "+if $cygwin ; then",
                                        "+    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`",
                                        "+fi",
                                        "+",
                                        "+# Attempt to set APP_HOME",
                                        "+# Resolve links: $0 may be a link",
                                        "+PRG=\"$0\"",
                                        "+# Need this for relative symlinks.",
                                        "+while [ -h \"$PRG\" ] ; do",
                                        "+    ls=`ls -ld \"$PRG\"`",
                                        "+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`",
                                        "+    if expr \"$link\" : '/.*' > /dev/null; then",
                                        "+        PRG=\"$link\"",
                                        "+    else",
                                        "+        PRG=`dirname \"$PRG\"`\"/$link\"",
                                        "+    fi",
                                        "+done",
                                        "+SAVED=\"`pwd`\"",
                                        "+cd \"`dirname \\\"$PRG\\\"`/\" >&-",
                                        "+APP_HOME=\"`pwd -P`\"",
                                        "+cd \"$SAVED\" >&-",
                                        "+",
                                        "+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar",
                                        "+",
                                        "+# Determine the Java command to use to start the JVM.",
                                        "+if [ -n \"$JAVA_HOME\" ] ; then",
                                        "+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then",
                                        "+        # IBM's JDK on AIX uses strange locations for the executables",
                                        "+        JAVACMD=\"$JAVA_HOME/jre/sh/java\"",
                                        "+    else",
                                        "+        JAVACMD=\"$JAVA_HOME/bin/java\"",
                                        "+    fi",
                                        "+    if [ ! -x \"$JAVACMD\" ] ; then",
                                        "+        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME",
                                        "+",
                                        "+Please set the JAVA_HOME variable in your environment to match the",
                                        "+location of your Java installation.\"",
                                        "+    fi",
                                        "+else",
                                        "+    JAVACMD=\"java\"",
                                        "+    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.",
                                        "+",
                                        "+Please set the JAVA_HOME variable in your environment to match the",
                                        "+location of your Java installation.\"",
                                        "+fi",
                                        "+",
                                        "+# Increase the maximum file descriptors if we can.",
                                        "+if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then",
                                        "+    MAX_FD_LIMIT=`ulimit -H -n`",
                                        "+    if [ $? -eq 0 ] ; then",
                                        "+        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then",
                                        "+            MAX_FD=\"$MAX_FD_LIMIT\"",
                                        "+        fi",
                                        "+        ulimit -n $MAX_FD",
                                        "+        if [ $? -ne 0 ] ; then",
                                        "+            warn \"Could not set maximum file descriptor limit: $MAX_FD\"",
                                        "+        fi",
                                        "+    else",
                                        "+        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"",
                                        "+    fi",
                                        "+fi",
                                        "+",
                                        "+# For Darwin, add options to specify how the application appears in the dock",
                                        "+if $darwin; then",
                                        "+    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"",
                                        "+fi",
                                        "+",
                                        "+# For Cygwin, switch paths to Windows format before running java",
                                        "+if $cygwin ; then",
                                        "+    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`",
                                        "+    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`",
                                        "+",
                                        "+    # We build the pattern for arguments to be converted via cygpath",
                                        "+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`",
                                        "+    SEP=\"\"",
                                        "+    for dir in $ROOTDIRSRAW ; do",
                                        "+        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"",
                                        "+        SEP=\"|\"",
                                        "+    done",
                                        "+    OURCYGPATTERN=\"(^($ROOTDIRS))\"",
                                        "+    # Add a user-defined pattern to the cygpath arguments",
                                        "+    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then",
                                        "+        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"",
                                        "+    fi",
                                        "+    # Now convert the arguments - kludge to limit ourselves to /bin/sh",
                                        "+    i=0",
                                        "+    for arg in \"$@\" ; do",
                                        "+        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`",
                                        "+        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option",
                                        "+",
                                        "+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition",
                                        "+            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`",
                                        "+        else",
                                        "+            eval `echo args$i`=\"\\\"$arg\\\"\"",
                                        "+        fi",
                                        "+        i=$((i+1))",
                                        "+    done",
                                        "+    case $i in",
                                        "+        (0) set -- ;;",
                                        "+        (1) set -- \"$args0\" ;;",
                                        "+        (2) set -- \"$args0\" \"$args1\" ;;",
                                        "+        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;",
                                        "+        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;",
                                        "+        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;",
                                        "+        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;",
                                        "+        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;",
                                        "+        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;",
                                        "+        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;",
                                        "+    esac",
                                        "+fi",
                                        "+",
                                        "+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules",
                                        "+function splitJvmOpts() {",
                                        "+    JVM_OPTS=(\"$@\")",
                                        "+}",
                                        "+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS",
                                        "+JVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"",
                                        "+",
                                        "+exec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "gradlew.bat",
                            "content": {
                                "current": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windowz variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\ngoto execute\r\n\r\n:4NT_args\r\n@rem Get arguments from the 4NT Shell from JP Software\r\nset CMD_LINE_ARGS=%$\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n",
                                "diffs": [
                                    [
                                        "+@if \"%DEBUG%\" == \"\" @echo off",
                                        "+@rem ##########################################################################",
                                        "+@rem",
                                        "+@rem  Gradle startup script for Windows",
                                        "+@rem",
                                        "+@rem ##########################################################################",
                                        "+",
                                        "+@rem Set local scope for the variables with windows NT shell",
                                        "+if \"%OS%\"==\"Windows_NT\" setlocal",
                                        "+",
                                        "+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.",
                                        "+set DEFAULT_JVM_OPTS=",
                                        "+",
                                        "+set DIRNAME=%~dp0",
                                        "+if \"%DIRNAME%\" == \"\" set DIRNAME=.",
                                        "+set APP_BASE_NAME=%~n0",
                                        "+set APP_HOME=%DIRNAME%",
                                        "+",
                                        "+@rem Find java.exe",
                                        "+if defined JAVA_HOME goto findJavaFromJavaHome",
                                        "+",
                                        "+set JAVA_EXE=java.exe",
                                        "+%JAVA_EXE% -version >NUL 2>&1",
                                        "+if \"%ERRORLEVEL%\" == \"0\" goto init",
                                        "+",
                                        "+echo.",
                                        "+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.",
                                        "+echo.",
                                        "+echo Please set the JAVA_HOME variable in your environment to match the",
                                        "+echo location of your Java installation.",
                                        "+",
                                        "+goto fail",
                                        "+",
                                        "+:findJavaFromJavaHome",
                                        "+set JAVA_HOME=%JAVA_HOME:\"=%",
                                        "+set JAVA_EXE=%JAVA_HOME%/bin/java.exe",
                                        "+",
                                        "+if exist \"%JAVA_EXE%\" goto init",
                                        "+",
                                        "+echo.",
                                        "+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%",
                                        "+echo.",
                                        "+echo Please set the JAVA_HOME variable in your environment to match the",
                                        "+echo location of your Java installation.",
                                        "+",
                                        "+goto fail",
                                        "+",
                                        "+:init",
                                        "+@rem Get command-line arguments, handling Windowz variants",
                                        "+",
                                        "+if not \"%OS%\" == \"Windows_NT\" goto win9xME_args",
                                        "+if \"%@eval[2+2]\" == \"4\" goto 4NT_args",
                                        "+",
                                        "+:win9xME_args",
                                        "+@rem Slurp the command line arguments.",
                                        "+set CMD_LINE_ARGS=",
                                        "+set _SKIP=2",
                                        "+",
                                        "+:win9xME_args_slurp",
                                        "+if \"x%~1\" == \"x\" goto execute",
                                        "+",
                                        "+set CMD_LINE_ARGS=%*",
                                        "+goto execute",
                                        "+",
                                        "+:4NT_args",
                                        "+@rem Get arguments from the 4NT Shell from JP Software",
                                        "+set CMD_LINE_ARGS=%$",
                                        "+",
                                        "+:execute",
                                        "+@rem Setup the command line",
                                        "+",
                                        "+set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar",
                                        "+",
                                        "+@rem Execute Gradle",
                                        "+\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%",
                                        "+",
                                        "+:end",
                                        "+@rem End local scope for the variables with windows NT shell",
                                        "+if \"%ERRORLEVEL%\"==\"0\" goto mainEnd",
                                        "+",
                                        "+:fail",
                                        "+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of",
                                        "+rem the _cmd.exe /c_ return code!",
                                        "+if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1",
                                        "+exit /b 1",
                                        "+",
                                        "+:mainEnd",
                                        "+if \"%OS%\"==\"Windows_NT\" endlocal",
                                        "+",
                                        "+:omega",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/java/com/example/google/lint/MainActivityDetector.java",
                            "content": {
                                "current": "/*\n * Copyright (C) 2015 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.example.google.lint;\n\nimport com.android.annotations.NonNull;\nimport com.android.tools.lint.detector.api.Category;\nimport com.android.tools.lint.detector.api.Context;\nimport com.android.tools.lint.detector.api.Detector;\nimport com.android.tools.lint.detector.api.Implementation;\nimport com.android.tools.lint.detector.api.Issue;\nimport com.android.tools.lint.detector.api.Location;\nimport com.android.tools.lint.detector.api.ResourceXmlDetector;\nimport com.android.tools.lint.detector.api.Scope;\nimport com.android.tools.lint.detector.api.Severity;\nimport com.android.tools.lint.detector.api.XmlContext;\n\nimport org.w3c.dom.Element;\nimport org.w3c.dom.Node;\nimport org.w3c.dom.NodeList;\n\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.EnumSet;\n\nimport static com.android.SdkConstants.ANDROID_MANIFEST_XML;\nimport static com.android.SdkConstants.ANDROID_URI;\nimport static com.android.SdkConstants.ATTR_NAME;\nimport static com.android.SdkConstants.TAG_ACTIVITY;\nimport static com.android.SdkConstants.TAG_APPLICATION;\nimport static com.android.SdkConstants.TAG_INTENT_FILTER;\nimport static com.android.xml.AndroidManifest.NODE_ACTION;\nimport static com.android.xml.AndroidManifest.NODE_CATEGORY;\n\n/**\n * Checks for a main activity in <code>AndroidManifest.xml</code>.\n */\npublic class MainActivityDetector extends ResourceXmlDetector implements Detector.XmlScanner {\n    public static final Issue ISSUE = Issue.create(\n            \"MainActivityDetector\",\n            \"Checks for a main activity\",\n            \"This app should have a main launcher activity.\",\n            Category.CORRECTNESS,\n            8,\n            Severity.ERROR,\n            new Implementation(\n                    MainActivityDetector.class,\n                    EnumSet.of(Scope.MANIFEST)));\n\n    /**\n     * Will be <code>true</code> if the current file we're checking has at least one activity.\n     */\n    private boolean mHasActivity;\n    /**\n     * Will be <code>true</code> if the file has a main activity.\n     */\n    private boolean mHasMainActivity;\n\n    @Override\n    public Collection<String> getApplicableElements() {\n        return Arrays.asList(\n                TAG_ACTIVITY\n        );\n    }\n\n    @Override\n    public void beforeCheckFile(@NonNull Context context) {\n        mHasActivity = false;\n        mHasMainActivity = false;\n    }\n\n    @Override\n    public void afterCheckFile(@NonNull Context context) {\n        // Report an error if there are no <application> tags to check.\n        // We assume the application tag is in the right place (i.e. have correct parent elements).\n        Location location = Location.create(context.file);\n        if (!mHasActivity) {\n            context.report(ISSUE, location,\n                    \"Expecting \" + ANDROID_MANIFEST_XML + \" to have an <\" + TAG_APPLICATION +\n                            \"> tag.\");\n        } else if (!mHasMainActivity) {\n            // Report the issue if the manifest file has no main activity.\n            context.report(ISSUE, location,\n                    \"Expecting \" + ANDROID_MANIFEST_XML + \" to have a main activity.\");\n        }\n    }\n\n    @Override\n    public void visitElement(XmlContext context, Element activityElement) {\n        // Checks every activity under the <application> element and reports an error if there is\n        // no main activity.\n        mHasActivity = true;\n        if (isMainActivity(activityElement)) {\n            mHasMainActivity = true;\n        }\n    }\n\n    /**\n     * Returns true if the XML node is a main activity.\n     * <p/>\n     * A main activity is an <code>&lt;activity&gt;</code> node with an <code>&lt;\n     * intent-filter&gt;</code> that contains the following tags:\n     * <p/>\n     * <pre>\n     *   <category android:name=\"android.intent.category.LAUNCHER\" />\n     *   <action android:name=\"android.intent.action.MAIN\" />\n     * </pre>\n     *\n     * @param activityNode The node to check.\n     * @return <code>true</code> if the node is a main activity.\n     */\n    private boolean isMainActivity(Node activityNode) {\n        if (TAG_ACTIVITY.equals(activityNode.getNodeName())) {\n            // Loop through all <intent-filter> tags\n            NodeList activityChildren = activityNode.getChildNodes();\n            for (int i = 0; i < activityChildren.getLength(); ++i) {\n                Node activityChild = activityChildren.item(i);\n                if (TAG_INTENT_FILTER.equals(activityChild.getNodeName())) {\n                    NodeList intentFilterChildren = activityChild.getChildNodes();\n\n                    // Check for these children nodes:\n                    //\n                    // <category android:name=\"android.intent.category.LAUNCHER\" />\n                    // <action android:name=\"android.intent.action.MAIN\" />\n                    boolean hasLauncherCategory = false;\n                    boolean hasMainAction = false;\n\n                    for (int j = 0; j < intentFilterChildren.getLength(); ++j) {\n                        Node intentFilterChild = intentFilterChildren.item(j);\n                        // Check for category tag\n                        if (NODE_CATEGORY.equals(intentFilterChild.getNodeName())) {\n                            Node categoryName = intentFilterChild.getAttributes()\n                                    .getNamedItemNS(ANDROID_URI, ATTR_NAME);\n                            if (categoryName != null && categoryName.getNodeValue().equals(\n                                    ManifestConstants.CATEGORY_NAME_LAUNCHER)) {\n                                hasLauncherCategory = true;\n                            }\n                        }\n                        // Check for action tag\n                        if (NODE_ACTION.equals(intentFilterChild.getNodeName())) {\n                            Node actionName = intentFilterChild.getAttributes()\n                                    .getNamedItemNS(ANDROID_URI, ATTR_NAME);\n                            if (actionName != null && actionName.getNodeValue().equals(\n                                    ManifestConstants.ACTION_NAME_MAIN)) {\n                                hasMainAction = true;\n                            }\n                        }\n                    }\n\n                    if (hasLauncherCategory && hasMainAction) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}\n",
                                "diffs": [
                                    [
                                        "+/*",
                                        "+ * Copyright (C) 2015 The Android Open Source Project",
                                        "+ *",
                                        "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                                        "+ * you may not use this file except in compliance with the License.",
                                        "+ * You may obtain a copy of the License at",
                                        "+ *",
                                        "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                                        "+ *",
                                        "+ * Unless required by applicable law or agreed to in writing, software",
                                        "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                                        "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                                        "+ * See the License for the specific language governing permissions and",
                                        "+ * limitations under the License.",
                                        "+ */",
                                        "+",
                                        "+package com.example.google.lint;",
                                        "+",
                                        "+import com.android.annotations.NonNull;",
                                        "+import com.android.tools.lint.detector.api.Category;",
                                        "+import com.android.tools.lint.detector.api.Context;",
                                        "+import com.android.tools.lint.detector.api.Detector;",
                                        "+import com.android.tools.lint.detector.api.Implementation;",
                                        "+import com.android.tools.lint.detector.api.Issue;",
                                        "+import com.android.tools.lint.detector.api.Location;",
                                        "+import com.android.tools.lint.detector.api.ResourceXmlDetector;",
                                        "+import com.android.tools.lint.detector.api.Scope;",
                                        "+import com.android.tools.lint.detector.api.Severity;",
                                        "+import com.android.tools.lint.detector.api.XmlContext;",
                                        "+",
                                        "+import org.w3c.dom.Element;",
                                        "+import org.w3c.dom.Node;",
                                        "+import org.w3c.dom.NodeList;",
                                        "+",
                                        "+import java.util.Arrays;",
                                        "+import java.util.Collection;",
                                        "+import java.util.EnumSet;",
                                        "+",
                                        "+import static com.android.SdkConstants.ANDROID_MANIFEST_XML;",
                                        "+import static com.android.SdkConstants.ANDROID_URI;",
                                        "+import static com.android.SdkConstants.ATTR_NAME;",
                                        "+import static com.android.SdkConstants.TAG_ACTIVITY;",
                                        "+import static com.android.SdkConstants.TAG_APPLICATION;",
                                        "+import static com.android.SdkConstants.TAG_INTENT_FILTER;",
                                        "+import static com.android.xml.AndroidManifest.NODE_ACTION;",
                                        "+import static com.android.xml.AndroidManifest.NODE_CATEGORY;",
                                        "+",
                                        "+/**",
                                        "+ * Checks for a main activity in <code>AndroidManifest.xml</code>.",
                                        "+ */",
                                        "+public class MainActivityDetector extends ResourceXmlDetector implements Detector.XmlScanner {",
                                        "+    public static final Issue ISSUE = Issue.create(",
                                        "+            \"MainActivityDetector\",",
                                        "+            \"Checks for a main activity\",",
                                        "+            \"This app should have a main launcher activity.\",",
                                        "+            Category.CORRECTNESS,",
                                        "+            8,",
                                        "+            Severity.ERROR,",
                                        "+            new Implementation(",
                                        "+                    MainActivityDetector.class,",
                                        "+                    EnumSet.of(Scope.MANIFEST)));",
                                        "+",
                                        "+    /**",
                                        "+     * Will be <code>true</code> if the current file we're checking has at least one activity.",
                                        "+     */",
                                        "+    private boolean mHasActivity;",
                                        "+    /**",
                                        "+     * Will be <code>true</code> if the file has a main activity.",
                                        "+     */",
                                        "+    private boolean mHasMainActivity;",
                                        "+",
                                        "+    @Override",
                                        "+    public Collection<String> getApplicableElements() {",
                                        "+        return Arrays.asList(",
                                        "+                TAG_ACTIVITY",
                                        "+        );",
                                        "+    }",
                                        "+",
                                        "+    @Override",
                                        "+    public void beforeCheckFile(@NonNull Context context) {",
                                        "+        mHasActivity = false;",
                                        "+        mHasMainActivity = false;",
                                        "+    }",
                                        "+",
                                        "+    @Override",
                                        "+    public void afterCheckFile(@NonNull Context context) {",
                                        "+        // Report an error if there are no <application> tags to check.",
                                        "+        // We assume the application tag is in the right place (i.e. have correct parent elements).",
                                        "+        Location location = Location.create(context.file);",
                                        "+        if (!mHasActivity) {",
                                        "+            context.report(ISSUE, location,",
                                        "+                    \"Expecting \" + ANDROID_MANIFEST_XML + \" to have an <\" + TAG_APPLICATION +",
                                        "+                            \"> tag.\");",
                                        "+        } else if (!mHasMainActivity) {",
                                        "+            // Report the issue if the manifest file has no main activity.",
                                        "+            context.report(ISSUE, location,",
                                        "+                    \"Expecting \" + ANDROID_MANIFEST_XML + \" to have a main activity.\");",
                                        "+        }",
                                        "+    }",
                                        "+",
                                        "+    @Override",
                                        "+    public void visitElement(XmlContext context, Element activityElement) {",
                                        "+        // Checks every activity under the <application> element and reports an error if there is",
                                        "+        // no main activity.",
                                        "+        mHasActivity = true;",
                                        "+        if (isMainActivity(activityElement)) {",
                                        "+            mHasMainActivity = true;",
                                        "+        }",
                                        "+    }",
                                        "+",
                                        "+    /**",
                                        "+     * Returns true if the XML node is a main activity.",
                                        "+     * <p/>",
                                        "+     * A main activity is an <code>&lt;activity&gt;</code> node with an <code>&lt;",
                                        "+     * intent-filter&gt;</code> that contains the following tags:",
                                        "+     * <p/>",
                                        "+     * <pre>",
                                        "+     *   <category android:name=\"android.intent.category.LAUNCHER\" />",
                                        "+     *   <action android:name=\"android.intent.action.MAIN\" />",
                                        "+     * </pre>",
                                        "+     *",
                                        "+     * @param activityNode The node to check.",
                                        "+     * @return <code>true</code> if the node is a main activity.",
                                        "+     */",
                                        "+    private boolean isMainActivity(Node activityNode) {",
                                        "+        if (TAG_ACTIVITY.equals(activityNode.getNodeName())) {",
                                        "+            // Loop through all <intent-filter> tags",
                                        "+            NodeList activityChildren = activityNode.getChildNodes();",
                                        "+            for (int i = 0; i < activityChildren.getLength(); ++i) {",
                                        "+                Node activityChild = activityChildren.item(i);",
                                        "+                if (TAG_INTENT_FILTER.equals(activityChild.getNodeName())) {",
                                        "+                    NodeList intentFilterChildren = activityChild.getChildNodes();",
                                        "+",
                                        "+                    // Check for these children nodes:",
                                        "+                    //",
                                        "+                    // <category android:name=\"android.intent.category.LAUNCHER\" />",
                                        "+                    // <action android:name=\"android.intent.action.MAIN\" />",
                                        "+                    boolean hasLauncherCategory = false;",
                                        "+                    boolean hasMainAction = false;",
                                        "+",
                                        "+                    for (int j = 0; j < intentFilterChildren.getLength(); ++j) {",
                                        "+                        Node intentFilterChild = intentFilterChildren.item(j);",
                                        "+                        // Check for category tag",
                                        "+                        if (NODE_CATEGORY.equals(intentFilterChild.getNodeName())) {",
                                        "+                            Node categoryName = intentFilterChild.getAttributes()",
                                        "+                                    .getNamedItemNS(ANDROID_URI, ATTR_NAME);",
                                        "+                            if (categoryName != null && categoryName.getNodeValue().equals(",
                                        "+                                    ManifestConstants.CATEGORY_NAME_LAUNCHER)) {",
                                        "+                                hasLauncherCategory = true;",
                                        "+                            }",
                                        "+                        }",
                                        "+                        // Check for action tag",
                                        "+                        if (NODE_ACTION.equals(intentFilterChild.getNodeName())) {",
                                        "+                            Node actionName = intentFilterChild.getAttributes()",
                                        "+                                    .getNamedItemNS(ANDROID_URI, ATTR_NAME);",
                                        "+                            if (actionName != null && actionName.getNodeValue().equals(",
                                        "+                                    ManifestConstants.ACTION_NAME_MAIN)) {",
                                        "+                                hasMainAction = true;",
                                        "+                            }",
                                        "+                        }",
                                        "+                    }",
                                        "+",
                                        "+                    if (hasLauncherCategory && hasMainAction) {",
                                        "+                        return true;",
                                        "+                    }",
                                        "+                }",
                                        "+            }",
                                        "+        }",
                                        "+        return false;",
                                        "+    }",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/java/com/example/google/lint/ManifestConstants.java",
                            "content": {
                                "current": "/*\n * Copyright (C) 2015 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.example.google.lint;\n\n/**\n * Manifest Constant definition class.\n * Amends constants not found in {@link com.android.SdkConstants}.\n */\npublic final class ManifestConstants {\n    public static final String CATEGORY_NAME_LAUNCHER = \"android.intent.category.LAUNCHER\";\n    public static final String ACTION_NAME_MAIN = \"android.intent.action.MAIN\";\n}\n",
                                "diffs": [
                                    [
                                        "+/*",
                                        "+ * Copyright (C) 2015 The Android Open Source Project",
                                        "+ *",
                                        "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                                        "+ * you may not use this file except in compliance with the License.",
                                        "+ * You may obtain a copy of the License at",
                                        "+ *",
                                        "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                                        "+ *",
                                        "+ * Unless required by applicable law or agreed to in writing, software",
                                        "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                                        "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                                        "+ * See the License for the specific language governing permissions and",
                                        "+ * limitations under the License.",
                                        "+ */",
                                        "+",
                                        "+package com.example.google.lint;",
                                        "+",
                                        "+/**",
                                        "+ * Manifest Constant definition class.",
                                        "+ * Amends constants not found in {@link com.android.SdkConstants}.",
                                        "+ */",
                                        "+public final class ManifestConstants {",
                                        "+    public static final String CATEGORY_NAME_LAUNCHER = \"android.intent.category.LAUNCHER\";",
                                        "+    public static final String ACTION_NAME_MAIN = \"android.intent.action.MAIN\";",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/java/com/example/google/lint/MyIssueRegistry.java",
                            "content": {
                                "current": "/*\n * Copyright (C) 2015 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.example.google.lint;\n\nimport com.android.tools.lint.client.api.IssueRegistry;\nimport com.android.tools.lint.detector.api.Issue;\n\nimport java.util.Collections;\nimport java.util.List;\n\n/**\n * The list of issues that will be checked when running <code>lint</code>.\n */\n@SuppressWarnings(\"unused\")\npublic class MyIssueRegistry extends IssueRegistry {\n    @Override\n    public List<Issue> getIssues() {\n        return Collections.singletonList(\n                MainActivityDetector.ISSUE\n        );\n    }\n}\n",
                                "diffs": [
                                    [
                                        "+/*",
                                        "+ * Copyright (C) 2015 The Android Open Source Project",
                                        "+ *",
                                        "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                                        "+ * you may not use this file except in compliance with the License.",
                                        "+ * You may obtain a copy of the License at",
                                        "+ *",
                                        "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                                        "+ *",
                                        "+ * Unless required by applicable law or agreed to in writing, software",
                                        "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                                        "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                                        "+ * See the License for the specific language governing permissions and",
                                        "+ * limitations under the License.",
                                        "+ */",
                                        "+",
                                        "+package com.example.google.lint;",
                                        "+",
                                        "+import com.android.tools.lint.client.api.IssueRegistry;",
                                        "+import com.android.tools.lint.detector.api.Issue;",
                                        "+",
                                        "+import java.util.Collections;",
                                        "+import java.util.List;",
                                        "+",
                                        "+/**",
                                        "+ * The list of issues that will be checked when running <code>lint</code>.",
                                        "+ */",
                                        "+@SuppressWarnings(\"unused\")",
                                        "+public class MyIssueRegistry extends IssueRegistry {",
                                        "+    @Override",
                                        "+    public List<Issue> getIssues() {",
                                        "+        return Collections.singletonList(",
                                        "+                MainActivityDetector.ISSUE",
                                        "+        );",
                                        "+    }",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/test/java/com/example/google/lint/MainActivityDetectorTest.java",
                            "content": {
                                "current": "/*\n * Copyright (C) 2015 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.example.google.lint;\n\nimport com.android.annotations.NonNull;\nimport com.android.tools.lint.checks.infrastructure.LintDetectorTest;\nimport com.android.tools.lint.client.api.LintClient;\nimport com.android.tools.lint.detector.api.Detector;\nimport com.android.tools.lint.detector.api.Issue;\nimport com.android.tools.lint.detector.api.Project;\n\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Set;\n\nimport static com.android.SdkConstants.FN_ANDROID_MANIFEST_XML;\n\npublic class MainActivityDetectorTest extends LintDetectorTest {\n    /**\n     * The set of enabled issues for a given test.\n     */\n    private Set<Issue> mEnabled = new HashSet<Issue>();\n\n    @Override\n    protected Detector getDetector() {\n        return new MainActivityDetector();\n    }\n\n    @Override\n    protected List<Issue> getIssues() {\n        return Arrays.asList(\n                MainActivityDetector.ISSUE\n        );\n    }\n\n    /**\n     * Gets the configuration for the test.\n     * Each test can have a set of enabled issues by assigning the member field {@link #mEnabled}.\n     */\n    @Override\n    protected TestConfiguration getConfiguration(LintClient client, Project project) {\n        return new TestConfiguration(client, project, null) {\n            @Override\n            public boolean isEnabled(@NonNull Issue issue) {\n                return super.isEnabled(issue) && mEnabled.contains(issue);\n            }\n        };\n    }\n\n    /**\n     * Test that a manifest with a main activity has no warnings.\n     */\n    public void testHasMainActivity() throws Exception {\n        mEnabled = Collections.singleton(MainActivityDetector.ISSUE);\n        String expected = \"No warnings.\";\n        String result = lintProject(xml(FN_ANDROID_MANIFEST_XML, \"\" +\n                \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +\n                \"<manifest package=\\\"com.example.android.custom-lint-rules\\\"\\n\" +\n                \"          xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\">\\n\" +\n                \"    <application>\\n\" +\n                \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +\n                \".OtherActivity\\\">\\n\" +\n                \"        </activity>\\n\" +\n                \"\\n\" +\n                \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +\n                \".MainActivity\\\">\\n\" +\n                \"            <intent-filter>\\n\" +\n                \"                <action android:name=\\\"android.intent.action.MAIN\\\"/>\\n\" +\n                \"                <category android:name=\\\"android.intent.category.LAUNCHER\\\"/>\\n\" +\n                \"            </intent-filter>\\n\" +\n                \"        </activity>\\n\" +\n                \"    </application>\\n\" +\n                \"</manifest>\"));\n        assertEquals(expected, result);\n    }\n\n    /**\n     * Test that a manifest <em>without</em> a main activity reports an error.\n     */\n    public void testMissingMainActivity() throws Exception {\n        mEnabled = Collections.singleton(MainActivityDetector.ISSUE);\n        String expected = \"AndroidManifest.xml: Error: Expecting AndroidManifest.xml to have a \" +\n                \"main activity. [MainActivityDetector]\\n\" +\n                \"1 errors, 0 warnings\\n\";\n        String result = lintProject(xml(FN_ANDROID_MANIFEST_XML, \"\" +\n                \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +\n                \"<manifest package=\\\"com.example.android.custom-lint-rules\\\"\\n\" +\n                \"          xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\">\\n\" +\n                \"    <application>\\n\" +\n                \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +\n                \".Activity1\\\">\\n\" +\n                \"            <intent-filter>\\n\" +\n                \"                <action android:name=\\\"android.intent.action.VIEW\\\" />\\n\" +\n                \"\\n\" +\n                \"                <category android:name=\\\"android.intent.category.HOME\\\" />\\n\" +\n                \"                <category android:name=\\\"android.intent.category.LAUNCHER\\\" />\\n\" +\n                \"                <category android:name=\\\"android.intent.category.DEFAULT\\\" />\\n\" +\n                \"                <category android:name=\\\"android.intent.category.BROWSABLE\\\" \" +\n                \"/>\\n\" +\n                \"            </intent-filter>\\n\" +\n                \"        </activity>\\n\" +\n                \"\\n\" +\n                \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +\n                \".Activity2\\\">\\n\" +\n                \"        </activity>\\n\" +\n                \"\\n\" +\n                \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +\n                \".Activity3\\\">\\n\" +\n                \"            <intent-filter>\\n\" +\n                \"                <action android:name=\\\"android.intent.action.SEND\\\"/>\\n\" +\n                \"                <category android:name=\\\"android.intent.category.DEFAULT\\\"/>\\n\" +\n                \"                <data android:mimeType=\\\"text/plain\\\"/>\\n\" +\n                \"            </intent-filter>\\n\" +\n                \"        </activity>\\n\" +\n                \"    </application>\\n\" +\n                \"</manifest>\"));\n        assertEquals(expected, result);\n    }\n\n    /**\n     * Test that a manifest without an <code>&lt;application&gt;</code> tag reports an error.\n     */\n    public void testMissingApplication() throws Exception {\n        mEnabled = Collections.singleton(MainActivityDetector.ISSUE);\n        String expected = \"AndroidManifest.xml: Error: Expecting AndroidManifest.xml to have an \" +\n                \"<application> tag. [MainActivityDetector]\\n\" +\n                \"1 errors, 0 warnings\\n\";\n        String result = lintProject(xml(FN_ANDROID_MANIFEST_XML, \"\" +\n                \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +\n                \"<manifest package=\\\"com.example.android.custom-lint-rules\\\"\\n\" +\n                \"          xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\">\\n\" +\n                \"</manifest>\"));\n        assertEquals(expected, result);\n    }\n}\n",
                                "diffs": [
                                    [
                                        "+/*",
                                        "+ * Copyright (C) 2015 The Android Open Source Project",
                                        "+ *",
                                        "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                                        "+ * you may not use this file except in compliance with the License.",
                                        "+ * You may obtain a copy of the License at",
                                        "+ *",
                                        "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                                        "+ *",
                                        "+ * Unless required by applicable law or agreed to in writing, software",
                                        "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                                        "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                                        "+ * See the License for the specific language governing permissions and",
                                        "+ * limitations under the License.",
                                        "+ */",
                                        "+",
                                        "+package com.example.google.lint;",
                                        "+",
                                        "+import com.android.annotations.NonNull;",
                                        "+import com.android.tools.lint.checks.infrastructure.LintDetectorTest;",
                                        "+import com.android.tools.lint.client.api.LintClient;",
                                        "+import com.android.tools.lint.detector.api.Detector;",
                                        "+import com.android.tools.lint.detector.api.Issue;",
                                        "+import com.android.tools.lint.detector.api.Project;",
                                        "+",
                                        "+import java.util.Arrays;",
                                        "+import java.util.Collections;",
                                        "+import java.util.HashSet;",
                                        "+import java.util.List;",
                                        "+import java.util.Set;",
                                        "+",
                                        "+import static com.android.SdkConstants.FN_ANDROID_MANIFEST_XML;",
                                        "+",
                                        "+public class MainActivityDetectorTest extends LintDetectorTest {",
                                        "+    /**",
                                        "+     * The set of enabled issues for a given test.",
                                        "+     */",
                                        "+    private Set<Issue> mEnabled = new HashSet<Issue>();",
                                        "+",
                                        "+    @Override",
                                        "+    protected Detector getDetector() {",
                                        "+        return new MainActivityDetector();",
                                        "+    }",
                                        "+",
                                        "+    @Override",
                                        "+    protected List<Issue> getIssues() {",
                                        "+        return Arrays.asList(",
                                        "+                MainActivityDetector.ISSUE",
                                        "+        );",
                                        "+    }",
                                        "+",
                                        "+    /**",
                                        "+     * Gets the configuration for the test.",
                                        "+     * Each test can have a set of enabled issues by assigning the member field {@link #mEnabled}.",
                                        "+     */",
                                        "+    @Override",
                                        "+    protected TestConfiguration getConfiguration(LintClient client, Project project) {",
                                        "+        return new TestConfiguration(client, project, null) {",
                                        "+            @Override",
                                        "+            public boolean isEnabled(@NonNull Issue issue) {",
                                        "+                return super.isEnabled(issue) && mEnabled.contains(issue);",
                                        "+            }",
                                        "+        };",
                                        "+    }",
                                        "+",
                                        "+    /**",
                                        "+     * Test that a manifest with a main activity has no warnings.",
                                        "+     */",
                                        "+    public void testHasMainActivity() throws Exception {",
                                        "+        mEnabled = Collections.singleton(MainActivityDetector.ISSUE);",
                                        "+        String expected = \"No warnings.\";",
                                        "+        String result = lintProject(xml(FN_ANDROID_MANIFEST_XML, \"\" +",
                                        "+                \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +",
                                        "+                \"<manifest package=\\\"com.example.android.custom-lint-rules\\\"\\n\" +",
                                        "+                \"          xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\">\\n\" +",
                                        "+                \"    <application>\\n\" +",
                                        "+                \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +",
                                        "+                \".OtherActivity\\\">\\n\" +",
                                        "+                \"        </activity>\\n\" +",
                                        "+                \"\\n\" +",
                                        "+                \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +",
                                        "+                \".MainActivity\\\">\\n\" +",
                                        "+                \"            <intent-filter>\\n\" +",
                                        "+                \"                <action android:name=\\\"android.intent.action.MAIN\\\"/>\\n\" +",
                                        "+                \"                <category android:name=\\\"android.intent.category.LAUNCHER\\\"/>\\n\" +",
                                        "+                \"            </intent-filter>\\n\" +",
                                        "+                \"        </activity>\\n\" +",
                                        "+                \"    </application>\\n\" +",
                                        "+                \"</manifest>\"));",
                                        "+        assertEquals(expected, result);",
                                        "+    }",
                                        "+",
                                        "+    /**",
                                        "+     * Test that a manifest <em>without</em> a main activity reports an error.",
                                        "+     */",
                                        "+    public void testMissingMainActivity() throws Exception {",
                                        "+        mEnabled = Collections.singleton(MainActivityDetector.ISSUE);",
                                        "+        String expected = \"AndroidManifest.xml: Error: Expecting AndroidManifest.xml to have a \" +",
                                        "+                \"main activity. [MainActivityDetector]\\n\" +",
                                        "+                \"1 errors, 0 warnings\\n\";",
                                        "+        String result = lintProject(xml(FN_ANDROID_MANIFEST_XML, \"\" +",
                                        "+                \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +",
                                        "+                \"<manifest package=\\\"com.example.android.custom-lint-rules\\\"\\n\" +",
                                        "+                \"          xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\">\\n\" +",
                                        "+                \"    <application>\\n\" +",
                                        "+                \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +",
                                        "+                \".Activity1\\\">\\n\" +",
                                        "+                \"            <intent-filter>\\n\" +",
                                        "+                \"                <action android:name=\\\"android.intent.action.VIEW\\\" />\\n\" +",
                                        "+                \"\\n\" +",
                                        "+                \"                <category android:name=\\\"android.intent.category.HOME\\\" />\\n\" +",
                                        "+                \"                <category android:name=\\\"android.intent.category.LAUNCHER\\\" />\\n\" +",
                                        "+                \"                <category android:name=\\\"android.intent.category.DEFAULT\\\" />\\n\" +",
                                        "+                \"                <category android:name=\\\"android.intent.category.BROWSABLE\\\" \" +",
                                        "+                \"/>\\n\" +",
                                        "+                \"            </intent-filter>\\n\" +",
                                        "+                \"        </activity>\\n\" +",
                                        "+                \"\\n\" +",
                                        "+                \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +",
                                        "+                \".Activity2\\\">\\n\" +",
                                        "+                \"        </activity>\\n\" +",
                                        "+                \"\\n\" +",
                                        "+                \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +",
                                        "+                \".Activity3\\\">\\n\" +",
                                        "+                \"            <intent-filter>\\n\" +",
                                        "+                \"                <action android:name=\\\"android.intent.action.SEND\\\"/>\\n\" +",
                                        "+                \"                <category android:name=\\\"android.intent.category.DEFAULT\\\"/>\\n\" +",
                                        "+                \"                <data android:mimeType=\\\"text/plain\\\"/>\\n\" +",
                                        "+                \"            </intent-filter>\\n\" +",
                                        "+                \"        </activity>\\n\" +",
                                        "+                \"    </application>\\n\" +",
                                        "+                \"</manifest>\"));",
                                        "+        assertEquals(expected, result);",
                                        "+    }",
                                        "+",
                                        "+    /**",
                                        "+     * Test that a manifest without an <code>&lt;application&gt;</code> tag reports an error.",
                                        "+     */",
                                        "+    public void testMissingApplication() throws Exception {",
                                        "+        mEnabled = Collections.singleton(MainActivityDetector.ISSUE);",
                                        "+        String expected = \"AndroidManifest.xml: Error: Expecting AndroidManifest.xml to have an \" +",
                                        "+                \"<application> tag. [MainActivityDetector]\\n\" +",
                                        "+                \"1 errors, 0 warnings\\n\";",
                                        "+        String result = lintProject(xml(FN_ANDROID_MANIFEST_XML, \"\" +",
                                        "+                \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +",
                                        "+                \"<manifest package=\\\"com.example.android.custom-lint-rules\\\"\\n\" +",
                                        "+                \"          xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\">\\n\" +",
                                        "+                \"</manifest>\"));",
                                        "+        assertEquals(expected, result);",
                                        "+    }",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "e01536a9676fa5e2ac13d5315c71688a9b38314b",
                    "link": "https://github.com/googlesamples/android-custom-lint-rules/commit/e01536a9676fa5e2ac13d5315c71688a9b38314b",
                    "files": [
                        {
                            "name": "README.md",
                            "content": {
                                "current": "Custom Lint Rules\n=================\n\nThe [Android `lint` tool](http://developer.android.com/tools/help/lint.html) is a static code\n analysis tool that checks your Android project source files for potential bugs and optimization\n improvements for correctness, security, performance, usability, accessibility, and\n internationalization. Lint comes with over 200 checks, however it can be extended with additional\n custom rules.\n\n**NOTE: The lint API is not a final API; if you rely on this be prepared\n to adjust your code for the next tools release.**\n\nIntroduction\n------------\n\nThe Android Lint API allows users to create custom lint rules. For example, if you are the author of\n a library project, and your library project has certain usage requirements, you can write\n additional lint rules to check that your library is used correctly, and then you can distribute\n those extra lint rules for users of the library. Similarly, you may have company-local rules you'd\n like to enforce.\n\nThis sample demonstrates how to create a custom lint checks and corresponding tests for those rules.\n\nGetting Started\n---------------\n\n##### Fetch code\n\n```\ngit clone https://github.com/googlesamples/android-custom-lint-rules.git\ncd android-custom-lint-rules\n```\n\n##### Build the code\n\nFor Android Studio 3.x and above, use the sample in `android-studio-3`.\nIf you are targeting Android Studio 2.x and older, use the sample in `android-studio-2`.\n\nSupport\n-------\n\n- The \"lint-dev\" Google group: https://groups.google.com/forum/#!forum/lint-dev\n- Google+ Community: https://plus.google.com/communities/105153134372062985968\n- Stack Overflow: http://stackoverflow.com/questions/tagged/android\n\nIf you've found an error in this sample, please file an issue:\nhttps://github.com/googlesamples/android-custom-lint-rules/issues\n\nPatches are encouraged, and may be submitted by forking this project and\nsubmitting a pull request through GitHub.\n\nLicense\n-------\nLicensed under the Apache 2.0 license. See the LICENSE file for details.\n\nHow to make contributions?\n--------------------------\nPlease read and follow the steps in the CONTRIBUTING.md\n",
                                "diffs": [
                                    [
                                        " Custom Lint Rules",
                                        "-============",
                                        "+=================",
                                        " ",
                                        " The [Android `lint` tool](http://developer.android.com/tools/help/lint.html) is a static code",
                                        "  analysis tool that checks your Android project source files for potential bugs and optimization"
                                    ],
                                    [
                                        " cd android-custom-lint-rules",
                                        " ```",
                                        " ",
                                        "-##### Build the validator",
                                        "+##### Build the code",
                                        " ",
                                        "-`./gradlew build`",
                                        "-",
                                        "-##### Copy to the lint directory",
                                        "-",
                                        "-`cp ./build/libs/android-custom-lint-rules.jar ~/.android/lint/`",
                                        "-",
                                        "-##### Verify whether the issues are registered with lint",
                                        "-",
                                        "-`lint --show MainActivityDetector`",
                                        "-",
                                        "-##### Run lint",
                                        "-",
                                        "-`./gradlew lint`",
                                        "-",
                                        "-> Note: If you can't run `lint` directly, you may want to include android tools `PATH` in your",
                                        "- `~/.bash_profile`.",
                                        "-> (i.e. `PATH=$PATH:~/Library/Android/sdk/tools`)",
                                        "->",
                                        "-> Then run `source ~/.bash_profile`.",
                                        "+For Android Studio 3.x and above, use the sample in `android-studio-3`.",
                                        "+If you are targeting Android Studio 2.x and older, use the sample in `android-studio-2`.",
                                        " ",
                                        " Support",
                                        " -------",
                                        " ",
                                        "+- The \"lint-dev\" Google group: https://groups.google.com/forum/#!forum/lint-dev",
                                        " - Google+ Community: https://plus.google.com/communities/105153134372062985968",
                                        " - Stack Overflow: http://stackoverflow.com/questions/tagged/android",
                                        " ",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "android-studio-2/README.md",
                            "content": {
                                "current": "See README.md in the parent directory for general information.\n\nGetting Started\n---------------\n\n##### Fetch code\n\n```\ngit clone https://github.com/googlesamples/android-custom-lint-rules.git\ncd android-custom-lint-rules\n```\n\n##### Build the validator\n\n`./gradlew build`\n\n##### Copy to the lint directory\n\n`cp ./build/libs/android-custom-lint-rules.jar ~/.android/lint/`\n\n##### Verify whether the issues are registered with lint\n\n`lint --show MainActivityDetector`\n\n##### Run lint\n\n`./gradlew lint`\n\n> Note: If you can't run `lint` directly, you may want to include android tools `PATH` in your\n `~/.bash_profile`.\n> (i.e. `PATH=$PATH:~/Library/Android/sdk/tools`)\n>\n> Then run `source ~/.bash_profile`.\n",
                                "diffs": [
                                    [
                                        "+See README.md in the parent directory for general information.",
                                        "+",
                                        "+Getting Started",
                                        "+---------------",
                                        "+",
                                        "+##### Fetch code",
                                        "+",
                                        "+```",
                                        "+git clone https://github.com/googlesamples/android-custom-lint-rules.git",
                                        "+cd android-custom-lint-rules",
                                        "+```",
                                        "+",
                                        "+##### Build the validator",
                                        "+",
                                        "+`./gradlew build`",
                                        "+",
                                        "+##### Copy to the lint directory",
                                        "+",
                                        "+`cp ./build/libs/android-custom-lint-rules.jar ~/.android/lint/`",
                                        "+",
                                        "+##### Verify whether the issues are registered with lint",
                                        "+",
                                        "+`lint --show MainActivityDetector`",
                                        "+",
                                        "+##### Run lint",
                                        "+",
                                        "+`./gradlew lint`",
                                        "+",
                                        "+> Note: If you can't run `lint` directly, you may want to include android tools `PATH` in your",
                                        "+ `~/.bash_profile`.",
                                        "+> (i.e. `PATH=$PATH:~/Library/Android/sdk/tools`)",
                                        "+>",
                                        "+> Then run `source ~/.bash_profile`.",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "android-studio-2/build.gradle",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "+/*",
                                        "+ * Copyright (C) 2015 The Android Open Source Project",
                                        "+ *",
                                        "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                                        "+ * you may not use this file except in compliance with the License.",
                                        "+ * You may obtain a copy of the License at",
                                        "+ *",
                                        "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                                        "+ *",
                                        "+ * Unless required by applicable law or agreed to in writing, software",
                                        "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                                        "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                                        "+ * See the License for the specific language governing permissions and",
                                        "+ * limitations under the License.",
                                        "+ */",
                                        "+",
                                        "+apply plugin: 'java'",
                                        "+",
                                        "+repositories {",
                                        "+    google()",
                                        "+    jcenter()",
                                        "+}",
                                        "+",
                                        "+ext {",
                                        "+    lintVersion = '26.0.0-beta2'",
                                        "+}",
                                        "+",
                                        "+dependencies {",
                                        "+    compile \"com.android.tools.lint:lint-api:$lintVersion\"",
                                        "+    compile \"com.android.tools.lint:lint-checks:$lintVersion\"",
                                        "+    testCompile \"junit:junit:4.11\"",
                                        "+    testCompile \"com.android.tools.lint:lint:$lintVersion\"",
                                        "+    testCompile \"com.android.tools.lint:lint-tests:$lintVersion\"",
                                        "+    testCompile \"com.android.tools:testutils:$lintVersion\"",
                                        "+}",
                                        "+",
                                        "+jar {",
                                        "+    manifest {",
                                        "+        attributes(\"Lint-Registry\": \"com.example.google.lint.MyIssueRegistry\")",
                                        "+    }",
                                        "+}",
                                        "+",
                                        "+defaultTasks 'assemble'",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "android-studio-2/gradle/wrapper/gradle-wrapper.properties",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "+#Wed Aug 09 14:33:29 PDT 2017",
                                        "+distributionBase=GRADLE_USER_HOME",
                                        "+distributionPath=wrapper/dists",
                                        "+zipStoreBase=GRADLE_USER_HOME",
                                        "+zipStorePath=wrapper/dists",
                                        "+distributionUrl=https\\://services.gradle.org/distributions/gradle-4.1-rc-1-all.zip",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "android-studio-2/gradlew",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "+#!/usr/bin/env bash",
                                        "+",
                                        "+##############################################################################",
                                        "+##",
                                        "+##  Gradle start up script for UN*X",
                                        "+##",
                                        "+##############################################################################",
                                        "+",
                                        "+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.",
                                        "+DEFAULT_JVM_OPTS=\"\"",
                                        "+",
                                        "+APP_NAME=\"Gradle\"",
                                        "+APP_BASE_NAME=`basename \"$0\"`",
                                        "+",
                                        "+# Use the maximum available, or set MAX_FD != -1 to use that value.",
                                        "+MAX_FD=\"maximum\"",
                                        "+",
                                        "+warn ( ) {",
                                        "+    echo \"$*\"",
                                        "+}",
                                        "+",
                                        "+die ( ) {",
                                        "+    echo",
                                        "+    echo \"$*\"",
                                        "+    echo",
                                        "+    exit 1",
                                        "+}",
                                        "+",
                                        "+# OS specific support (must be 'true' or 'false').",
                                        "+cygwin=false",
                                        "+msys=false",
                                        "+darwin=false",
                                        "+case \"`uname`\" in",
                                        "+  CYGWIN* )",
                                        "+    cygwin=true",
                                        "+    ;;",
                                        "+  Darwin* )",
                                        "+    darwin=true",
                                        "+    ;;",
                                        "+  MINGW* )",
                                        "+    msys=true",
                                        "+    ;;",
                                        "+esac",
                                        "+",
                                        "+# For Cygwin, ensure paths are in UNIX format before anything is touched.",
                                        "+if $cygwin ; then",
                                        "+    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`",
                                        "+fi",
                                        "+",
                                        "+# Attempt to set APP_HOME",
                                        "+# Resolve links: $0 may be a link",
                                        "+PRG=\"$0\"",
                                        "+# Need this for relative symlinks.",
                                        "+while [ -h \"$PRG\" ] ; do",
                                        "+    ls=`ls -ld \"$PRG\"`",
                                        "+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`",
                                        "+    if expr \"$link\" : '/.*' > /dev/null; then",
                                        "+        PRG=\"$link\"",
                                        "+    else",
                                        "+        PRG=`dirname \"$PRG\"`\"/$link\"",
                                        "+    fi",
                                        "+done",
                                        "+SAVED=\"`pwd`\"",
                                        "+cd \"`dirname \\\"$PRG\\\"`/\" >&-",
                                        "+APP_HOME=\"`pwd -P`\"",
                                        "+cd \"$SAVED\" >&-",
                                        "+",
                                        "+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar",
                                        "+",
                                        "+# Determine the Java command to use to start the JVM.",
                                        "+if [ -n \"$JAVA_HOME\" ] ; then",
                                        "+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then",
                                        "+        # IBM's JDK on AIX uses strange locations for the executables",
                                        "+        JAVACMD=\"$JAVA_HOME/jre/sh/java\"",
                                        "+    else",
                                        "+        JAVACMD=\"$JAVA_HOME/bin/java\"",
                                        "+    fi",
                                        "+    if [ ! -x \"$JAVACMD\" ] ; then",
                                        "+        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME",
                                        "+",
                                        "+Please set the JAVA_HOME variable in your environment to match the",
                                        "+location of your Java installation.\"",
                                        "+    fi",
                                        "+else",
                                        "+    JAVACMD=\"java\"",
                                        "+    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.",
                                        "+",
                                        "+Please set the JAVA_HOME variable in your environment to match the",
                                        "+location of your Java installation.\"",
                                        "+fi",
                                        "+",
                                        "+# Increase the maximum file descriptors if we can.",
                                        "+if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then",
                                        "+    MAX_FD_LIMIT=`ulimit -H -n`",
                                        "+    if [ $? -eq 0 ] ; then",
                                        "+        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then",
                                        "+            MAX_FD=\"$MAX_FD_LIMIT\"",
                                        "+        fi",
                                        "+        ulimit -n $MAX_FD",
                                        "+        if [ $? -ne 0 ] ; then",
                                        "+            warn \"Could not set maximum file descriptor limit: $MAX_FD\"",
                                        "+        fi",
                                        "+    else",
                                        "+        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"",
                                        "+    fi",
                                        "+fi",
                                        "+",
                                        "+# For Darwin, add options to specify how the application appears in the dock",
                                        "+if $darwin; then",
                                        "+    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"",
                                        "+fi",
                                        "+",
                                        "+# For Cygwin, switch paths to Windows format before running java",
                                        "+if $cygwin ; then",
                                        "+    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`",
                                        "+    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`",
                                        "+",
                                        "+    # We build the pattern for arguments to be converted via cygpath",
                                        "+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`",
                                        "+    SEP=\"\"",
                                        "+    for dir in $ROOTDIRSRAW ; do",
                                        "+        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"",
                                        "+        SEP=\"|\"",
                                        "+    done",
                                        "+    OURCYGPATTERN=\"(^($ROOTDIRS))\"",
                                        "+    # Add a user-defined pattern to the cygpath arguments",
                                        "+    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then",
                                        "+        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"",
                                        "+    fi",
                                        "+    # Now convert the arguments - kludge to limit ourselves to /bin/sh",
                                        "+    i=0",
                                        "+    for arg in \"$@\" ; do",
                                        "+        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`",
                                        "+        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option",
                                        "+",
                                        "+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition",
                                        "+            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`",
                                        "+        else",
                                        "+            eval `echo args$i`=\"\\\"$arg\\\"\"",
                                        "+        fi",
                                        "+        i=$((i+1))",
                                        "+    done",
                                        "+    case $i in",
                                        "+        (0) set -- ;;",
                                        "+        (1) set -- \"$args0\" ;;",
                                        "+        (2) set -- \"$args0\" \"$args1\" ;;",
                                        "+        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;",
                                        "+        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;",
                                        "+        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;",
                                        "+        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;",
                                        "+        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;",
                                        "+        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;",
                                        "+        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;",
                                        "+    esac",
                                        "+fi",
                                        "+",
                                        "+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules",
                                        "+function splitJvmOpts() {",
                                        "+    JVM_OPTS=(\"$@\")",
                                        "+}",
                                        "+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS",
                                        "+JVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"",
                                        "+",
                                        "+exec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "android-studio-2/gradlew.bat",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "+@if \"%DEBUG%\" == \"\" @echo off",
                                        "+@rem ##########################################################################",
                                        "+@rem",
                                        "+@rem  Gradle startup script for Windows",
                                        "+@rem",
                                        "+@rem ##########################################################################",
                                        "+",
                                        "+@rem Set local scope for the variables with windows NT shell",
                                        "+if \"%OS%\"==\"Windows_NT\" setlocal",
                                        "+",
                                        "+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.",
                                        "+set DEFAULT_JVM_OPTS=",
                                        "+",
                                        "+set DIRNAME=%~dp0",
                                        "+if \"%DIRNAME%\" == \"\" set DIRNAME=.",
                                        "+set APP_BASE_NAME=%~n0",
                                        "+set APP_HOME=%DIRNAME%",
                                        "+",
                                        "+@rem Find java.exe",
                                        "+if defined JAVA_HOME goto findJavaFromJavaHome",
                                        "+",
                                        "+set JAVA_EXE=java.exe",
                                        "+%JAVA_EXE% -version >NUL 2>&1",
                                        "+if \"%ERRORLEVEL%\" == \"0\" goto init",
                                        "+",
                                        "+echo.",
                                        "+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.",
                                        "+echo.",
                                        "+echo Please set the JAVA_HOME variable in your environment to match the",
                                        "+echo location of your Java installation.",
                                        "+",
                                        "+goto fail",
                                        "+",
                                        "+:findJavaFromJavaHome",
                                        "+set JAVA_HOME=%JAVA_HOME:\"=%",
                                        "+set JAVA_EXE=%JAVA_HOME%/bin/java.exe",
                                        "+",
                                        "+if exist \"%JAVA_EXE%\" goto init",
                                        "+",
                                        "+echo.",
                                        "+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%",
                                        "+echo.",
                                        "+echo Please set the JAVA_HOME variable in your environment to match the",
                                        "+echo location of your Java installation.",
                                        "+",
                                        "+goto fail",
                                        "+",
                                        "+:init",
                                        "+@rem Get command-line arguments, handling Windowz variants",
                                        "+",
                                        "+if not \"%OS%\" == \"Windows_NT\" goto win9xME_args",
                                        "+if \"%@eval[2+2]\" == \"4\" goto 4NT_args",
                                        "+",
                                        "+:win9xME_args",
                                        "+@rem Slurp the command line arguments.",
                                        "+set CMD_LINE_ARGS=",
                                        "+set _SKIP=2",
                                        "+",
                                        "+:win9xME_args_slurp",
                                        "+if \"x%~1\" == \"x\" goto execute",
                                        "+",
                                        "+set CMD_LINE_ARGS=%*",
                                        "+goto execute",
                                        "+",
                                        "+:4NT_args",
                                        "+@rem Get arguments from the 4NT Shell from JP Software",
                                        "+set CMD_LINE_ARGS=%$",
                                        "+",
                                        "+:execute",
                                        "+@rem Setup the command line",
                                        "+",
                                        "+set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar",
                                        "+",
                                        "+@rem Execute Gradle",
                                        "+\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%",
                                        "+",
                                        "+:end",
                                        "+@rem End local scope for the variables with windows NT shell",
                                        "+if \"%ERRORLEVEL%\"==\"0\" goto mainEnd",
                                        "+",
                                        "+:fail",
                                        "+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of",
                                        "+rem the _cmd.exe /c_ return code!",
                                        "+if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1",
                                        "+exit /b 1",
                                        "+",
                                        "+:mainEnd",
                                        "+if \"%OS%\"==\"Windows_NT\" endlocal",
                                        "+",
                                        "+:omega",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "android-studio-2/src/main/java/com/example/google/lint/MainActivityDetector.java",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "+/*",
                                        "+ * Copyright (C) 2015 The Android Open Source Project",
                                        "+ *",
                                        "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                                        "+ * you may not use this file except in compliance with the License.",
                                        "+ * You may obtain a copy of the License at",
                                        "+ *",
                                        "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                                        "+ *",
                                        "+ * Unless required by applicable law or agreed to in writing, software",
                                        "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                                        "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                                        "+ * See the License for the specific language governing permissions and",
                                        "+ * limitations under the License.",
                                        "+ */",
                                        "+",
                                        "+package com.example.google.lint;",
                                        "+",
                                        "+import com.android.annotations.NonNull;",
                                        "+import com.android.tools.lint.detector.api.Category;",
                                        "+import com.android.tools.lint.detector.api.Context;",
                                        "+import com.android.tools.lint.detector.api.Detector;",
                                        "+import com.android.tools.lint.detector.api.Implementation;",
                                        "+import com.android.tools.lint.detector.api.Issue;",
                                        "+import com.android.tools.lint.detector.api.LintUtils;",
                                        "+import com.android.tools.lint.detector.api.Location;",
                                        "+import com.android.tools.lint.detector.api.ResourceXmlDetector;",
                                        "+import com.android.tools.lint.detector.api.Scope;",
                                        "+import com.android.tools.lint.detector.api.Severity;",
                                        "+import com.android.tools.lint.detector.api.XmlContext;",
                                        "+import org.w3c.dom.Element;",
                                        "+import org.w3c.dom.Node;",
                                        "+",
                                        "+import java.util.Collection;",
                                        "+import java.util.Collections;",
                                        "+",
                                        "+import static com.android.SdkConstants.ANDROID_MANIFEST_XML;",
                                        "+import static com.android.SdkConstants.ANDROID_URI;",
                                        "+import static com.android.SdkConstants.ATTR_NAME;",
                                        "+import static com.android.SdkConstants.TAG_ACTIVITY;",
                                        "+import static com.android.SdkConstants.TAG_INTENT_FILTER;",
                                        "+import static com.android.xml.AndroidManifest.NODE_ACTION;",
                                        "+import static com.android.xml.AndroidManifest.NODE_CATEGORY;",
                                        "+import static com.example.google.lint.ManifestConstants.ACTION_NAME_MAIN;",
                                        "+import static com.example.google.lint.ManifestConstants.CATEGORY_NAME_LAUNCHER;",
                                        "+",
                                        "+/**",
                                        "+ * Checks for an activity with a launcher intent in <code>AndroidManifest.xml</code>.",
                                        "+ * <p/>",
                                        "+ * <b>NOTE: This is not a final API; if you rely on this be prepared",
                                        "+ * to adjust your code for the next tools release.</b>",
                                        "+ */",
                                        "+public class MainActivityDetector extends ResourceXmlDetector implements Detector.XmlScanner {",
                                        "+    public static final Issue ISSUE = Issue.create(",
                                        "+            \"MainActivityDetector\",",
                                        "+            \"Missing Launcher Activities\",",
                                        "+            \"This app should have an activity with a launcher intent.\",",
                                        "+            Category.CORRECTNESS,",
                                        "+            8,",
                                        "+            Severity.ERROR,",
                                        "+            new Implementation(",
                                        "+                    MainActivityDetector.class,",
                                        "+                    Scope.MANIFEST_SCOPE));",
                                        "+",
                                        "+    /**",
                                        "+     * This will be <code>true</code> if the current file we're checking has at least one activity.",
                                        "+     */",
                                        "+    private boolean mHasActivity;",
                                        "+    /**",
                                        "+     * This will be <code>true</code> if the file has an activity with a launcher intent.",
                                        "+     */",
                                        "+    private boolean mHasLauncherActivity;",
                                        "+    /**",
                                        "+     * The manifest file location for the main project, <code>null</code> if there is no manifest.",
                                        "+     */",
                                        "+    private Location mManifestLocation;",
                                        "+",
                                        "+    /**",
                                        "+     * No-args constructor used by the lint framework to instantiate the detector.",
                                        "+     */",
                                        "+    public MainActivityDetector() {",
                                        "+    }",
                                        "+",
                                        "+    @Override",
                                        "+    public Collection<String> getApplicableElements() {",
                                        "+        return Collections.singleton(TAG_ACTIVITY);",
                                        "+    }",
                                        "+",
                                        "+    @Override",
                                        "+    public void beforeCheckProject(@NonNull Context context) {",
                                        "+        mHasActivity = false;",
                                        "+        mHasLauncherActivity = false;",
                                        "+        mManifestLocation = null;",
                                        "+    }",
                                        "+",
                                        "+    @Override",
                                        "+    public void afterCheckProject(@NonNull Context context) {",
                                        "+        // Don't report issues on libraries that may not have a launcher activity",
                                        "+        if (context.getProject() == context.getMainProject()",
                                        "+                && !context.getMainProject().isLibrary()",
                                        "+                && mManifestLocation != null) {",
                                        "+            if (!mHasActivity) {",
                                        "+                context.report(ISSUE, mManifestLocation,",
                                        "+                        \"Expecting \" + ANDROID_MANIFEST_XML + \" to have an <\" + TAG_ACTIVITY +",
                                        "+                                \"> tag.\");",
                                        "+            } else if (!mHasLauncherActivity) {",
                                        "+                // Report the issue if the manifest file has no activity with a launcher intent.",
                                        "+                context.report(ISSUE, mManifestLocation,",
                                        "+                        \"Expecting \" + ANDROID_MANIFEST_XML +",
                                        "+                                \" to have an activity with a launcher intent.\");",
                                        "+            }",
                                        "+        }",
                                        "+    }",
                                        "+",
                                        "+    @Override",
                                        "+    public void afterCheckFile(@NonNull Context context) {",
                                        "+        // Store a reference to the manifest file in case we need to report it's location.",
                                        "+        if (context.getProject() == context.getMainProject()) {",
                                        "+            mManifestLocation = Location.create(context.file);",
                                        "+        }",
                                        "+    }",
                                        "+",
                                        "+    @Override",
                                        "+    public void visitElement(XmlContext context, Element activityElement) {",
                                        "+        // Checks every activity and reports an error if there is no activity with a launcher",
                                        "+        // intent.",
                                        "+        mHasActivity = true;",
                                        "+        if (isMainActivity(activityElement)) {",
                                        "+            mHasLauncherActivity = true;",
                                        "+        }",
                                        "+    }",
                                        "+",
                                        "+    /**",
                                        "+     * Returns true if the XML node is an activity with a launcher intent.",
                                        "+     *",
                                        "+     * @param activityNode The node to check.",
                                        "+     * @return <code>true</code> if the node is an activity with a launcher intent.",
                                        "+     */",
                                        "+    private boolean isMainActivity(Node activityNode) {",
                                        "+        if (TAG_ACTIVITY.equals(activityNode.getNodeName())) {",
                                        "+            // Loop through all <intent-filter> tags",
                                        "+            for (Element activityChild : LintUtils.getChildren(activityNode)) {",
                                        "+                if (TAG_INTENT_FILTER.equals(activityChild.getNodeName())) {",
                                        "+                    // Check for these children nodes:",
                                        "+                    //",
                                        "+                    // <category android:name=\"android.intent.category.LAUNCHER\" />",
                                        "+                    // <action android:name=\"android.intent.action.MAIN\" />",
                                        "+                    boolean hasLauncherCategory = false;",
                                        "+                    boolean hasMainAction = false;",
                                        "+",
                                        "+                    for (Element intentFilterChild : LintUtils.getChildren(activityChild)) {",
                                        "+                        // Check for category tag)",
                                        "+                        if (NODE_CATEGORY.equals(intentFilterChild.getNodeName())",
                                        "+                                && CATEGORY_NAME_LAUNCHER.equals(",
                                        "+                                intentFilterChild.getAttributeNS(ANDROID_URI, ATTR_NAME))) {",
                                        "+                            hasLauncherCategory = true;",
                                        "+                        }",
                                        "+                        // Check for action tag",
                                        "+                        if (NODE_ACTION.equals(intentFilterChild.getNodeName())",
                                        "+                                && ACTION_NAME_MAIN.equals(",
                                        "+                                intentFilterChild.getAttributeNS(ANDROID_URI, ATTR_NAME))) {",
                                        "+                            hasMainAction = true;",
                                        "+                        }",
                                        "+                    }",
                                        "+",
                                        "+                    if (hasLauncherCategory && hasMainAction) {",
                                        "+                        return true;",
                                        "+                    }",
                                        "+                }",
                                        "+            }",
                                        "+        }",
                                        "+        return false;",
                                        "+    }",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "android-studio-2/src/main/java/com/example/google/lint/ManifestConstants.java",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "+/*",
                                        "+ * Copyright (C) 2015 The Android Open Source Project",
                                        "+ *",
                                        "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                                        "+ * you may not use this file except in compliance with the License.",
                                        "+ * You may obtain a copy of the License at",
                                        "+ *",
                                        "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                                        "+ *",
                                        "+ * Unless required by applicable law or agreed to in writing, software",
                                        "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                                        "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                                        "+ * See the License for the specific language governing permissions and",
                                        "+ * limitations under the License.",
                                        "+ */",
                                        "+",
                                        "+package com.example.google.lint;",
                                        "+",
                                        "+/**",
                                        "+ * Manifest Constant definition class.",
                                        "+ * Amends constants not found in {@link com.android.SdkConstants}.",
                                        "+ */",
                                        "+public final class ManifestConstants {",
                                        "+    public static final String CATEGORY_NAME_LAUNCHER = \"android.intent.category.LAUNCHER\";",
                                        "+    public static final String ACTION_NAME_MAIN = \"android.intent.action.MAIN\";",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "android-studio-2/src/main/java/com/example/google/lint/MyIssueRegistry.java",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "+/*",
                                        "+ * Copyright (C) 2015 The Android Open Source Project",
                                        "+ *",
                                        "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                                        "+ * you may not use this file except in compliance with the License.",
                                        "+ * You may obtain a copy of the License at",
                                        "+ *",
                                        "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                                        "+ *",
                                        "+ * Unless required by applicable law or agreed to in writing, software",
                                        "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                                        "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                                        "+ * See the License for the specific language governing permissions and",
                                        "+ * limitations under the License.",
                                        "+ */",
                                        "+",
                                        "+package com.example.google.lint;",
                                        "+",
                                        "+import com.android.tools.lint.client.api.IssueRegistry;",
                                        "+import com.android.tools.lint.detector.api.Issue;",
                                        "+",
                                        "+import java.util.Collections;",
                                        "+import java.util.List;",
                                        "+",
                                        "+/**",
                                        "+ * The list of issues that will be checked when running <code>lint</code>.",
                                        "+ */",
                                        "+@SuppressWarnings(\"unused\")",
                                        "+public class MyIssueRegistry extends IssueRegistry {",
                                        "+    @Override",
                                        "+    public List<Issue> getIssues() {",
                                        "+        return Collections.singletonList(MainActivityDetector.ISSUE);",
                                        "+    }",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "android-studio-2/src/test/java/com/example/google/lint/MainActivityDetectorTest.java",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "+/*",
                                        "+ * Copyright (C) 2015 The Android Open Source Project",
                                        "+ *",
                                        "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                                        "+ * you may not use this file except in compliance with the License.",
                                        "+ * You may obtain a copy of the License at",
                                        "+ *",
                                        "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                                        "+ *",
                                        "+ * Unless required by applicable law or agreed to in writing, software",
                                        "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                                        "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                                        "+ * See the License for the specific language governing permissions and",
                                        "+ * limitations under the License.",
                                        "+ */",
                                        "+",
                                        "+package com.example.google.lint;",
                                        "+",
                                        "+import com.android.tools.lint.checks.infrastructure.LintDetectorTest;",
                                        "+import com.android.tools.lint.detector.api.Detector;",
                                        "+import com.android.tools.lint.detector.api.Issue;",
                                        "+",
                                        "+import java.util.Collections;",
                                        "+import java.util.List;",
                                        "+",
                                        "+import static com.android.SdkConstants.FN_ANDROID_MANIFEST_XML;",
                                        "+",
                                        "+/**",
                                        "+ * <b>NOTE: This is not a final API; if you rely on this be prepared",
                                        "+ * to adjust your code for the next tools release.</b>",
                                        "+ */",
                                        "+public class MainActivityDetectorTest extends LintDetectorTest {",
                                        "+    @Override",
                                        "+    protected Detector getDetector() {",
                                        "+        return new MainActivityDetector();",
                                        "+    }",
                                        "+",
                                        "+    @Override",
                                        "+    protected List<Issue> getIssues() {",
                                        "+        return Collections.singletonList(MainActivityDetector.ISSUE);",
                                        "+    }",
                                        "+",
                                        "+    /**",
                                        "+     * Test that a manifest with an activity with a launcher intent has no warnings.",
                                        "+     */",
                                        "+    public void testHasMainActivity() {",
                                        "+        lint().files(",
                                        "+                xml(FN_ANDROID_MANIFEST_XML, \"\" +",
                                        "+                        \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +",
                                        "+                        \"<manifest package=\\\"com.example.android.custom-lint-rules\\\"\\n\" +",
                                        "+                        \"          xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\">\\n\" +",
                                        "+                        \"    <application>\\n\" +",
                                        "+                        \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +",
                                        "+                        \".OtherActivity\\\">\\n\" +",
                                        "+                        \"        </activity>\\n\" +",
                                        "+                        \"\\n\" +",
                                        "+                        \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +",
                                        "+                        \".MainActivity\\\">\\n\" +",
                                        "+                        \"            <intent-filter>\\n\" +",
                                        "+                        \"                <action android:name=\\\"android.intent.action.MAIN\\\"/>\\n\" +",
                                        "+                        \"                <category android:name=\\\"android.intent.category.LAUNCHER\\\"/>\\n\" +",
                                        "+                        \"            </intent-filter>\\n\" +",
                                        "+                        \"        </activity>\\n\" +",
                                        "+                        \"    </application>\\n\" +",
                                        "+                        \"</manifest>\"))",
                                        "+                .run()",
                                        "+                .expectClean();",
                                        "+    }",
                                        "+",
                                        "+    /**",
                                        "+     * Test that a manifest <em>without</em> an activity with a launcher intent reports an error.",
                                        "+     */",
                                        "+    public void testMissingMainActivity() {",
                                        "+        String expected = \"AndroidManifest.xml: Error: Expecting AndroidManifest.xml to have an \" +",
                                        "+                \"activity with a launcher intent. [MainActivityDetector]\\n\" +",
                                        "+                \"1 errors, 0 warnings\\n\";",
                                        "+        lint().files(",
                                        "+                xml(FN_ANDROID_MANIFEST_XML, \"\" +",
                                        "+                        \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +",
                                        "+                        \"<manifest package=\\\"com.example.android.custom-lint-rules\\\"\\n\" +",
                                        "+                        \"          xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\">\\n\" +",
                                        "+                        \"    <application>\\n\" +",
                                        "+                        \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +",
                                        "+                        \".Activity1\\\">\\n\" +",
                                        "+                        \"            <intent-filter>\\n\" +",
                                        "+                        \"                <action android:name=\\\"android.intent.action.VIEW\\\" />\\n\" +",
                                        "+                        \"\\n\" +",
                                        "+                        \"                <category android:name=\\\"android.intent.category.HOME\\\" />\\n\" +",
                                        "+                        \"                <category android:name=\\\"android.intent.category.LAUNCHER\\\" />\\n\" +",
                                        "+                        \"                <category android:name=\\\"android.intent.category.DEFAULT\\\" />\\n\" +",
                                        "+                        \"                <category android:name=\\\"android.intent.category.BROWSABLE\\\" \" +",
                                        "+                        \"/>\\n\" +",
                                        "+                        \"            </intent-filter>\\n\" +",
                                        "+                        \"        </activity>\\n\" +",
                                        "+                        \"\\n\" +",
                                        "+                        \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +",
                                        "+                        \".Activity2\\\">\\n\" +",
                                        "+                        \"        </activity>\\n\" +",
                                        "+                        \"\\n\" +",
                                        "+                        \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +",
                                        "+                        \".Activity3\\\">\\n\" +",
                                        "+                        \"            <intent-filter>\\n\" +",
                                        "+                        \"                <action android:name=\\\"android.intent.action.SEND\\\"/>\\n\" +",
                                        "+                        \"                <category android:name=\\\"android.intent.category.DEFAULT\\\"/>\\n\" +",
                                        "+                        \"                <data android:mimeType=\\\"text/plain\\\"/>\\n\" +",
                                        "+                        \"            </intent-filter>\\n\" +",
                                        "+                        \"        </activity>\\n\" +",
                                        "+                        \"    </application>\\n\" +",
                                        "+                        \"</manifest>\"))",
                                        "+                .run()",
                                        "+                .expect(expected);",
                                        "+    }",
                                        "+",
                                        "+    /**",
                                        "+     * Test that a manifest without an <code>&lt;application&gt;</code> tag reports an error.",
                                        "+     */",
                                        "+    public void testMissingApplication() {",
                                        "+        String expected = \"AndroidManifest.xml: Error: Expecting AndroidManifest.xml to have an \" +",
                                        "+                \"<activity> tag. [MainActivityDetector]\\n\" +",
                                        "+                \"1 errors, 0 warnings\\n\";",
                                        "+        lint().files(",
                                        "+                xml(FN_ANDROID_MANIFEST_XML, \"\" +",
                                        "+                        \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +",
                                        "+                        \"<manifest package=\\\"com.example.android.custom-lint-rules\\\"\\n\" +",
                                        "+                        \"          xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\">\\n\" +",
                                        "+                        \"</manifest>\"))",
                                        "+                .run()",
                                        "+                .expect(expected);",
                                        "+    }",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "android-studio-3/README.md",
                            "content": {
                                "current": "# Sample Lint Checks\n\nThis project shows how Android Studio 3 (beta 5 and later) handles packaging\nof lint rules.\n\n## Lint Check Jar Library\n\nFirst, there's the lint check implementation itself. That's done in the\n\"checks\" project, which just applies the Gradle \"java\" plugin, and\nthat project produces a jar. Note that the dependencies for the lint\ncheck project (other than its testing dependencies) must all be \"compileOnly\":\n\n    dependencies {\n        compileOnly \"com.android.tools.lint:lint-api:$lintVersion\"\n        compileOnly \"com.android.tools.lint:lint-checks:$lintVersion\"\n\t\t...\n\n## Lint Check AAR Library\n\nNext, there's a separate Android library project, called \"library\". This\nlibrary doesn't have any code on its own (though it could). However,\nin its build.gradle, it specifies this:\n\n    dependencies {\n        lintChecks project(':checks')\n    }\n\nThis tells the Gradle plugin to take the output from the \"checks\" project\nand package that as a \"lint.jar\" payload inside this library's AAR file.\nWhen that's done, any other projects that depends on this library will\nautomatically be using the lint checks.\n\n## App Modules\n\nNote that you don't have to go through the extra \"library indirection\"\nif you have a lint check that you only want to apply to one or more\napp modules. You can simply include the `lintChecks` dependency as shown\nabove there as well, and then lint will include these rules when analyzing\nthe project.\n\n## Lint Version\n\nThe lint version of the libraries (specified in this project as the\n`lintVersion` variable in build.gradle) should be the same version\nthat is used by the Gradle plugin.\n\nIf the Gradle plugin version is *X*.*Y*.*Z*, then the Lint library\nversion is *X+23*.*Y*.*Z*.\n",
                                "diffs": [
                                    [
                                        "+# Sample Lint Checks",
                                        "+",
                                        "+This project shows how Android Studio 3 (beta 5 and later) handles packaging",
                                        "+of lint rules.",
                                        "+",
                                        "+## Lint Check Jar Library",
                                        "+",
                                        "+First, there's the lint check implementation itself. That's done in the",
                                        "+\"checks\" project, which just applies the Gradle \"java\" plugin, and",
                                        "+that project produces a jar. Note that the dependencies for the lint",
                                        "+check project (other than its testing dependencies) must all be \"compileOnly\":",
                                        "+",
                                        "+    dependencies {",
                                        "+        compileOnly \"com.android.tools.lint:lint-api:$lintVersion\"",
                                        "+        compileOnly \"com.android.tools.lint:lint-checks:$lintVersion\"",
                                        "+\t\t...",
                                        "+",
                                        "+## Lint Check AAR Library",
                                        "+",
                                        "+Next, there's a separate Android library project, called \"library\". This",
                                        "+library doesn't have any code on its own (though it could). However,",
                                        "+in its build.gradle, it specifies this:",
                                        "+",
                                        "+    dependencies {",
                                        "+        lintChecks project(':checks')",
                                        "+    }",
                                        "+",
                                        "+This tells the Gradle plugin to take the output from the \"checks\" project",
                                        "+and package that as a \"lint.jar\" payload inside this library's AAR file.",
                                        "+When that's done, any other projects that depends on this library will",
                                        "+automatically be using the lint checks.",
                                        "+",
                                        "+## App Modules",
                                        "+",
                                        "+Note that you don't have to go through the extra \"library indirection\"",
                                        "+if you have a lint check that you only want to apply to one or more",
                                        "+app modules. You can simply include the `lintChecks` dependency as shown",
                                        "+above there as well, and then lint will include these rules when analyzing",
                                        "+the project.",
                                        "+",
                                        "+## Lint Version",
                                        "+",
                                        "+The lint version of the libraries (specified in this project as the",
                                        "+`lintVersion` variable in build.gradle) should be the same version",
                                        "+that is used by the Gradle plugin.",
                                        "+",
                                        "+If the Gradle plugin version is *X*.*Y*.*Z*, then the Lint library",
                                        "+version is *X+23*.*Y*.*Z*.",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "android-studio-3/build.gradle",
                            "content": {
                                "current": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    ext {\n        gradlePluginVersion = '3.0.0-beta5'\n        lintVersion = '26.0.0-beta5'\n    }\n\n    repositories {\n        google()\n        jcenter()\n    }\n    dependencies {\n        classpath \"com.android.tools.build:gradle:$gradlePluginVersion\"\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        google()\n        jcenter()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n",
                                "diffs": [
                                    [
                                        "+// Top-level build file where you can add configuration options common to all sub-projects/modules.",
                                        "+",
                                        "+buildscript {",
                                        "+    ext {",
                                        "+        gradlePluginVersion = '3.0.0-beta5'",
                                        "+        lintVersion = '26.0.0-beta5'",
                                        "+    }",
                                        "+",
                                        "+    repositories {",
                                        "+        google()",
                                        "+        jcenter()",
                                        "+    }",
                                        "+    dependencies {",
                                        "+        classpath \"com.android.tools.build:gradle:$gradlePluginVersion\"",
                                        "+",
                                        "+        // NOTE: Do not place your application dependencies here; they belong",
                                        "+        // in the individual module build.gradle files",
                                        "+    }",
                                        "+}",
                                        "+",
                                        "+allprojects {",
                                        "+    repositories {",
                                        "+        google()",
                                        "+        jcenter()",
                                        "+    }",
                                        "+}",
                                        "+",
                                        "+task clean(type: Delete) {",
                                        "+    delete rootProject.buildDir",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "android-studio-3/checks/build.gradle",
                            "content": {
                                "current": "apply plugin: 'java-library'\n\ndependencies {\n    compileOnly \"com.android.tools.lint:lint-api:$lintVersion\"\n    compileOnly \"com.android.tools.lint:lint-checks:$lintVersion\"\n    testCompile \"junit:junit:4.12\"\n    testCompile \"com.android.tools.lint:lint:$lintVersion\"\n    testCompile \"com.android.tools.lint:lint-tests:$lintVersion\"\n    testCompile \"com.android.tools:testutils:$lintVersion\"\n}\n\nsourceCompatibility = \"1.8\"\ntargetCompatibility = \"1.8\"\n\njar {\n    manifest {\n        // Only use the \"-v2\" key here if your checks have been updated to the\n        // new 3.0 APIs (including UAST)\n        attributes(\"Lint-Registry-v2\": \"com.example.lint.checks.SampleIssueRegistry\")\n    }\n}\n",
                                "diffs": [
                                    [
                                        "+apply plugin: 'java-library'",
                                        "+",
                                        "+dependencies {",
                                        "+    compileOnly \"com.android.tools.lint:lint-api:$lintVersion\"",
                                        "+    compileOnly \"com.android.tools.lint:lint-checks:$lintVersion\"",
                                        "+    testCompile \"junit:junit:4.12\"",
                                        "+    testCompile \"com.android.tools.lint:lint:$lintVersion\"",
                                        "+    testCompile \"com.android.tools.lint:lint-tests:$lintVersion\"",
                                        "+    testCompile \"com.android.tools:testutils:$lintVersion\"",
                                        "+}",
                                        "+",
                                        "+sourceCompatibility = \"1.8\"",
                                        "+targetCompatibility = \"1.8\"",
                                        "+",
                                        "+jar {",
                                        "+    manifest {",
                                        "+        // Only use the \"-v2\" key here if your checks have been updated to the",
                                        "+        // new 3.0 APIs (including UAST)",
                                        "+        attributes(\"Lint-Registry-v2\": \"com.example.lint.checks.SampleIssueRegistry\")",
                                        "+    }",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "android-studio-3/checks/src/main/java/com/example/lint/checks/SampleCodeDetector.java",
                            "content": {
                                "current": "/*\n * Copyright (C) 2017 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.example.lint.checks;\n\nimport com.android.tools.lint.client.api.UElementHandler;\nimport com.android.tools.lint.detector.api.Category;\nimport com.android.tools.lint.detector.api.Detector;\nimport com.android.tools.lint.detector.api.Detector.UastScanner;\nimport com.android.tools.lint.detector.api.Implementation;\nimport com.android.tools.lint.detector.api.Issue;\nimport com.android.tools.lint.detector.api.JavaContext;\nimport com.android.tools.lint.detector.api.Scope;\nimport com.android.tools.lint.detector.api.Severity;\n\nimport org.jetbrains.uast.UElement;\nimport org.jetbrains.uast.ULiteralExpression;\nimport org.jetbrains.uast.UastLiteralUtils;\n\nimport java.util.Collections;\nimport java.util.List;\n\n/**\n * Sample detector showing how to analyze Kotlin/Java code.\n * This example flags all string literals in the code that contain\n * the word \"lint\".\n */\npublic class SampleCodeDetector extends Detector implements UastScanner {\n    /** Issue describing the problem and pointing to the detector implementation */\n    public static final Issue ISSUE = Issue.create(\n            // ID: used in @SuppressLint warnings etc\n            \"ShortUniqueId\",\n\n            // Title -- shown in the IDE's preference dialog, as category headers in the\n            // Analysis results window, etc\n            \"Lint Mentions\",\n\n            // Full explanation of the issue; you can use some markdown markup such as\n            // `monospace`, *italic*, and **bold**.\n            \"This check highlights string literals in code which mentions \" +\n                    \"the word `lint`. Blah blah blah.\\n\" +\n                    \"\\n\" +\n                    \"Another paragraph here.\\n\",\n            Category.CORRECTNESS,\n            6,\n            Severity.WARNING,\n            new Implementation(\n                    SampleCodeDetector.class,\n                    Scope.JAVA_FILE_SCOPE));\n\n    @Override\n    public List<Class<? extends UElement>> getApplicableUastTypes() {\n        return Collections.singletonList(ULiteralExpression.class);\n    }\n\n    @Override\n    public UElementHandler createUastHandler(JavaContext context) {\n        // Not: Visiting UAST nodes is a pretty general purpose mechanism;\n        // Lint has specialized support to do common things like \"visit every class\n        // that extends a given super class or implements a given interface\", and\n        // \"visit every call site that calls a method by a given name\" etc.\n        // Take a careful look at UastScanner and the various existing lint check\n        // implementations before doing things the \"hard way\".\n        // Also be aware of context.getJavaEvaluator() which provides a lot of\n        // utility functionality.\n        return new UElementHandler() {\n            @Override\n            public void visitLiteralExpression(ULiteralExpression expression) {\n                String string = UastLiteralUtils.getValueIfStringLiteral(expression);\n                if (string == null) {\n                    return;\n                }\n\n                if (string.contains(\"lint\") && string.matches(\".*\\\\blint\\\\b.*\")) {\n                    context.report(ISSUE, expression, context.getLocation(expression),\n                            \"This code mentions `lint`: **Congratulations**\");\n                }\n            }\n        };\n    }\n}\n",
                                "diffs": [
                                    [
                                        "+/*",
                                        "+ * Copyright (C) 2017 The Android Open Source Project",
                                        "+ *",
                                        "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                                        "+ * you may not use this file except in compliance with the License.",
                                        "+ * You may obtain a copy of the License at",
                                        "+ *",
                                        "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                                        "+ *",
                                        "+ * Unless required by applicable law or agreed to in writing, software",
                                        "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                                        "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                                        "+ * See the License for the specific language governing permissions and",
                                        "+ * limitations under the License.",
                                        "+ */",
                                        "+package com.example.lint.checks;",
                                        "+",
                                        "+import com.android.tools.lint.client.api.UElementHandler;",
                                        "+import com.android.tools.lint.detector.api.Category;",
                                        "+import com.android.tools.lint.detector.api.Detector;",
                                        "+import com.android.tools.lint.detector.api.Detector.UastScanner;",
                                        "+import com.android.tools.lint.detector.api.Implementation;",
                                        "+import com.android.tools.lint.detector.api.Issue;",
                                        "+import com.android.tools.lint.detector.api.JavaContext;",
                                        "+import com.android.tools.lint.detector.api.Scope;",
                                        "+import com.android.tools.lint.detector.api.Severity;",
                                        "+",
                                        "+import org.jetbrains.uast.UElement;",
                                        "+import org.jetbrains.uast.ULiteralExpression;",
                                        "+import org.jetbrains.uast.UastLiteralUtils;",
                                        "+",
                                        "+import java.util.Collections;",
                                        "+import java.util.List;",
                                        "+",
                                        "+/**",
                                        "+ * Sample detector showing how to analyze Kotlin/Java code.",
                                        "+ * This example flags all string literals in the code that contain",
                                        "+ * the word \"lint\".",
                                        "+ */",
                                        "+public class SampleCodeDetector extends Detector implements UastScanner {",
                                        "+    /** Issue describing the problem and pointing to the detector implementation */",
                                        "+    public static final Issue ISSUE = Issue.create(",
                                        "+            // ID: used in @SuppressLint warnings etc",
                                        "+            \"ShortUniqueId\",",
                                        "+",
                                        "+            // Title -- shown in the IDE's preference dialog, as category headers in the",
                                        "+            // Analysis results window, etc",
                                        "+            \"Lint Mentions\",",
                                        "+",
                                        "+            // Full explanation of the issue; you can use some markdown markup such as",
                                        "+            // `monospace`, *italic*, and **bold**.",
                                        "+            \"This check highlights string literals in code which mentions \" +",
                                        "+                    \"the word `lint`. Blah blah blah.\\n\" +",
                                        "+                    \"\\n\" +",
                                        "+                    \"Another paragraph here.\\n\",",
                                        "+            Category.CORRECTNESS,",
                                        "+            6,",
                                        "+            Severity.WARNING,",
                                        "+            new Implementation(",
                                        "+                    SampleCodeDetector.class,",
                                        "+                    Scope.JAVA_FILE_SCOPE));",
                                        "+",
                                        "+    @Override",
                                        "+    public List<Class<? extends UElement>> getApplicableUastTypes() {",
                                        "+        return Collections.singletonList(ULiteralExpression.class);",
                                        "+    }",
                                        "+",
                                        "+    @Override",
                                        "+    public UElementHandler createUastHandler(JavaContext context) {",
                                        "+        // Not: Visiting UAST nodes is a pretty general purpose mechanism;",
                                        "+        // Lint has specialized support to do common things like \"visit every class",
                                        "+        // that extends a given super class or implements a given interface\", and",
                                        "+        // \"visit every call site that calls a method by a given name\" etc.",
                                        "+        // Take a careful look at UastScanner and the various existing lint check",
                                        "+        // implementations before doing things the \"hard way\".",
                                        "+        // Also be aware of context.getJavaEvaluator() which provides a lot of",
                                        "+        // utility functionality.",
                                        "+        return new UElementHandler() {",
                                        "+            @Override",
                                        "+            public void visitLiteralExpression(ULiteralExpression expression) {",
                                        "+                String string = UastLiteralUtils.getValueIfStringLiteral(expression);",
                                        "+                if (string == null) {",
                                        "+                    return;",
                                        "+                }",
                                        "+",
                                        "+                if (string.contains(\"lint\") && string.matches(\".*\\\\blint\\\\b.*\")) {",
                                        "+                    context.report(ISSUE, expression, context.getLocation(expression),",
                                        "+                            \"This code mentions `lint`: **Congratulations**\");",
                                        "+                }",
                                        "+            }",
                                        "+        };",
                                        "+    }",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "android-studio-3/checks/src/main/java/com/example/lint/checks/SampleIssueRegistry.java",
                            "content": {
                                "current": "/*\n * Copyright (C) 2017 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.example.lint.checks;\n\nimport com.android.tools.lint.client.api.IssueRegistry;\nimport com.android.tools.lint.detector.api.Issue;\n\nimport java.util.Collections;\nimport java.util.List;\n\n/*\n * The list of issues that will be checked when running <code>lint</code>.\n */\npublic class SampleIssueRegistry extends IssueRegistry {\n    @Override\n    public List<Issue> getIssues() {\n        return Collections.singletonList(SampleCodeDetector.ISSUE);\n    }\n}\n\n",
                                "diffs": [
                                    [
                                        "+/*",
                                        "+ * Copyright (C) 2017 The Android Open Source Project",
                                        "+ *",
                                        "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                                        "+ * you may not use this file except in compliance with the License.",
                                        "+ * You may obtain a copy of the License at",
                                        "+ *",
                                        "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                                        "+ *",
                                        "+ * Unless required by applicable law or agreed to in writing, software",
                                        "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                                        "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                                        "+ * See the License for the specific language governing permissions and",
                                        "+ * limitations under the License.",
                                        "+ */",
                                        "+package com.example.lint.checks;",
                                        "+",
                                        "+import com.android.tools.lint.client.api.IssueRegistry;",
                                        "+import com.android.tools.lint.detector.api.Issue;",
                                        "+",
                                        "+import java.util.Collections;",
                                        "+import java.util.List;",
                                        "+",
                                        "+/*",
                                        "+ * The list of issues that will be checked when running <code>lint</code>.",
                                        "+ */",
                                        "+public class SampleIssueRegistry extends IssueRegistry {",
                                        "+    @Override",
                                        "+    public List<Issue> getIssues() {",
                                        "+        return Collections.singletonList(SampleCodeDetector.ISSUE);",
                                        "+    }",
                                        "+}",
                                        "+",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "android-studio-3/checks/src/test/java/com/example/lint/checks/SampleCodeDetectorTest.java",
                            "content": {
                                "current": "/*\n * Copyright (C) 2017 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.example.lint.checks;\n\nimport com.android.tools.lint.checks.infrastructure.LintDetectorTest;\nimport com.android.tools.lint.detector.api.Detector;\nimport com.android.tools.lint.detector.api.Issue;\n\nimport java.util.Collections;\nimport java.util.List;\n\npublic class SampleCodeDetectorTest extends LintDetectorTest {\n    public void testBasic() {\n        lint().files(\n                java(\"\" +\n                        \"package test.pkg;\\n\" +\n                        \"public class TestClass1 {\\n\" +\n                        \"    // In a comment, mentioning \\\"lint\\\" has no effect\\n\" +\n                        \"    private static String s1 = \\\"Ignore non-word usages: linting\\\";\\n\" +\n                        \"    private static String s2 = \\\"Let's say it: lint\\\";\\n\" +\n                        \"}\"))\n                .run()\n                .expect(\"src/test/pkg/TestClass1.java:5: Warning: This code mentions lint: Congratulations [ShortUniqueId]\\n\" +\n                        \"    private static String s2 = \\\"Let's say it: lint\\\";\\n\" +\n                        \"                               ~~~~~~~~~~~~~~~~~~~~\\n\" +\n                        \"0 errors, 1 warnings\\n\");\n    }\n\n    @Override\n    protected Detector getDetector() {\n        return new SampleCodeDetector();\n    }\n\n    @Override\n    protected List<Issue> getIssues() {\n        return Collections.singletonList(SampleCodeDetector.ISSUE);\n    }\n}",
                                "diffs": [
                                    [
                                        "+/*",
                                        "+ * Copyright (C) 2017 The Android Open Source Project",
                                        "+ *",
                                        "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                                        "+ * you may not use this file except in compliance with the License.",
                                        "+ * You may obtain a copy of the License at",
                                        "+ *",
                                        "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                                        "+ *",
                                        "+ * Unless required by applicable law or agreed to in writing, software",
                                        "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                                        "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                                        "+ * See the License for the specific language governing permissions and",
                                        "+ * limitations under the License.",
                                        "+ */",
                                        "+package com.example.lint.checks;",
                                        "+",
                                        "+import com.android.tools.lint.checks.infrastructure.LintDetectorTest;",
                                        "+import com.android.tools.lint.detector.api.Detector;",
                                        "+import com.android.tools.lint.detector.api.Issue;",
                                        "+",
                                        "+import java.util.Collections;",
                                        "+import java.util.List;",
                                        "+",
                                        "+public class SampleCodeDetectorTest extends LintDetectorTest {",
                                        "+    public void testBasic() {",
                                        "+        lint().files(",
                                        "+                java(\"\" +",
                                        "+                        \"package test.pkg;\\n\" +",
                                        "+                        \"public class TestClass1 {\\n\" +",
                                        "+                        \"    // In a comment, mentioning \\\"lint\\\" has no effect\\n\" +",
                                        "+                        \"    private static String s1 = \\\"Ignore non-word usages: linting\\\";\\n\" +",
                                        "+                        \"    private static String s2 = \\\"Let's say it: lint\\\";\\n\" +",
                                        "+                        \"}\"))",
                                        "+                .run()",
                                        "+                .expect(\"src/test/pkg/TestClass1.java:5: Warning: This code mentions lint: Congratulations [ShortUniqueId]\\n\" +",
                                        "+                        \"    private static String s2 = \\\"Let's say it: lint\\\";\\n\" +",
                                        "+                        \"                               ~~~~~~~~~~~~~~~~~~~~\\n\" +",
                                        "+                        \"0 errors, 1 warnings\\n\");",
                                        "+    }",
                                        "+",
                                        "+    @Override",
                                        "+    protected Detector getDetector() {",
                                        "+        return new SampleCodeDetector();",
                                        "+    }",
                                        "+",
                                        "+    @Override",
                                        "+    protected List<Issue> getIssues() {",
                                        "+        return Collections.singletonList(SampleCodeDetector.ISSUE);",
                                        "+    }",
                                        "+}",
                                        "\\ No newline at end of file",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "android-studio-3/gradle.properties",
                            "content": {
                                "current": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\norg.gradle.jvmargs=-Xmx1536m\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n",
                                "diffs": [
                                    [
                                        "+# Project-wide Gradle settings.",
                                        "+",
                                        "+# IDE (e.g. Android Studio) users:",
                                        "+# Gradle settings configured through the IDE *will override*",
                                        "+# any settings specified in this file.",
                                        "+",
                                        "+# For more details on how to configure your build environment visit",
                                        "+# http://www.gradle.org/docs/current/userguide/build_environment.html",
                                        "+",
                                        "+# Specifies the JVM arguments used for the daemon process.",
                                        "+# The setting is particularly useful for tweaking memory settings.",
                                        "+org.gradle.jvmargs=-Xmx1536m",
                                        "+",
                                        "+# When configured, Gradle will run in incubating parallel mode.",
                                        "+# This option should only be used with decoupled projects. More details, visit",
                                        "+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects",
                                        "+# org.gradle.parallel=true",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "android-studio-3/gradle/wrapper/gradle-wrapper.properties",
                            "content": {
                                "current": "#Fri Sep 01 06:52:38 PDT 2017\ndistributionBase=GRADLE_USER_HOME\ndistributionPath=wrapper/dists\nzipStoreBase=GRADLE_USER_HOME\nzipStorePath=wrapper/dists\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-4.1-all.zip\n",
                                "diffs": [
                                    [
                                        "+#Fri Sep 01 06:52:38 PDT 2017",
                                        "+distributionBase=GRADLE_USER_HOME",
                                        "+distributionPath=wrapper/dists",
                                        "+zipStoreBase=GRADLE_USER_HOME",
                                        "+zipStorePath=wrapper/dists",
                                        "+distributionUrl=https\\://services.gradle.org/distributions/gradle-4.1-all.zip",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "android-studio-3/gradlew",
                            "content": {
                                "current": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n",
                                "diffs": [
                                    [
                                        "+#!/usr/bin/env bash",
                                        "+",
                                        "+##############################################################################",
                                        "+##",
                                        "+##  Gradle start up script for UN*X",
                                        "+##",
                                        "+##############################################################################",
                                        "+",
                                        "+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.",
                                        "+DEFAULT_JVM_OPTS=\"\"",
                                        "+",
                                        "+APP_NAME=\"Gradle\"",
                                        "+APP_BASE_NAME=`basename \"$0\"`",
                                        "+",
                                        "+# Use the maximum available, or set MAX_FD != -1 to use that value.",
                                        "+MAX_FD=\"maximum\"",
                                        "+",
                                        "+warn ( ) {",
                                        "+    echo \"$*\"",
                                        "+}",
                                        "+",
                                        "+die ( ) {",
                                        "+    echo",
                                        "+    echo \"$*\"",
                                        "+    echo",
                                        "+    exit 1",
                                        "+}",
                                        "+",
                                        "+# OS specific support (must be 'true' or 'false').",
                                        "+cygwin=false",
                                        "+msys=false",
                                        "+darwin=false",
                                        "+case \"`uname`\" in",
                                        "+  CYGWIN* )",
                                        "+    cygwin=true",
                                        "+    ;;",
                                        "+  Darwin* )",
                                        "+    darwin=true",
                                        "+    ;;",
                                        "+  MINGW* )",
                                        "+    msys=true",
                                        "+    ;;",
                                        "+esac",
                                        "+",
                                        "+# Attempt to set APP_HOME",
                                        "+# Resolve links: $0 may be a link",
                                        "+PRG=\"$0\"",
                                        "+# Need this for relative symlinks.",
                                        "+while [ -h \"$PRG\" ] ; do",
                                        "+    ls=`ls -ld \"$PRG\"`",
                                        "+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`",
                                        "+    if expr \"$link\" : '/.*' > /dev/null; then",
                                        "+        PRG=\"$link\"",
                                        "+    else",
                                        "+        PRG=`dirname \"$PRG\"`\"/$link\"",
                                        "+    fi",
                                        "+done",
                                        "+SAVED=\"`pwd`\"",
                                        "+cd \"`dirname \\\"$PRG\\\"`/\" >/dev/null",
                                        "+APP_HOME=\"`pwd -P`\"",
                                        "+cd \"$SAVED\" >/dev/null",
                                        "+",
                                        "+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar",
                                        "+",
                                        "+# Determine the Java command to use to start the JVM.",
                                        "+if [ -n \"$JAVA_HOME\" ] ; then",
                                        "+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then",
                                        "+        # IBM's JDK on AIX uses strange locations for the executables",
                                        "+        JAVACMD=\"$JAVA_HOME/jre/sh/java\"",
                                        "+    else",
                                        "+        JAVACMD=\"$JAVA_HOME/bin/java\"",
                                        "+    fi",
                                        "+    if [ ! -x \"$JAVACMD\" ] ; then",
                                        "+        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME",
                                        "+",
                                        "+Please set the JAVA_HOME variable in your environment to match the",
                                        "+location of your Java installation.\"",
                                        "+    fi",
                                        "+else",
                                        "+    JAVACMD=\"java\"",
                                        "+    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.",
                                        "+",
                                        "+Please set the JAVA_HOME variable in your environment to match the",
                                        "+location of your Java installation.\"",
                                        "+fi",
                                        "+",
                                        "+# Increase the maximum file descriptors if we can.",
                                        "+if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then",
                                        "+    MAX_FD_LIMIT=`ulimit -H -n`",
                                        "+    if [ $? -eq 0 ] ; then",
                                        "+        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then",
                                        "+            MAX_FD=\"$MAX_FD_LIMIT\"",
                                        "+        fi",
                                        "+        ulimit -n $MAX_FD",
                                        "+        if [ $? -ne 0 ] ; then",
                                        "+            warn \"Could not set maximum file descriptor limit: $MAX_FD\"",
                                        "+        fi",
                                        "+    else",
                                        "+        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"",
                                        "+    fi",
                                        "+fi",
                                        "+",
                                        "+# For Darwin, add options to specify how the application appears in the dock",
                                        "+if $darwin; then",
                                        "+    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"",
                                        "+fi",
                                        "+",
                                        "+# For Cygwin, switch paths to Windows format before running java",
                                        "+if $cygwin ; then",
                                        "+    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`",
                                        "+    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`",
                                        "+    JAVACMD=`cygpath --unix \"$JAVACMD\"`",
                                        "+",
                                        "+    # We build the pattern for arguments to be converted via cygpath",
                                        "+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`",
                                        "+    SEP=\"\"",
                                        "+    for dir in $ROOTDIRSRAW ; do",
                                        "+        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"",
                                        "+        SEP=\"|\"",
                                        "+    done",
                                        "+    OURCYGPATTERN=\"(^($ROOTDIRS))\"",
                                        "+    # Add a user-defined pattern to the cygpath arguments",
                                        "+    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then",
                                        "+        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"",
                                        "+    fi",
                                        "+    # Now convert the arguments - kludge to limit ourselves to /bin/sh",
                                        "+    i=0",
                                        "+    for arg in \"$@\" ; do",
                                        "+        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`",
                                        "+        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option",
                                        "+",
                                        "+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition",
                                        "+            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`",
                                        "+        else",
                                        "+            eval `echo args$i`=\"\\\"$arg\\\"\"",
                                        "+        fi",
                                        "+        i=$((i+1))",
                                        "+    done",
                                        "+    case $i in",
                                        "+        (0) set -- ;;",
                                        "+        (1) set -- \"$args0\" ;;",
                                        "+        (2) set -- \"$args0\" \"$args1\" ;;",
                                        "+        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;",
                                        "+        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;",
                                        "+        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;",
                                        "+        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;",
                                        "+        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;",
                                        "+        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;",
                                        "+        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;",
                                        "+    esac",
                                        "+fi",
                                        "+",
                                        "+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules",
                                        "+function splitJvmOpts() {",
                                        "+    JVM_OPTS=(\"$@\")",
                                        "+}",
                                        "+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS",
                                        "+JVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"",
                                        "+",
                                        "+exec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "android-studio-3/gradlew.bat",
                            "content": {
                                "current": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windowz variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\ngoto execute\r\n\r\n:4NT_args\r\n@rem Get arguments from the 4NT Shell from JP Software\r\nset CMD_LINE_ARGS=%$\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n",
                                "diffs": [
                                    [
                                        "+@if \"%DEBUG%\" == \"\" @echo off",
                                        "+@rem ##########################################################################",
                                        "+@rem",
                                        "+@rem  Gradle startup script for Windows",
                                        "+@rem",
                                        "+@rem ##########################################################################",
                                        "+",
                                        "+@rem Set local scope for the variables with windows NT shell",
                                        "+if \"%OS%\"==\"Windows_NT\" setlocal",
                                        "+",
                                        "+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.",
                                        "+set DEFAULT_JVM_OPTS=",
                                        "+",
                                        "+set DIRNAME=%~dp0",
                                        "+if \"%DIRNAME%\" == \"\" set DIRNAME=.",
                                        "+set APP_BASE_NAME=%~n0",
                                        "+set APP_HOME=%DIRNAME%",
                                        "+",
                                        "+@rem Find java.exe",
                                        "+if defined JAVA_HOME goto findJavaFromJavaHome",
                                        "+",
                                        "+set JAVA_EXE=java.exe",
                                        "+%JAVA_EXE% -version >NUL 2>&1",
                                        "+if \"%ERRORLEVEL%\" == \"0\" goto init",
                                        "+",
                                        "+echo.",
                                        "+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.",
                                        "+echo.",
                                        "+echo Please set the JAVA_HOME variable in your environment to match the",
                                        "+echo location of your Java installation.",
                                        "+",
                                        "+goto fail",
                                        "+",
                                        "+:findJavaFromJavaHome",
                                        "+set JAVA_HOME=%JAVA_HOME:\"=%",
                                        "+set JAVA_EXE=%JAVA_HOME%/bin/java.exe",
                                        "+",
                                        "+if exist \"%JAVA_EXE%\" goto init",
                                        "+",
                                        "+echo.",
                                        "+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%",
                                        "+echo.",
                                        "+echo Please set the JAVA_HOME variable in your environment to match the",
                                        "+echo location of your Java installation.",
                                        "+",
                                        "+goto fail",
                                        "+",
                                        "+:init",
                                        "+@rem Get command-line arguments, handling Windowz variants",
                                        "+",
                                        "+if not \"%OS%\" == \"Windows_NT\" goto win9xME_args",
                                        "+if \"%@eval[2+2]\" == \"4\" goto 4NT_args",
                                        "+",
                                        "+:win9xME_args",
                                        "+@rem Slurp the command line arguments.",
                                        "+set CMD_LINE_ARGS=",
                                        "+set _SKIP=2",
                                        "+",
                                        "+:win9xME_args_slurp",
                                        "+if \"x%~1\" == \"x\" goto execute",
                                        "+",
                                        "+set CMD_LINE_ARGS=%*",
                                        "+goto execute",
                                        "+",
                                        "+:4NT_args",
                                        "+@rem Get arguments from the 4NT Shell from JP Software",
                                        "+set CMD_LINE_ARGS=%$",
                                        "+",
                                        "+:execute",
                                        "+@rem Setup the command line",
                                        "+",
                                        "+set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar",
                                        "+",
                                        "+@rem Execute Gradle",
                                        "+\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%",
                                        "+",
                                        "+:end",
                                        "+@rem End local scope for the variables with windows NT shell",
                                        "+if \"%ERRORLEVEL%\"==\"0\" goto mainEnd",
                                        "+",
                                        "+:fail",
                                        "+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of",
                                        "+rem the _cmd.exe /c_ return code!",
                                        "+if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1",
                                        "+exit /b 1",
                                        "+",
                                        "+:mainEnd",
                                        "+if \"%OS%\"==\"Windows_NT\" endlocal",
                                        "+",
                                        "+:omega",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "android-studio-3/library/build.gradle",
                            "content": {
                                "current": "apply plugin: 'com.android.library'\n\nandroid {\n    compileSdkVersion 26\n    defaultConfig {\n        minSdkVersion 15\n        targetSdkVersion 26\n    }\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n}\n\n/** Package the given lint checks library into this AAR  */\ndependencies {\n    lintChecks project(':checks')\n}\n",
                                "diffs": [
                                    [
                                        "+apply plugin: 'com.android.library'",
                                        "+",
                                        "+android {",
                                        "+    compileSdkVersion 26",
                                        "+    defaultConfig {",
                                        "+        minSdkVersion 15",
                                        "+        targetSdkVersion 26",
                                        "+    }",
                                        "+    compileOptions {",
                                        "+        sourceCompatibility JavaVersion.VERSION_1_8",
                                        "+        targetCompatibility JavaVersion.VERSION_1_8",
                                        "+    }",
                                        "+}",
                                        "+",
                                        "+/** Package the given lint checks library into this AAR  */",
                                        "+dependencies {",
                                        "+    lintChecks project(':checks')",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "android-studio-3/library/src/main/AndroidManifest.xml",
                            "content": {
                                "current": "<manifest package=\"com.example.lint.library\">\n\n</manifest>\n",
                                "diffs": [
                                    [
                                        "+<manifest package=\"com.example.lint.library\">",
                                        "+",
                                        "+</manifest>",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "build.gradle",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "-/*",
                                        "- * Copyright (C) 2015 The Android Open Source Project",
                                        "- *",
                                        "- * Licensed under the Apache License, Version 2.0 (the \"License\");",
                                        "- * you may not use this file except in compliance with the License.",
                                        "- * You may obtain a copy of the License at",
                                        "- *",
                                        "- *      http://www.apache.org/licenses/LICENSE-2.0",
                                        "- *",
                                        "- * Unless required by applicable law or agreed to in writing, software",
                                        "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                                        "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                                        "- * See the License for the specific language governing permissions and",
                                        "- * limitations under the License.",
                                        "- */",
                                        "-",
                                        "-apply plugin: 'java'",
                                        "-",
                                        "-repositories {",
                                        "-    google()",
                                        "-    jcenter()",
                                        "-}",
                                        "-",
                                        "-ext {",
                                        "-    lintVersion = '26.0.0-beta2'",
                                        "-}",
                                        "-",
                                        "-dependencies {",
                                        "-    compile \"com.android.tools.lint:lint-api:$lintVersion\"",
                                        "-    compile \"com.android.tools.lint:lint-checks:$lintVersion\"",
                                        "-    testCompile \"junit:junit:4.11\"",
                                        "-    testCompile \"com.android.tools.lint:lint:$lintVersion\"",
                                        "-    testCompile \"com.android.tools.lint:lint-tests:$lintVersion\"",
                                        "-    testCompile \"com.android.tools:testutils:$lintVersion\"",
                                        "-}",
                                        "-",
                                        "-jar {",
                                        "-    manifest {",
                                        "-        attributes(\"Lint-Registry-v2\": \"com.example.google.lint.MyIssueRegistry\")",
                                        "-    }",
                                        "-}",
                                        "-",
                                        "-defaultTasks 'assemble'",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "gradle/wrapper/gradle-wrapper.properties",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "-#Wed Aug 09 14:33:29 PDT 2017",
                                        "-distributionBase=GRADLE_USER_HOME",
                                        "-distributionPath=wrapper/dists",
                                        "-zipStoreBase=GRADLE_USER_HOME",
                                        "-zipStorePath=wrapper/dists",
                                        "-distributionUrl=https\\://services.gradle.org/distributions/gradle-4.1-rc-1-all.zip",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "gradlew",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "-#!/usr/bin/env bash",
                                        "-",
                                        "-##############################################################################",
                                        "-##",
                                        "-##  Gradle start up script for UN*X",
                                        "-##",
                                        "-##############################################################################",
                                        "-",
                                        "-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.",
                                        "-DEFAULT_JVM_OPTS=\"\"",
                                        "-",
                                        "-APP_NAME=\"Gradle\"",
                                        "-APP_BASE_NAME=`basename \"$0\"`",
                                        "-",
                                        "-# Use the maximum available, or set MAX_FD != -1 to use that value.",
                                        "-MAX_FD=\"maximum\"",
                                        "-",
                                        "-warn ( ) {",
                                        "-    echo \"$*\"",
                                        "-}",
                                        "-",
                                        "-die ( ) {",
                                        "-    echo",
                                        "-    echo \"$*\"",
                                        "-    echo",
                                        "-    exit 1",
                                        "-}",
                                        "-",
                                        "-# OS specific support (must be 'true' or 'false').",
                                        "-cygwin=false",
                                        "-msys=false",
                                        "-darwin=false",
                                        "-case \"`uname`\" in",
                                        "-  CYGWIN* )",
                                        "-    cygwin=true",
                                        "-    ;;",
                                        "-  Darwin* )",
                                        "-    darwin=true",
                                        "-    ;;",
                                        "-  MINGW* )",
                                        "-    msys=true",
                                        "-    ;;",
                                        "-esac",
                                        "-",
                                        "-# For Cygwin, ensure paths are in UNIX format before anything is touched.",
                                        "-if $cygwin ; then",
                                        "-    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`",
                                        "-fi",
                                        "-",
                                        "-# Attempt to set APP_HOME",
                                        "-# Resolve links: $0 may be a link",
                                        "-PRG=\"$0\"",
                                        "-# Need this for relative symlinks.",
                                        "-while [ -h \"$PRG\" ] ; do",
                                        "-    ls=`ls -ld \"$PRG\"`",
                                        "-    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`",
                                        "-    if expr \"$link\" : '/.*' > /dev/null; then",
                                        "-        PRG=\"$link\"",
                                        "-    else",
                                        "-        PRG=`dirname \"$PRG\"`\"/$link\"",
                                        "-    fi",
                                        "-done",
                                        "-SAVED=\"`pwd`\"",
                                        "-cd \"`dirname \\\"$PRG\\\"`/\" >&-",
                                        "-APP_HOME=\"`pwd -P`\"",
                                        "-cd \"$SAVED\" >&-",
                                        "-",
                                        "-CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar",
                                        "-",
                                        "-# Determine the Java command to use to start the JVM.",
                                        "-if [ -n \"$JAVA_HOME\" ] ; then",
                                        "-    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then",
                                        "-        # IBM's JDK on AIX uses strange locations for the executables",
                                        "-        JAVACMD=\"$JAVA_HOME/jre/sh/java\"",
                                        "-    else",
                                        "-        JAVACMD=\"$JAVA_HOME/bin/java\"",
                                        "-    fi",
                                        "-    if [ ! -x \"$JAVACMD\" ] ; then",
                                        "-        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME",
                                        "-",
                                        "-Please set the JAVA_HOME variable in your environment to match the",
                                        "-location of your Java installation.\"",
                                        "-    fi",
                                        "-else",
                                        "-    JAVACMD=\"java\"",
                                        "-    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.",
                                        "-",
                                        "-Please set the JAVA_HOME variable in your environment to match the",
                                        "-location of your Java installation.\"",
                                        "-fi",
                                        "-",
                                        "-# Increase the maximum file descriptors if we can.",
                                        "-if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then",
                                        "-    MAX_FD_LIMIT=`ulimit -H -n`",
                                        "-    if [ $? -eq 0 ] ; then",
                                        "-        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then",
                                        "-            MAX_FD=\"$MAX_FD_LIMIT\"",
                                        "-        fi",
                                        "-        ulimit -n $MAX_FD",
                                        "-        if [ $? -ne 0 ] ; then",
                                        "-            warn \"Could not set maximum file descriptor limit: $MAX_FD\"",
                                        "-        fi",
                                        "-    else",
                                        "-        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"",
                                        "-    fi",
                                        "-fi",
                                        "-",
                                        "-# For Darwin, add options to specify how the application appears in the dock",
                                        "-if $darwin; then",
                                        "-    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"",
                                        "-fi",
                                        "-",
                                        "-# For Cygwin, switch paths to Windows format before running java",
                                        "-if $cygwin ; then",
                                        "-    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`",
                                        "-    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`",
                                        "-",
                                        "-    # We build the pattern for arguments to be converted via cygpath",
                                        "-    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`",
                                        "-    SEP=\"\"",
                                        "-    for dir in $ROOTDIRSRAW ; do",
                                        "-        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"",
                                        "-        SEP=\"|\"",
                                        "-    done",
                                        "-    OURCYGPATTERN=\"(^($ROOTDIRS))\"",
                                        "-    # Add a user-defined pattern to the cygpath arguments",
                                        "-    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then",
                                        "-        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"",
                                        "-    fi",
                                        "-    # Now convert the arguments - kludge to limit ourselves to /bin/sh",
                                        "-    i=0",
                                        "-    for arg in \"$@\" ; do",
                                        "-        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`",
                                        "-        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option",
                                        "-",
                                        "-        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition",
                                        "-            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`",
                                        "-        else",
                                        "-            eval `echo args$i`=\"\\\"$arg\\\"\"",
                                        "-        fi",
                                        "-        i=$((i+1))",
                                        "-    done",
                                        "-    case $i in",
                                        "-        (0) set -- ;;",
                                        "-        (1) set -- \"$args0\" ;;",
                                        "-        (2) set -- \"$args0\" \"$args1\" ;;",
                                        "-        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;",
                                        "-        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;",
                                        "-        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;",
                                        "-        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;",
                                        "-        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;",
                                        "-        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;",
                                        "-        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;",
                                        "-    esac",
                                        "-fi",
                                        "-",
                                        "-# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules",
                                        "-function splitJvmOpts() {",
                                        "-    JVM_OPTS=(\"$@\")",
                                        "-}",
                                        "-eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS",
                                        "-JVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"",
                                        "-",
                                        "-exec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "gradlew.bat",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "-@if \"%DEBUG%\" == \"\" @echo off",
                                        "-@rem ##########################################################################",
                                        "-@rem",
                                        "-@rem  Gradle startup script for Windows",
                                        "-@rem",
                                        "-@rem ##########################################################################",
                                        "-",
                                        "-@rem Set local scope for the variables with windows NT shell",
                                        "-if \"%OS%\"==\"Windows_NT\" setlocal",
                                        "-",
                                        "-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.",
                                        "-set DEFAULT_JVM_OPTS=",
                                        "-",
                                        "-set DIRNAME=%~dp0",
                                        "-if \"%DIRNAME%\" == \"\" set DIRNAME=.",
                                        "-set APP_BASE_NAME=%~n0",
                                        "-set APP_HOME=%DIRNAME%",
                                        "-",
                                        "-@rem Find java.exe",
                                        "-if defined JAVA_HOME goto findJavaFromJavaHome",
                                        "-",
                                        "-set JAVA_EXE=java.exe",
                                        "-%JAVA_EXE% -version >NUL 2>&1",
                                        "-if \"%ERRORLEVEL%\" == \"0\" goto init",
                                        "-",
                                        "-echo.",
                                        "-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.",
                                        "-echo.",
                                        "-echo Please set the JAVA_HOME variable in your environment to match the",
                                        "-echo location of your Java installation.",
                                        "-",
                                        "-goto fail",
                                        "-",
                                        "-:findJavaFromJavaHome",
                                        "-set JAVA_HOME=%JAVA_HOME:\"=%",
                                        "-set JAVA_EXE=%JAVA_HOME%/bin/java.exe",
                                        "-",
                                        "-if exist \"%JAVA_EXE%\" goto init",
                                        "-",
                                        "-echo.",
                                        "-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%",
                                        "-echo.",
                                        "-echo Please set the JAVA_HOME variable in your environment to match the",
                                        "-echo location of your Java installation.",
                                        "-",
                                        "-goto fail",
                                        "-",
                                        "-:init",
                                        "-@rem Get command-line arguments, handling Windowz variants",
                                        "-",
                                        "-if not \"%OS%\" == \"Windows_NT\" goto win9xME_args",
                                        "-if \"%@eval[2+2]\" == \"4\" goto 4NT_args",
                                        "-",
                                        "-:win9xME_args",
                                        "-@rem Slurp the command line arguments.",
                                        "-set CMD_LINE_ARGS=",
                                        "-set _SKIP=2",
                                        "-",
                                        "-:win9xME_args_slurp",
                                        "-if \"x%~1\" == \"x\" goto execute",
                                        "-",
                                        "-set CMD_LINE_ARGS=%*",
                                        "-goto execute",
                                        "-",
                                        "-:4NT_args",
                                        "-@rem Get arguments from the 4NT Shell from JP Software",
                                        "-set CMD_LINE_ARGS=%$",
                                        "-",
                                        "-:execute",
                                        "-@rem Setup the command line",
                                        "-",
                                        "-set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar",
                                        "-",
                                        "-@rem Execute Gradle",
                                        "-\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%",
                                        "-",
                                        "-:end",
                                        "-@rem End local scope for the variables with windows NT shell",
                                        "-if \"%ERRORLEVEL%\"==\"0\" goto mainEnd",
                                        "-",
                                        "-:fail",
                                        "-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of",
                                        "-rem the _cmd.exe /c_ return code!",
                                        "-if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1",
                                        "-exit /b 1",
                                        "-",
                                        "-:mainEnd",
                                        "-if \"%OS%\"==\"Windows_NT\" endlocal",
                                        "-",
                                        "-:omega",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/java/com/example/google/lint/MainActivityDetector.java",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "-/*",
                                        "- * Copyright (C) 2015 The Android Open Source Project",
                                        "- *",
                                        "- * Licensed under the Apache License, Version 2.0 (the \"License\");",
                                        "- * you may not use this file except in compliance with the License.",
                                        "- * You may obtain a copy of the License at",
                                        "- *",
                                        "- *      http://www.apache.org/licenses/LICENSE-2.0",
                                        "- *",
                                        "- * Unless required by applicable law or agreed to in writing, software",
                                        "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                                        "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                                        "- * See the License for the specific language governing permissions and",
                                        "- * limitations under the License.",
                                        "- */",
                                        "-",
                                        "-package com.example.google.lint;",
                                        "-",
                                        "-import com.android.annotations.NonNull;",
                                        "-import com.android.tools.lint.detector.api.Category;",
                                        "-import com.android.tools.lint.detector.api.Context;",
                                        "-import com.android.tools.lint.detector.api.Detector;",
                                        "-import com.android.tools.lint.detector.api.Implementation;",
                                        "-import com.android.tools.lint.detector.api.Issue;",
                                        "-import com.android.tools.lint.detector.api.LintUtils;",
                                        "-import com.android.tools.lint.detector.api.Location;",
                                        "-import com.android.tools.lint.detector.api.ResourceXmlDetector;",
                                        "-import com.android.tools.lint.detector.api.Scope;",
                                        "-import com.android.tools.lint.detector.api.Severity;",
                                        "-import com.android.tools.lint.detector.api.XmlContext;",
                                        "-import org.w3c.dom.Element;",
                                        "-import org.w3c.dom.Node;",
                                        "-",
                                        "-import java.util.Collection;",
                                        "-import java.util.Collections;",
                                        "-",
                                        "-import static com.android.SdkConstants.ANDROID_MANIFEST_XML;",
                                        "-import static com.android.SdkConstants.ANDROID_URI;",
                                        "-import static com.android.SdkConstants.ATTR_NAME;",
                                        "-import static com.android.SdkConstants.TAG_ACTIVITY;",
                                        "-import static com.android.SdkConstants.TAG_INTENT_FILTER;",
                                        "-import static com.android.xml.AndroidManifest.NODE_ACTION;",
                                        "-import static com.android.xml.AndroidManifest.NODE_CATEGORY;",
                                        "-import static com.example.google.lint.ManifestConstants.ACTION_NAME_MAIN;",
                                        "-import static com.example.google.lint.ManifestConstants.CATEGORY_NAME_LAUNCHER;",
                                        "-",
                                        "-/**",
                                        "- * Checks for an activity with a launcher intent in <code>AndroidManifest.xml</code>.",
                                        "- * <p/>",
                                        "- * <b>NOTE: This is not a final API; if you rely on this be prepared",
                                        "- * to adjust your code for the next tools release.</b>",
                                        "- */",
                                        "-public class MainActivityDetector extends ResourceXmlDetector implements Detector.XmlScanner {",
                                        "-    public static final Issue ISSUE = Issue.create(",
                                        "-            \"MainActivityDetector\",",
                                        "-            \"Missing Launcher Activities\",",
                                        "-            \"This app should have an activity with a launcher intent.\",",
                                        "-            Category.CORRECTNESS,",
                                        "-            8,",
                                        "-            Severity.ERROR,",
                                        "-            new Implementation(",
                                        "-                    MainActivityDetector.class,",
                                        "-                    Scope.MANIFEST_SCOPE));",
                                        "-",
                                        "-    /**",
                                        "-     * This will be <code>true</code> if the current file we're checking has at least one activity.",
                                        "-     */",
                                        "-    private boolean mHasActivity;",
                                        "-    /**",
                                        "-     * This will be <code>true</code> if the file has an activity with a launcher intent.",
                                        "-     */",
                                        "-    private boolean mHasLauncherActivity;",
                                        "-    /**",
                                        "-     * The manifest file location for the main project, <code>null</code> if there is no manifest.",
                                        "-     */",
                                        "-    private Location mManifestLocation;",
                                        "-",
                                        "-    /**",
                                        "-     * No-args constructor used by the lint framework to instantiate the detector.",
                                        "-     */",
                                        "-    public MainActivityDetector() {",
                                        "-    }",
                                        "-",
                                        "-    @Override",
                                        "-    public Collection<String> getApplicableElements() {",
                                        "-        return Collections.singleton(TAG_ACTIVITY);",
                                        "-    }",
                                        "-",
                                        "-    @Override",
                                        "-    public void beforeCheckProject(@NonNull Context context) {",
                                        "-        mHasActivity = false;",
                                        "-        mHasLauncherActivity = false;",
                                        "-        mManifestLocation = null;",
                                        "-    }",
                                        "-",
                                        "-    @Override",
                                        "-    public void afterCheckProject(@NonNull Context context) {",
                                        "-        // Don't report issues on libraries that may not have a launcher activity",
                                        "-        if (context.getProject() == context.getMainProject()",
                                        "-                && !context.getMainProject().isLibrary()",
                                        "-                && mManifestLocation != null) {",
                                        "-            if (!mHasActivity) {",
                                        "-                context.report(ISSUE, mManifestLocation,",
                                        "-                        \"Expecting \" + ANDROID_MANIFEST_XML + \" to have an <\" + TAG_ACTIVITY +",
                                        "-                                \"> tag.\");",
                                        "-            } else if (!mHasLauncherActivity) {",
                                        "-                // Report the issue if the manifest file has no activity with a launcher intent.",
                                        "-                context.report(ISSUE, mManifestLocation,",
                                        "-                        \"Expecting \" + ANDROID_MANIFEST_XML +",
                                        "-                                \" to have an activity with a launcher intent.\");",
                                        "-            }",
                                        "-        }",
                                        "-    }",
                                        "-",
                                        "-    @Override",
                                        "-    public void afterCheckFile(@NonNull Context context) {",
                                        "-        // Store a reference to the manifest file in case we need to report it's location.",
                                        "-        if (context.getProject() == context.getMainProject()) {",
                                        "-            mManifestLocation = Location.create(context.file);",
                                        "-        }",
                                        "-    }",
                                        "-",
                                        "-    @Override",
                                        "-    public void visitElement(XmlContext context, Element activityElement) {",
                                        "-        // Checks every activity and reports an error if there is no activity with a launcher",
                                        "-        // intent.",
                                        "-        mHasActivity = true;",
                                        "-        if (isMainActivity(activityElement)) {",
                                        "-            mHasLauncherActivity = true;",
                                        "-        }",
                                        "-    }",
                                        "-",
                                        "-    /**",
                                        "-     * Returns true if the XML node is an activity with a launcher intent.",
                                        "-     *",
                                        "-     * @param activityNode The node to check.",
                                        "-     * @return <code>true</code> if the node is an activity with a launcher intent.",
                                        "-     */",
                                        "-    private boolean isMainActivity(Node activityNode) {",
                                        "-        if (TAG_ACTIVITY.equals(activityNode.getNodeName())) {",
                                        "-            // Loop through all <intent-filter> tags",
                                        "-            for (Element activityChild : LintUtils.getChildren(activityNode)) {",
                                        "-                if (TAG_INTENT_FILTER.equals(activityChild.getNodeName())) {",
                                        "-                    // Check for these children nodes:",
                                        "-                    //",
                                        "-                    // <category android:name=\"android.intent.category.LAUNCHER\" />",
                                        "-                    // <action android:name=\"android.intent.action.MAIN\" />",
                                        "-                    boolean hasLauncherCategory = false;",
                                        "-                    boolean hasMainAction = false;",
                                        "-",
                                        "-                    for (Element intentFilterChild : LintUtils.getChildren(activityChild)) {",
                                        "-                        // Check for category tag)",
                                        "-                        if (NODE_CATEGORY.equals(intentFilterChild.getNodeName())",
                                        "-                                && CATEGORY_NAME_LAUNCHER.equals(",
                                        "-                                intentFilterChild.getAttributeNS(ANDROID_URI, ATTR_NAME))) {",
                                        "-                            hasLauncherCategory = true;",
                                        "-                        }",
                                        "-                        // Check for action tag",
                                        "-                        if (NODE_ACTION.equals(intentFilterChild.getNodeName())",
                                        "-                                && ACTION_NAME_MAIN.equals(",
                                        "-                                intentFilterChild.getAttributeNS(ANDROID_URI, ATTR_NAME))) {",
                                        "-                            hasMainAction = true;",
                                        "-                        }",
                                        "-                    }",
                                        "-",
                                        "-                    if (hasLauncherCategory && hasMainAction) {",
                                        "-                        return true;",
                                        "-                    }",
                                        "-                }",
                                        "-            }",
                                        "-        }",
                                        "-        return false;",
                                        "-    }",
                                        "-}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/java/com/example/google/lint/ManifestConstants.java",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "-/*",
                                        "- * Copyright (C) 2015 The Android Open Source Project",
                                        "- *",
                                        "- * Licensed under the Apache License, Version 2.0 (the \"License\");",
                                        "- * you may not use this file except in compliance with the License.",
                                        "- * You may obtain a copy of the License at",
                                        "- *",
                                        "- *      http://www.apache.org/licenses/LICENSE-2.0",
                                        "- *",
                                        "- * Unless required by applicable law or agreed to in writing, software",
                                        "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                                        "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                                        "- * See the License for the specific language governing permissions and",
                                        "- * limitations under the License.",
                                        "- */",
                                        "-",
                                        "-package com.example.google.lint;",
                                        "-",
                                        "-/**",
                                        "- * Manifest Constant definition class.",
                                        "- * Amends constants not found in {@link com.android.SdkConstants}.",
                                        "- */",
                                        "-public final class ManifestConstants {",
                                        "-    public static final String CATEGORY_NAME_LAUNCHER = \"android.intent.category.LAUNCHER\";",
                                        "-    public static final String ACTION_NAME_MAIN = \"android.intent.action.MAIN\";",
                                        "-}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/main/java/com/example/google/lint/MyIssueRegistry.java",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "-/*",
                                        "- * Copyright (C) 2015 The Android Open Source Project",
                                        "- *",
                                        "- * Licensed under the Apache License, Version 2.0 (the \"License\");",
                                        "- * you may not use this file except in compliance with the License.",
                                        "- * You may obtain a copy of the License at",
                                        "- *",
                                        "- *      http://www.apache.org/licenses/LICENSE-2.0",
                                        "- *",
                                        "- * Unless required by applicable law or agreed to in writing, software",
                                        "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                                        "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                                        "- * See the License for the specific language governing permissions and",
                                        "- * limitations under the License.",
                                        "- */",
                                        "-",
                                        "-package com.example.google.lint;",
                                        "-",
                                        "-import com.android.tools.lint.client.api.IssueRegistry;",
                                        "-import com.android.tools.lint.detector.api.Issue;",
                                        "-",
                                        "-import java.util.Collections;",
                                        "-import java.util.List;",
                                        "-",
                                        "-/**",
                                        "- * The list of issues that will be checked when running <code>lint</code>.",
                                        "- */",
                                        "-@SuppressWarnings(\"unused\")",
                                        "-public class MyIssueRegistry extends IssueRegistry {",
                                        "-    @Override",
                                        "-    public List<Issue> getIssues() {",
                                        "-        return Collections.singletonList(MainActivityDetector.ISSUE);",
                                        "-    }",
                                        "-}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/test/java/com/example/google/lint/MainActivityDetectorTest.java",
                            "content": {
                                "current": "File was renamed in this commit",
                                "diffs": [
                                    [
                                        "-/*",
                                        "- * Copyright (C) 2015 The Android Open Source Project",
                                        "- *",
                                        "- * Licensed under the Apache License, Version 2.0 (the \"License\");",
                                        "- * you may not use this file except in compliance with the License.",
                                        "- * You may obtain a copy of the License at",
                                        "- *",
                                        "- *      http://www.apache.org/licenses/LICENSE-2.0",
                                        "- *",
                                        "- * Unless required by applicable law or agreed to in writing, software",
                                        "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                                        "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                                        "- * See the License for the specific language governing permissions and",
                                        "- * limitations under the License.",
                                        "- */",
                                        "-",
                                        "-package com.example.google.lint;",
                                        "-",
                                        "-import com.android.tools.lint.checks.infrastructure.LintDetectorTest;",
                                        "-import com.android.tools.lint.detector.api.Detector;",
                                        "-import com.android.tools.lint.detector.api.Issue;",
                                        "-",
                                        "-import java.util.Collections;",
                                        "-import java.util.List;",
                                        "-",
                                        "-import static com.android.SdkConstants.FN_ANDROID_MANIFEST_XML;",
                                        "-",
                                        "-/**",
                                        "- * <b>NOTE: This is not a final API; if you rely on this be prepared",
                                        "- * to adjust your code for the next tools release.</b>",
                                        "- */",
                                        "-public class MainActivityDetectorTest extends LintDetectorTest {",
                                        "-    @Override",
                                        "-    protected Detector getDetector() {",
                                        "-        return new MainActivityDetector();",
                                        "-    }",
                                        "-",
                                        "-    @Override",
                                        "-    protected List<Issue> getIssues() {",
                                        "-        return Collections.singletonList(MainActivityDetector.ISSUE);",
                                        "-    }",
                                        "-",
                                        "-    /**",
                                        "-     * Test that a manifest with an activity with a launcher intent has no warnings.",
                                        "-     */",
                                        "-    public void testHasMainActivity() {",
                                        "-        lint().files(",
                                        "-                xml(FN_ANDROID_MANIFEST_XML, \"\" +",
                                        "-                        \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +",
                                        "-                        \"<manifest package=\\\"com.example.android.custom-lint-rules\\\"\\n\" +",
                                        "-                        \"          xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\">\\n\" +",
                                        "-                        \"    <application>\\n\" +",
                                        "-                        \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +",
                                        "-                        \".OtherActivity\\\">\\n\" +",
                                        "-                        \"        </activity>\\n\" +",
                                        "-                        \"\\n\" +",
                                        "-                        \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +",
                                        "-                        \".MainActivity\\\">\\n\" +",
                                        "-                        \"            <intent-filter>\\n\" +",
                                        "-                        \"                <action android:name=\\\"android.intent.action.MAIN\\\"/>\\n\" +",
                                        "-                        \"                <category android:name=\\\"android.intent.category.LAUNCHER\\\"/>\\n\" +",
                                        "-                        \"            </intent-filter>\\n\" +",
                                        "-                        \"        </activity>\\n\" +",
                                        "-                        \"    </application>\\n\" +",
                                        "-                        \"</manifest>\"))",
                                        "-                .run()",
                                        "-                .expectClean();",
                                        "-    }",
                                        "-",
                                        "-    /**",
                                        "-     * Test that a manifest <em>without</em> an activity with a launcher intent reports an error.",
                                        "-     */",
                                        "-    public void testMissingMainActivity() {",
                                        "-        String expected = \"AndroidManifest.xml: Error: Expecting AndroidManifest.xml to have an \" +",
                                        "-                \"activity with a launcher intent. [MainActivityDetector]\\n\" +",
                                        "-                \"1 errors, 0 warnings\\n\";",
                                        "-        lint().files(",
                                        "-                xml(FN_ANDROID_MANIFEST_XML, \"\" +",
                                        "-                        \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +",
                                        "-                        \"<manifest package=\\\"com.example.android.custom-lint-rules\\\"\\n\" +",
                                        "-                        \"          xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\">\\n\" +",
                                        "-                        \"    <application>\\n\" +",
                                        "-                        \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +",
                                        "-                        \".Activity1\\\">\\n\" +",
                                        "-                        \"            <intent-filter>\\n\" +",
                                        "-                        \"                <action android:name=\\\"android.intent.action.VIEW\\\" />\\n\" +",
                                        "-                        \"\\n\" +",
                                        "-                        \"                <category android:name=\\\"android.intent.category.HOME\\\" />\\n\" +",
                                        "-                        \"                <category android:name=\\\"android.intent.category.LAUNCHER\\\" />\\n\" +",
                                        "-                        \"                <category android:name=\\\"android.intent.category.DEFAULT\\\" />\\n\" +",
                                        "-                        \"                <category android:name=\\\"android.intent.category.BROWSABLE\\\" \" +",
                                        "-                        \"/>\\n\" +",
                                        "-                        \"            </intent-filter>\\n\" +",
                                        "-                        \"        </activity>\\n\" +",
                                        "-                        \"\\n\" +",
                                        "-                        \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +",
                                        "-                        \".Activity2\\\">\\n\" +",
                                        "-                        \"        </activity>\\n\" +",
                                        "-                        \"\\n\" +",
                                        "-                        \"        <activity android:name=\\\"com.example.android.custom-lint-rules\" +",
                                        "-                        \".Activity3\\\">\\n\" +",
                                        "-                        \"            <intent-filter>\\n\" +",
                                        "-                        \"                <action android:name=\\\"android.intent.action.SEND\\\"/>\\n\" +",
                                        "-                        \"                <category android:name=\\\"android.intent.category.DEFAULT\\\"/>\\n\" +",
                                        "-                        \"                <data android:mimeType=\\\"text/plain\\\"/>\\n\" +",
                                        "-                        \"            </intent-filter>\\n\" +",
                                        "-                        \"        </activity>\\n\" +",
                                        "-                        \"    </application>\\n\" +",
                                        "-                        \"</manifest>\"))",
                                        "-                .run()",
                                        "-                .expect(expected);",
                                        "-    }",
                                        "-",
                                        "-    /**",
                                        "-     * Test that a manifest without an <code>&lt;application&gt;</code> tag reports an error.",
                                        "-     */",
                                        "-    public void testMissingApplication() {",
                                        "-        String expected = \"AndroidManifest.xml: Error: Expecting AndroidManifest.xml to have an \" +",
                                        "-                \"<activity> tag. [MainActivityDetector]\\n\" +",
                                        "-                \"1 errors, 0 warnings\\n\";",
                                        "-        lint().files(",
                                        "-                xml(FN_ANDROID_MANIFEST_XML, \"\" +",
                                        "-                        \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +",
                                        "-                        \"<manifest package=\\\"com.example.android.custom-lint-rules\\\"\\n\" +",
                                        "-                        \"          xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\">\\n\" +",
                                        "-                        \"</manifest>\"))",
                                        "-                .run()",
                                        "-                .expect(expected);",
                                        "-    }",
                                        "-}",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "ed5fc41bf6f040e56c4b4c729c9e575f89c2b3ff",
                    "link": "https://github.com/googlesamples/android-custom-lint-rules/commit/ed5fc41bf6f040e56c4b4c729c9e575f89c2b3ff",
                    "files": [
                        {
                            "name": "app/build.gradle",
                            "content": {
                                "current": "File was deleted in this commit",
                                "diffs": [
                                    [
                                        "-plugins {",
                                        "-    id 'com.android.application'",
                                        "-    id 'kotlin-android'",
                                        "-}",
                                        "-",
                                        "-android {",
                                        "-    compileSdkVersion 33",
                                        "-",
                                        "-    defaultConfig {",
                                        "-        applicationId \"com.android.example.lint_usage\"",
                                        "-        minSdkVersion 21",
                                        "-        targetSdkVersion 33",
                                        "-        versionCode 1",
                                        "-        versionName \"1.0\"",
                                        "-    }",
                                        "-",
                                        "-    compileOptions {",
                                        "-        sourceCompatibility JavaVersion.VERSION_17",
                                        "-        targetCompatibility JavaVersion.VERSION_17",
                                        "-    }",
                                        "-    kotlinOptions {",
                                        "-        jvmTarget = '17'",
                                        "-    }",
                                        "-    namespace 'com.android.example'",
                                        "-    lint {",
                                        "-        checkDependencies true",
                                        "-        // Produce report for CI:",
                                        "-        // https://docs.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/sarif-support-for-code-scanning",
                                        "-        sarifOutput file('../lint-results.sarif')",
                                        "-        textReport true",
                                        "-    }",
                                        "-}",
                                        "-",
                                        "-dependencies {",
                                        "-    implementation project(':library')",
                                        "-}",
                                        "-",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "app/build.gradle.kts",
                            "content": {
                                "current": "plugins {\n    alias(libs.plugins.android.application)\n    alias(libs.plugins.kotlin.android)\n}\n\nandroid {\n    namespace = \"com.android.example\"\n    compileSdk = 34\n\n    defaultConfig {\n        applicationId = \"com.android.example.lint_usage\"\n        minSdk = 21\n        targetSdk = 34\n        versionCode = 1\n        versionName = \"1.0\"\n    }\n\n    compileOptions {\n        sourceCompatibility = JavaVersion.VERSION_17\n        targetCompatibility = JavaVersion.VERSION_17\n    }\n    lint {\n        checkDependencies = true\n        // Produce report for CI:\n        // https://docs.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/sarif-support-for-code-scanning\n        sarifOutput = file(\"../lint-results.sarif\")\n        textReport = true\n    }\n}\n\ndependencies {\n    implementation(project(\":library\"))\n}",
                                "diffs": [
                                    [
                                        "+plugins {",
                                        "+    alias(libs.plugins.android.application)",
                                        "+    alias(libs.plugins.kotlin.android)",
                                        "+}",
                                        "+",
                                        "+android {",
                                        "+    namespace = \"com.android.example\"",
                                        "+    compileSdk = 34",
                                        "+",
                                        "+    defaultConfig {",
                                        "+        applicationId = \"com.android.example.lint_usage\"",
                                        "+        minSdk = 21",
                                        "+        targetSdk = 34",
                                        "+        versionCode = 1",
                                        "+        versionName = \"1.0\"",
                                        "+    }",
                                        "+",
                                        "+    compileOptions {",
                                        "+        sourceCompatibility = JavaVersion.VERSION_17",
                                        "+        targetCompatibility = JavaVersion.VERSION_17",
                                        "+    }",
                                        "+    lint {",
                                        "+        checkDependencies = true",
                                        "+        // Produce report for CI:",
                                        "+        // https://docs.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/sarif-support-for-code-scanning",
                                        "+        sarifOutput = file(\"../lint-results.sarif\")",
                                        "+        textReport = true",
                                        "+    }",
                                        "+}",
                                        "+",
                                        "+dependencies {",
                                        "+    implementation(project(\":library\"))",
                                        "+}",
                                        "\\ No newline at end of file",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "build.gradle",
                            "content": {
                                "current": "File was deleted in this commit",
                                "diffs": [
                                    [
                                        "-buildscript {",
                                        "-    ext {",
                                        "-        kotlinVersion = '1.8.20'",
                                        "-        // Current release: Flamingo / AGP 8.0",
                                        "-        gradlePluginVersion = '8.0.2'",
                                        "-        lintVersion = '31.0.2'",
                                        "-        // Current preview release: Hedgehog",
                                        "-        //gradlePluginVersion = '8.2.0-alpha07'",
                                        "-        //lintVersion = '31.2.0-alpha07'",
                                        "-    }",
                                        "-",
                                        "-    repositories {",
                                        "-        google()",
                                        "-        mavenCentral()",
                                        "-    }",
                                        "-    dependencies {",
                                        "-        classpath \"com.android.tools.build:gradle:$gradlePluginVersion\"",
                                        "-        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion\"",
                                        "-    }",
                                        "-}",
                                        "-",
                                        "-allprojects {",
                                        "-    repositories {",
                                        "-        google()",
                                        "-        mavenCentral()",
                                        "-    }",
                                        "-}",
                                        "-",
                                        "-task clean(type: Delete) {",
                                        "-    delete rootProject.buildDir",
                                        "-}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "build.gradle.kts",
                            "content": {
                                "current": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\nplugins {\n    alias(libs.plugins.kotlin.jvm) apply false\n    alias(libs.plugins.kotlin.android) apply false\n    alias(libs.plugins.android.application) apply false\n    alias(libs.plugins.android.library) apply false\n    alias(libs.plugins.android.lint) apply false\n}\n",
                                "diffs": [
                                    [
                                        "+// Top-level build file where you can add configuration options common to all sub-projects/modules.",
                                        "+plugins {",
                                        "+    alias(libs.plugins.kotlin.jvm) apply false",
                                        "+    alias(libs.plugins.kotlin.android) apply false",
                                        "+    alias(libs.plugins.android.application) apply false",
                                        "+    alias(libs.plugins.android.library) apply false",
                                        "+    alias(libs.plugins.android.lint) apply false",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "checks/app",
                            "content": {
                                "current": "plugins {\n    alias(libs.plugins.androidApplication)\n    alias(libs.plugins.kotlinAndroid)\n}\n\nandroid {\n    namespace = \"com.android.example.lint_usage\"\n    compileSdk = 34\n\n    defaultConfig {\n        applicationId = \"com.android.example.lint_usage\"\n        minSdk = 21\n        targetSdk = 34\n        versionCode = 1\n        versionName = \"1.0\"\n    }\n\n    compileOptions {\n        sourceCompatibility = JavaVersion.VERSION_1_8\n        targetCompatibility = JavaVersion.VERSION_1_8\n    }\n    kotlinOptions {\n        jvmTarget = \"1.8\"\n    }\n    buildFeatures {\n        compose = true\n    }\n    composeOptions {\n        kotlinCompilerExtensionVersion = \"1.5.1\"\n    }\n}\n\ndependencies {\n\n    implementation(libs.core.ktx)\n    implementation(libs.lifecycle.runtime.ktx)\n    implementation(libs.activity.compose)\n    implementation(platform(libs.compose.bom))\n    implementation(libs.ui)\n    implementation(libs.ui.graphics)\n    implementation(libs.ui.tooling.preview)\n    implementation(libs.material3)\n    implementation(project(\":library\"))\n    testImplementation(libs.junit)\n    androidTestImplementation(libs.androidx.test.ext.junit)\n    androidTestImplementation(libs.espresso.core)\n    androidTestImplementation(platform(libs.compose.bom))\n    androidTestImplementation(libs.ui.test.junit4)\n    debugImplementation(libs.ui.tooling)\n    debugImplementation(libs.ui.test.manifest)\n}",
                                "diffs": [
                                    [
                                        "+plugins {",
                                        "+    alias(libs.plugins.androidApplication)",
                                        "+    alias(libs.plugins.kotlinAndroid)",
                                        "+}",
                                        "+",
                                        "+android {",
                                        "+    namespace = \"com.android.example.lint_usage\"",
                                        "+    compileSdk = 34",
                                        "+",
                                        "+    defaultConfig {",
                                        "+        applicationId = \"com.android.example.lint_usage\"",
                                        "+        minSdk = 21",
                                        "+        targetSdk = 34",
                                        "+        versionCode = 1",
                                        "+        versionName = \"1.0\"",
                                        "+    }",
                                        "+",
                                        "+    compileOptions {",
                                        "+        sourceCompatibility = JavaVersion.VERSION_1_8",
                                        "+        targetCompatibility = JavaVersion.VERSION_1_8",
                                        "+    }",
                                        "+    kotlinOptions {",
                                        "+        jvmTarget = \"1.8\"",
                                        "+    }",
                                        "+    buildFeatures {",
                                        "+        compose = true",
                                        "+    }",
                                        "+    composeOptions {",
                                        "+        kotlinCompilerExtensionVersion = \"1.5.1\"",
                                        "+    }",
                                        "+}",
                                        "+",
                                        "+dependencies {",
                                        "+",
                                        "+    implementation(libs.core.ktx)",
                                        "+    implementation(libs.lifecycle.runtime.ktx)",
                                        "+    implementation(libs.activity.compose)",
                                        "+    implementation(platform(libs.compose.bom))",
                                        "+    implementation(libs.ui)",
                                        "+    implementation(libs.ui.graphics)",
                                        "+    implementation(libs.ui.tooling.preview)",
                                        "+    implementation(libs.material3)",
                                        "+    implementation(project(\":library\"))",
                                        "+    testImplementation(libs.junit)",
                                        "+    androidTestImplementation(libs.androidx.test.ext.junit)",
                                        "+    androidTestImplementation(libs.espresso.core)",
                                        "+    androidTestImplementation(platform(libs.compose.bom))",
                                        "+    androidTestImplementation(libs.ui.test.junit4)",
                                        "+    debugImplementation(libs.ui.tooling)",
                                        "+    debugImplementation(libs.ui.test.manifest)",
                                        "+}",
                                        "\\ No newline at end of file",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "checks/build.gradle",
                            "content": {
                                "current": "File was deleted in this commit",
                                "diffs": [
                                    [
                                        "-apply plugin: 'java-library'",
                                        "-apply plugin: 'kotlin'",
                                        "-apply plugin: 'com.android.lint'",
                                        "-",
                                        "-lintOptions {",
                                        "-    htmlReport true",
                                        "-    htmlOutput file(\"lint-report.html\")",
                                        "-    textReport true",
                                        "-    absolutePaths false",
                                        "-    ignoreTestSources true",
                                        "-}",
                                        "-",
                                        "-dependencies {",
                                        "-    // For a description of the below dependencies, see the main project README",
                                        "-    compileOnly \"com.android.tools.lint:lint-api:$lintVersion\"",
                                        "-    // You typically don't need this one:",
                                        "-    compileOnly \"com.android.tools.lint:lint-checks:$lintVersion\"",
                                        "-    compileOnly \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion\"",
                                        "-",
                                        "-    testImplementation \"junit:junit:4.13.2\"",
                                        "-    testImplementation \"com.android.tools.lint:lint:$lintVersion\"",
                                        "-    testImplementation \"com.android.tools.lint:lint-tests:$lintVersion\"",
                                        "-}",
                                        "-",
                                        "-sourceCompatibility = \"17\"",
                                        "-targetCompatibility = \"17\"",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "checks/build.gradle.kts",
                            "content": {
                                "current": "plugins {\n    id(\"java-library\")\n    alias(libs.plugins.kotlin.jvm)\n    alias(libs.plugins.android.lint)\n}\n\njava {\n    sourceCompatibility = JavaVersion.VERSION_17\n    targetCompatibility = JavaVersion.VERSION_17\n}\n\nlint {\n    htmlReport = true\n    htmlOutput = file(\"lint-report.html\")\n    textReport = true\n    absolutePaths = false\n    ignoreTestSources = true\n}\n\ndependencies {\n    // For a description of the below dependencies, see the main project README\n    compileOnly(libs.bundles.lint.api)\n    testImplementation(libs.bundles.lint.tests)\n}\n",
                                "diffs": [
                                    [
                                        "+plugins {",
                                        "+    id(\"java-library\")",
                                        "+    alias(libs.plugins.kotlin.jvm)",
                                        "+    alias(libs.plugins.android.lint)",
                                        "+}",
                                        "+",
                                        "+java {",
                                        "+    sourceCompatibility = JavaVersion.VERSION_17",
                                        "+    targetCompatibility = JavaVersion.VERSION_17",
                                        "+}",
                                        "+",
                                        "+lint {",
                                        "+    htmlReport = true",
                                        "+    htmlOutput = file(\"lint-report.html\")",
                                        "+    textReport = true",
                                        "+    absolutePaths = false",
                                        "+    ignoreTestSources = true",
                                        "+}",
                                        "+",
                                        "+dependencies {",
                                        "+    // For a description of the below dependencies, see the main project README",
                                        "+    compileOnly(libs.bundles.lint.api)",
                                        "+    testImplementation(libs.bundles.lint.tests)",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "gradle/libs.versions.toml",
                            "content": {
                                "current": "[versions]\nagp = '8.1.2'\nlint = '31.1.2' # = agp + 23.0.0\nkotlin = '1.9.10'\njunit = '4.13.2'\n\n\n[libraries]\n# For a description of the below dependencies, see the main project README\nlint-api = { group = \"com.android.tools.lint\", name = \"lint-api\", version.ref = \"lint\" }\nlint-checks = { group = \"com.android.tools.lint\", name = \"lint-checks\", version.ref = \"lint\" }\nlint-cli = { group = \"com.android.tools.lint\", name = \"lint\", version.ref = \"lint\" }\nlint-tests = { group = \"com.android.tools.lint\", name = \"lint-tests\", version.ref = \"lint\" }\njunit = { group = \"junit\", name = \"junit\", version.ref  = \"junit\" }\nkotlin-stdlib = { group = \"org.jetbrains.kotlin\", name = \"kotlin-stdlib\", version.ref = \"kotlin\" }\n\n[bundles]\nlint-api = [\n    \"kotlin-stdlib\",\n    \"lint-api\",\n    # You typically don't need this one, but it does have some utilities\n    # like the API database that some lint checks may want to use\n    #\"lint-checks\",\n]\nlint-tests = [\n    \"junit\",\n    \"lint-cli\",\n    \"lint-tests\"\n]\n\n[plugins]\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\nandroid-library = { id = \"com.android.library\", version.ref = \"agp\" }\nandroid-lint = { id = \"com.android.lint\", version.ref = \"agp\" }\nkotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\nkotlin-jvm = { id = \"org.jetbrains.kotlin.jvm\", version.ref = \"kotlin\" }\n\n",
                                "diffs": [
                                    [
                                        "+[versions]",
                                        "+agp = '8.1.2'",
                                        "+lint = '31.1.2' # = agp + 23.0.0",
                                        "+kotlin = '1.9.10'",
                                        "+junit = '4.13.2'",
                                        "+",
                                        "+",
                                        "+[libraries]",
                                        "+# For a description of the below dependencies, see the main project README",
                                        "+lint-api = { group = \"com.android.tools.lint\", name = \"lint-api\", version.ref = \"lint\" }",
                                        "+lint-checks = { group = \"com.android.tools.lint\", name = \"lint-checks\", version.ref = \"lint\" }",
                                        "+lint-cli = { group = \"com.android.tools.lint\", name = \"lint\", version.ref = \"lint\" }",
                                        "+lint-tests = { group = \"com.android.tools.lint\", name = \"lint-tests\", version.ref = \"lint\" }",
                                        "+junit = { group = \"junit\", name = \"junit\", version.ref  = \"junit\" }",
                                        "+kotlin-stdlib = { group = \"org.jetbrains.kotlin\", name = \"kotlin-stdlib\", version.ref = \"kotlin\" }",
                                        "+",
                                        "+[bundles]",
                                        "+lint-api = [",
                                        "+    \"kotlin-stdlib\",",
                                        "+    \"lint-api\",",
                                        "+    # You typically don't need this one, but it does have some utilities",
                                        "+    # like the API database that some lint checks may want to use",
                                        "+    #\"lint-checks\",",
                                        "+]",
                                        "+lint-tests = [",
                                        "+    \"junit\",",
                                        "+    \"lint-cli\",",
                                        "+    \"lint-tests\"",
                                        "+]",
                                        "+",
                                        "+[plugins]",
                                        "+android-application = { id = \"com.android.application\", version.ref = \"agp\" }",
                                        "+android-library = { id = \"com.android.library\", version.ref = \"agp\" }",
                                        "+android-lint = { id = \"com.android.lint\", version.ref = \"agp\" }",
                                        "+kotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }",
                                        "+kotlin-jvm = { id = \"org.jetbrains.kotlin.jvm\", version.ref = \"kotlin\" }",
                                        "+",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "library/build.gradle",
                            "content": {
                                "current": "File was deleted in this commit",
                                "diffs": [
                                    [
                                        "-apply plugin: 'com.android.library'",
                                        "-",
                                        "-android {",
                                        "-    compileSdkVersion 33",
                                        "-    defaultConfig {",
                                        "-        minSdkVersion 19",
                                        "-        targetSdkVersion 33",
                                        "-    }",
                                        "-    compileOptions {",
                                        "-        sourceCompatibility JavaVersion.VERSION_17",
                                        "-        targetCompatibility JavaVersion.VERSION_17",
                                        "-    }",
                                        "-    namespace 'com.example.lint.library'",
                                        "-    lint {",
                                        "-        checkDependencies true",
                                        "-    }",
                                        "-}",
                                        "-",
                                        "-/** Package the given lint checks library into this AAR  */",
                                        "-dependencies {",
                                        "-    implementation project(':checks')",
                                        "-    lintPublish project(':checks')",
                                        "-}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "library/build.gradle.kts",
                            "content": {
                                "current": "plugins {\n    alias(libs.plugins.android.library)\n    alias(libs.plugins.kotlin.android)\n}\n\nandroid {\n    namespace = \"com.example.lint.library\"\n    compileSdk = 34\n\n    defaultConfig {\n        minSdk = 19\n    }\n\n    compileOptions {\n        sourceCompatibility = JavaVersion.VERSION_17\n        targetCompatibility = JavaVersion.VERSION_17\n    }\n    lint {\n        checkDependencies = true\n    }\n}\n\ndependencies {\n    implementation(project(\":checks\"))\n    lintPublish(project(\":checks\"))\n}",
                                "diffs": [
                                    [
                                        "+plugins {",
                                        "+    alias(libs.plugins.android.library)",
                                        "+    alias(libs.plugins.kotlin.android)",
                                        "+}",
                                        "+",
                                        "+android {",
                                        "+    namespace = \"com.example.lint.library\"",
                                        "+    compileSdk = 34",
                                        "+",
                                        "+    defaultConfig {",
                                        "+        minSdk = 19",
                                        "+    }",
                                        "+",
                                        "+    compileOptions {",
                                        "+        sourceCompatibility = JavaVersion.VERSION_17",
                                        "+        targetCompatibility = JavaVersion.VERSION_17",
                                        "+    }",
                                        "+    lint {",
                                        "+        checkDependencies = true",
                                        "+    }",
                                        "+}",
                                        "+",
                                        "+dependencies {",
                                        "+    implementation(project(\":checks\"))",
                                        "+    lintPublish(project(\":checks\"))",
                                        "+}",
                                        "\\ No newline at end of file",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "settings.gradle.kts",
                            "content": {
                                "current": "@file:Suppress(\"UnstableApiUsage\")\n\npluginManagement {\n    repositories {\n        google {\n            content {\n                includeGroupByRegex(\"com\\\\.android.*\")\n                includeGroupByRegex(\"com\\\\.google.*\")\n                includeGroupByRegex(\"androidx.*\")\n            }\n        }\n        mavenCentral()\n        gradlePluginPortal()\n    }\n}\ndependencyResolutionManagement {\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n        google()\n        mavenCentral()\n    }\n}\n\ninclude(\":app\")\ninclude(\":checks\")\ninclude(\":library\")\n",
                                "diffs": [
                                    [
                                        "+@file:Suppress(\"UnstableApiUsage\")",
                                        "+",
                                        "+pluginManagement {",
                                        "+    repositories {",
                                        "+        google {",
                                        "+            content {",
                                        "+                includeGroupByRegex(\"com\\\\.android.*\")",
                                        "+                includeGroupByRegex(\"com\\\\.google.*\")",
                                        "+                includeGroupByRegex(\"androidx.*\")",
                                        "+            }",
                                        "+        }",
                                        "+        mavenCentral()",
                                        "+        gradlePluginPortal()",
                                        "+    }",
                                        "+}",
                                        "+dependencyResolutionManagement {",
                                        "+    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)",
                                        "+    repositories {",
                                        "+        google()",
                                        "+        mavenCentral()",
                                        "+    }",
                                        "+}",
                                        "+",
                                        "+include(\":app\")",
                                        "+include(\":checks\")",
                                        "+include(\":library\")",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "95a20e4c3fd3b61ad23c8dd8c0a2e5ccafdc0282",
                    "link": "https://github.com/googlesamples/android-custom-lint-rules/commit/95a20e4c3fd3b61ad23c8dd8c0a2e5ccafdc0282",
                    "files": [
                        {
                            "name": "README.md",
                            "content": {
                                "current": "Custom Lint Rules\n=================\n\nThe lint source code contains a lot of documentation on how to write\ncustom checks; this git repository contains a snapshot of this\ndocumentation which you can read here:\n\n* [Full API Guide](https://googlesamples.github.io/android-custom-lint-rules/api-guide.html)\n* [Other docs](https://googlesamples.github.io/android-custom-lint-rules/index.html)\n\nLint\n----\n\nThe [Android `lint` tool](http://developer.android.com/tools/help/lint.html) is a static code\nanalysis tool that checks your project source files for potential bugs and optimization\nimprovements for correctness, security, performance, usability, accessibility, and\ninternationalization. Lint comes with around 400 built-in checks, but it can be extended with \nadditional custom checks. This sample project shows how those sample checks can be built\nand packaged.\n\nNote that while Android Lint has the name \"Android\" in it, it is no longer an Android-specific\nstatic analysis tool; it's a general static analysis tool, and inside Google for example it is\nrun to analyze server-side Java and Kotlin code.\n\n**NOTE: The lint API is not a final API; if you rely on this be prepared\n to adjust your code for the next tools release.**\n\nIntroduction\n------------\n\nThe Android Lint API allows users to create custom lint checks. For example, if you are the author of\nan Android library project, and your library project has certain usage requirements, you can write\nadditional lint rules to check that your library is used correctly, and then you can distribute\nthose extra lint rules for users of the library. Similarly, you may have company-local rules you'd\nlike to enforce.\n\nThis sample demonstrates how to create a custom lint checks and corresponding tests for those rules.\n\n\n# Sample Lint Checks\n\nThis project shows how Android Studio as well as the Android Gradle plugin handles packaging of lint\nrules.\n\n## Lint Check Jar Library\n\nFirst, there's the lint check implementation itself. That's done in the\n\"checks\" project, which just applies the Gradle \"java\" or \"kotlin\" plugins, and\nthat project produces a jar. Note that the dependencies for the lint\ncheck project (other than its testing dependencies) must all be \"compileOnly\":\n\n    dependencies {\n        compileOnly \"com.android.tools.lint:lint-api:$lintVersion\"\n        compileOnly \"com.android.tools.lint:lint-checks:$lintVersion\"\n\t\t...\n\n## Lint Check AAR Library\n\nNext, there's a separate Android library project, called \"library\". This\nlibrary doesn't have any code on its own (though it could). However,\nin its build.gradle, it specifies this:\n\n    dependencies {\n        lintPublish project(':checks')\n    }\n\nThis tells the Gradle plugin to take the output from the \"checks\" project\nand package that as a \"lint.jar\" payload inside this library's AAR file.\nWhen that's done, any other projects that depends on this library will\nautomatically be using the lint checks.\n\n## App Modules\n\nNote that you don't have to go through the extra \"library indirection\"\nif you have a lint check that you only want to apply to one or more\napp modules. You can simply include the `lintChecks` dependency as shown\nabove there as well, and then lint will include these rules when analyzing\nthe project.\n\n## Lint Version\n\nThe lint version of the libraries (specified in this project as the\n`lintVersion` variable in build.gradle) should be the same version\nthat is used by the Gradle plugin.\n\nIf the Gradle plugin version is *X*.*Y*.*Z*, then the Lint library\nversion is *X+23*.*Y*.*Z*.\n\nFor example, for AGP 7.0.0-alpha08, the lint API versions are 30.0.0-alpha08.\n\nGetting Started\n---------------\n\n##### Fetch code\n\n```\ngit clone https://github.com/googlesamples/android-custom-lint-rules.git\ncd android-custom-lint-rules\n```\n\n##### Run The Sample\n\nRun the :app:lint target to have first the custom lint checks in checks/\ncompiled, then wrapped into the library, and finally run lint on a\nsample app module which has violations of the check enforced by sample\ncheck in this project:\n```\n$ ./gradlew :app:lint\n\n> Task :app:lintDebug\n\nScanning app: ...\nWrote HTML report to file:///demo/android-custom-lint-rules/app/build/reports/lint-results-debug.html\nWrote SARIF report to file:///demo/android-custom-lint-rules/app/build/reports/lint-results-debug.sarif\n\n/demo/android-custom-lint-rules/app/src/main/java/com/android/example/Test.kt:8: Warning: This code mentions lint: Congratulations [SampleId]\n    val s = \"lint\"\n             ~~~~\n\n   Explanation for issues of type \"SampleId\":\n   This check highlights string literals in code which mentions the word lint.\n   Blah blah blah.\n\n   Another paragraph here.\n\n   Vendor: Android Open Source Project\n   Contact: https://github.com/googlesamples/android-custom-lint-rules\n   Feedback: https://github.com/googlesamples/android-custom-lint-rules/issues\n\n0 errors, 1 warnings\n\nBUILD SUCCESSFUL in 1s\n```\n\n##### Lint Dependencies\n\nWhen building your own rules, you will likely want to know which dependencies you should \nbring into your own project. The below descriptions of the dependencies included within\nthis project serve to help you make that decision:\n\nSource Dependencies\n\n- **com.android.tools.lint:lint-api**: The most important one; it contains things \n  like `LintClient`, the `Detector` base class, the `Issue` class, and everything else \n  that Lint checks rely on in the Lint framework.\n- **com.android.tools.lint:lint-checks**: Contains the built-in checks that are developed \n  internally. Also contains utilities that are sometimes useful for other lint checks, \n  such as the `VersionChecks` class (which figures out whether a given UAST element is \n  known to only be called at a given API level, either by surrounding `if >= SDK-version`\n  checks or `if < SDK-version` early returns in the method).\n\nTest Dependencies\n\n- **com.android.tools.lint:lint-tests**: Contains useful utilities for writing unit tests \n  for Lint checks, including the `LintDetectorTest` base class.\n- **com.android.tools.lint:lint**: Lint checks don't need to depend on this. It's a \n  separate artifact used by tools that want to integrate lint with the command line, \n  such as the Gradle integration of lint. This is where things like terminal output, HTML \n  reporting, command line parsing etc is handled.\n\nThe APIs in all but the lint-api artifact are more likely to change incompatibly than\nthe lint-api artifact.\n\nSupport\n-------\n\n- The \"lint-dev\" Google group: https://groups.google.com/forum/#!forum/lint-dev\n- Stack Overflow: http://stackoverflow.com/questions/tagged/android\n\nIf you've found an error in this sample, please file an issue:\nhttps://github.com/googlesamples/android-custom-lint-rules/issues\n\nPatches are encouraged, and may be submitted by forking this project and\nsubmitting a pull request through GitHub.\n\nLicense\n-------\nLicensed under the Apache 2.0 license. See the LICENSE file for details.\n\nHow to make contributions?\n--------------------------\nPlease read and follow the steps in the CONTRIBUTING.md\n",
                                "diffs": [
                                    [
                                        " Wrote HTML report to file:///demo/android-custom-lint-rules/app/build/reports/lint-results-debug.html",
                                        " Wrote SARIF report to file:///demo/android-custom-lint-rules/app/build/reports/lint-results-debug.sarif",
                                        " ",
                                        "-/demo/android-custom-lint-rules/app/src/main/java/com/android/example/Test.kt:8: Warning: This code mentions lint: Congratulations [ShortUniqueId]",
                                        "+/demo/android-custom-lint-rules/app/src/main/java/com/android/example/Test.kt:8: Warning: This code mentions lint: Congratulations [SampleId]",
                                        "     val s = \"lint\"",
                                        "              ~~~~",
                                        " ",
                                        "-   Explanation for issues of type \"ShortUniqueId\":",
                                        "+   Explanation for issues of type \"SampleId\":",
                                        "    This check highlights string literals in code which mentions the word lint.",
                                        "    Blah blah blah.",
                                        " ",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "app/build.gradle",
                            "content": {
                                "current": "plugins {\n    id 'com.android.application'\n    id 'kotlin-android'\n}\n\nandroid {\n    compileSdkVersion 31\n\n    defaultConfig {\n        applicationId \"com.android.example.lint_usage\"\n        minSdkVersion 21\n        targetSdkVersion 31\n        versionCode 1\n        versionName \"1.0\"\n    }\n\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n    kotlinOptions {\n        jvmTarget = '1.8'\n    }\n    lintOptions {\n        checkDependencies true\n        textReport true\n\n        // Produce report for CI:\n        // https://docs.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/sarif-support-for-code-scanning\n        sarifOutput file(\"../lint-results.sarif\")\n    }\n}\n\ndependencies {\n    implementation project(':library')\n}\n\n",
                                "diffs": [
                                    [
                                        " }",
                                        " ",
                                        " android {",
                                        "-    compileSdkVersion 30",
                                        "+    compileSdkVersion 31",
                                        " ",
                                        "     defaultConfig {",
                                        "         applicationId \"com.android.example.lint_usage\"",
                                        "         minSdkVersion 21",
                                        "-        targetSdkVersion 30",
                                        "+        targetSdkVersion 31",
                                        "         versionCode 1",
                                        "         versionName \"1.0\"",
                                        "     }"
                                    ],
                                    [
                                        "         jvmTarget = '1.8'",
                                        "     }",
                                        "     lintOptions {",
                                        "+        checkDependencies true",
                                        "         textReport true",
                                        " ",
                                        "         // Produce report for CI:",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "build.gradle",
                            "content": {
                                "current": "buildscript {\n    ext {\n        kotlinVersion = '1.5.30'\n        // Current lint target: 7.0.2\n        gradlePluginVersion = '7.0.2'\n        lintVersion = '30.0.2'\n\n        // Upcoming lint target: Bumble Bee / AGP 7.1\n        gradlePluginVersion = '7.1.0-alpha11'\n        lintVersion = '30.1.0-alpha11'\n    }\n\n    repositories {\n        google()\n        mavenCentral()\n    }\n    dependencies {\n        classpath \"com.android.tools.build:gradle:$gradlePluginVersion\"\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion\"\n    }\n}\n\nallprojects {\n    repositories {\n        google()\n        mavenCentral()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n",
                                "diffs": [
                                    [
                                        " buildscript {",
                                        "     ext {",
                                        "-        kotlinVersion = '1.4.31'",
                                        "+        kotlinVersion = '1.5.30'",
                                        "+        // Current lint target: 7.0.2",
                                        "+        gradlePluginVersion = '7.0.2'",
                                        "+        lintVersion = '30.0.2'",
                                        " ",
                                        "-        // Current lint target: Studio 4.2 / AGP 7",
                                        "-        //gradlePluginVersion = '4.2.0-beta05'",
                                        "-        //lintVersion = '27.2.0-beta05'",
                                        "-",
                                        "-        // Upcoming lint target: Arctic Fox / AGP 7",
                                        "-        gradlePluginVersion = '7.0.0-alpha10'",
                                        "-        lintVersion = '30.0.0-alpha10' // if gradle plugin was 4.1.2, you'd use 27.1.2 here",
                                        "+        // Upcoming lint target: Bumble Bee / AGP 7.1",
                                        "+        gradlePluginVersion = '7.1.0-alpha11'",
                                        "+        lintVersion = '30.1.0-alpha11'",
                                        "     }",
                                        " ",
                                        "     repositories {",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "checks/src/main/java/com/example/lint/checks/SampleCodeDetector.kt",
                            "content": {
                                "current": "/*\n * Copyright (C) 2020 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.example.lint.checks\n\nimport com.android.tools.lint.client.api.UElementHandler\nimport com.android.tools.lint.detector.api.Category\nimport com.android.tools.lint.detector.api.Detector\nimport com.android.tools.lint.detector.api.Detector.UastScanner\nimport com.android.tools.lint.detector.api.Implementation\nimport com.android.tools.lint.detector.api.Issue\nimport com.android.tools.lint.detector.api.JavaContext\nimport com.android.tools.lint.detector.api.Scope\nimport com.android.tools.lint.detector.api.Severity\nimport org.jetbrains.uast.UElement\nimport org.jetbrains.uast.ULiteralExpression\nimport org.jetbrains.uast.evaluateString\n\n/**\n * Sample detector showing how to analyze Kotlin/Java code. This example\n * flags all string literals in the code that contain the word \"lint\".\n */\n@Suppress(\"UnstableApiUsage\")\nclass SampleCodeDetector : Detector(), UastScanner {\n    override fun getApplicableUastTypes(): List<Class<out UElement?>> {\n        return listOf(ULiteralExpression::class.java)\n    }\n\n    override fun createUastHandler(context: JavaContext): UElementHandler {\n        // Note: Visiting UAST nodes is a pretty general purpose mechanism;\n        // Lint has specialized support to do common things like \"visit every class\n        // that extends a given super class or implements a given interface\", and\n        // \"visit every call site that calls a method by a given name\" etc.\n        // Take a careful look at UastScanner and the various existing lint check\n        // implementations before doing things the \"hard way\".\n        // Also be aware of context.getJavaEvaluator() which provides a lot of\n        // utility functionality.\n        return object : UElementHandler() {\n            override fun visitLiteralExpression(node: ULiteralExpression) {\n                val string = node.evaluateString() ?: return\n                if (string.contains(\"lint\") && string.matches(Regex(\".*\\\\blint\\\\b.*\"))) {\n                    context.report(\n                        ISSUE, node, context.getLocation(node),\n                        \"This code mentions `lint`: **Congratulations**\"\n                    )\n                }\n            }\n        }\n    }\n\n    companion object {\n        /**\n         * Issue describing the problem and pointing to the detector\n         * implementation.\n         */\n        @JvmField\n        val ISSUE: Issue = Issue.create(\n            // ID: used in @SuppressLint warnings etc\n            id = \"SampleId\",\n            // Title -- shown in the IDE's preference dialog, as category headers in the\n            // Analysis results window, etc\n            briefDescription = \"Lint Mentions\",\n            // Full explanation of the issue; you can use some markdown markup such as\n            // `monospace`, *italic*, and **bold**.\n            explanation = \"\"\"\n                    This check highlights string literals in code which mentions the word `lint`. \\\n                    Blah blah blah.\n\n                    Another paragraph here.\n                    \"\"\", // no need to .trimIndent(), lint does that automatically\n            category = Category.CORRECTNESS,\n            priority = 6,\n            severity = Severity.WARNING,\n            implementation = Implementation(\n                SampleCodeDetector::class.java,\n                Scope.JAVA_FILE_SCOPE\n            )\n        )\n    }\n}\n",
                                "diffs": [
                                    [
                                        "         @JvmField",
                                        "         val ISSUE: Issue = Issue.create(",
                                        "             // ID: used in @SuppressLint warnings etc",
                                        "-            id = \"ShortUniqueId\",",
                                        "+            id = \"SampleId\",",
                                        "             // Title -- shown in the IDE's preference dialog, as category headers in the",
                                        "             // Analysis results window, etc",
                                        "             briefDescription = \"Lint Mentions\",",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "checks/src/test/java/com/example/lint/checks/SampleCodeDetectorTest.kt",
                            "content": {
                                "current": "/*\n * Copyright (C) 2017 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.example.lint.checks\n\nimport com.android.tools.lint.checks.infrastructure.TestFiles.java\nimport com.android.tools.lint.checks.infrastructure.TestLintTask.lint\nimport org.junit.Test\n\n@Suppress(\"UnstableApiUsage\")\nclass SampleCodeDetectorTest {\n    @Test\n    fun testBasic() {\n        lint().files(\n            java(\n                \"\"\"\n                    package test.pkg;\n                    public class TestClass1 {\n                        // In a comment, mentioning \"lint\" has no effect\n                        private static String s1 = \"Ignore non-word usages: linting\";\n                        private static String s2 = \"Let's say it: lint\";\n                    }\n                    \"\"\"\n            ).indented()\n        )\n            .issues(SampleCodeDetector.ISSUE)\n            .run()\n            .expect(\n                \"\"\"\n                    src/test/pkg/TestClass1.java:5: Warning: This code mentions lint: Congratulations [SampleId]\n                        private static String s2 = \"Let's say it: lint\";\n                                                   ~~~~~~~~~~~~~~~~~~~~\n                    0 errors, 1 warnings\n                    \"\"\"\n            )\n    }\n}\n",
                                "diffs": [
                                    [
                                        "             .run()",
                                        "             .expect(",
                                        "                 \"\"\"",
                                        "-                    src/test/pkg/TestClass1.java:5: Warning: This code mentions lint: Congratulations [ShortUniqueId]",
                                        "+                    src/test/pkg/TestClass1.java:5: Warning: This code mentions lint: Congratulations [SampleId]",
                                        "                         private static String s2 = \"Let's say it: lint\";",
                                        "                                                    ~~~~~~~~~~~~~~~~~~~~",
                                        "                     0 errors, 1 warnings",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "docs/README.md.html",
                            "content": {
                                "current": "Android Lint\n============\n\nAndroid Lint is a static analysis tool (which despite the name is not\nlimited to Android, and within Google for example is used to analyze\nJava and Kotlin server side code as well as Android and even desktop\nsoftware like IDEs.)\n\nLint's focus is on finding bugs (whether they are related to\ncorrectness, performance, security, internationalization, usability and\nso on); it's not a source code style checker.\n\nAvailable documentation:\n\n* [Lint Features](features.md.html)\n* [Recent Changes](changes.md.html)\n* Documents for users of lint, in the `usage` folder:\n  - [Complete Book](user-guide.md.html), containing all of the below\n    documents as chapters, suitable for offline reading\n  - [Issue documentation](https://googlesamples.github.io/android-custom-lint-rules/checks/index.md.html)\n    which lists all the available checks and provides documentation\n    for each one.\n  - [Performance Tuning Tips](usage/performance-tuning.md.html)\n  - [How to suppress incidents](usage/suppressing.md.html)\n  - [How to use baselines](usage/baselines.md.html)\n  - [How to use `lint.xml` files](usage/lintxml.md.html)\n  - [Gradle plugin DSL](usage/agp-dsl.md.html)\n  - [Using a newer version of lint than the Gradle bundled one](usage/newer-lint.md.html)\n  - [Lint command line](usage/flags.md.html)\n  - [Environment variables and properties](usage/variables.md.html)\n* Documents for authors of additional lint checks, in the\n  `api-guide` folder:\n  - [Complete Book](api-guide.md.html), containing all of the below\n    documents as chapters, suitable for offline reading\n  - [Basics](api-guide/basics.md.html)\n  - [A Sample Lint Check](api-guide/example.md.html)\n  - [Analyzing data flow](api-guide/dataflow-analyzer.md.html)\n  - [Publishing a Lint check](api-guide/publishing.md.html)\n  - [Unit Testing](api-guide/unit-testing.md.html)\n  - [Test Modes](api-guide/test-modes.md.html)\n  - [Annotations](api-guide/annotations.md.html)\n  - [Adding Quick Fixes](api-guide/quickfixes.md.html)\n  - [Terminology](api-guide/terminology.md.html)\n  - [Partial analysis](api-guide/partial-analysis.md.html)\n  - [Frequently Asked Questions](api-guide/faq.md.html)\n* Documents for lint internals, intended for developers of lint\n  itself, in the `internal` folder:\n  - [Guidelines](internal/guidelines.md.html)\n  - [Generating Issue Documentation](internal/document-checks.md.html)\n  - [Testing dev builds](internal/verify.md.html)\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDocumentation History:\n* September 2021: Added documentation for [annotation\n  handling](annotations.md.html)\n* July 2021: Added documentation for\n  [test modes](api-guide/test-modes.md.html)\n* June 2021: Added documentation for the\n  [dataflow analyzer](api-guide/dataflow-analyzer.md.html),\n  [Lint Gradle DSL](usage/agp-dsl.md.html) and\n  [command line flags](usage/flags.md.html).\n* May 2021: Added documentation for individual lint issues\n* March 2021: Initial version\n\n<!-- Markdeep: --><style class=\"fallback\">body{visibility:hidden;white-space:pre;font-family:monospace}</style><script src=\"markdeep.min.js\" charset=\"utf-8\"></script><script src=\"https://morgan3d.github.io/markdeep/latest/markdeep.min.js\" charset=\"utf-8\"></script><script>window.alreadyProcessedMarkdeep||(document.body.style.visibility=\"visible\")</script>\n",
                                "diffs": [
                                    [
                                        "   - [Publishing a Lint check](api-guide/publishing.md.html)",
                                        "   - [Unit Testing](api-guide/unit-testing.md.html)",
                                        "   - [Test Modes](api-guide/test-modes.md.html)",
                                        "+  - [Annotations](api-guide/annotations.md.html)",
                                        "   - [Adding Quick Fixes](api-guide/quickfixes.md.html)",
                                        "   - [Terminology](api-guide/terminology.md.html)",
                                        "   - [Partial analysis](api-guide/partial-analysis.md.html)"
                                    ],
                                    [
                                        "   itself, in the `internal` folder:",
                                        "   - [Guidelines](internal/guidelines.md.html)",
                                        "   - [Generating Issue Documentation](internal/document-checks.md.html)",
                                        "+  - [Testing dev builds](internal/verify.md.html)",
                                        " ",
                                        " ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                        " ",
                                        " Documentation History:",
                                        "+* September 2021: Added documentation for [annotation",
                                        "+  handling](annotations.md.html)",
                                        " * July 2021: Added documentation for",
                                        "   [test modes](api-guide/test-modes.md.html)",
                                        " * June 2021: Added documentation for the",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "docs/api-guide.html",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " ",
                                        " </style><style>.hljs{display:block;overflow-x:auto;padding:0.5em;background:#fff;color:#000;-webkit-text-size-adjust:none}.hljs-comment{color:#006a00}.hljs-keyword{color:#02E}.hljs-literal,.nginx .hljs-title{color:#aa0d91}.method,.hljs-list .hljs-title,.hljs-tag .hljs-title,.setting .hljs-value,.hljs-winutils,.tex .hljs-command,.http .hljs-title,.hljs-request,.hljs-status,.hljs-name{color:#008}.hljs-envvar,.tex .hljs-special{color:#660}.hljs-string{color:#c41a16}.hljs-tag .hljs-value,.hljs-cdata,.hljs-filter .hljs-argument,.hljs-attr_selector,.apache .hljs-cbracket,.hljs-date,.hljs-regexp{color:#080}.hljs-sub .hljs-identifier,.hljs-pi,.hljs-tag,.hljs-tag .hljs-keyword,.hljs-decorator,.ini .hljs-title,.hljs-shebang,.hljs-prompt,.hljs-hexcolor,.hljs-rule .hljs-value,.hljs-symbol,.hljs-symbol .hljs-string,.hljs-number,.css .hljs-function,.hljs-function .hljs-title,.coffeescript .hljs-attribute{color:#A0C}.hljs-function .hljs-title{font-weight:bold;color:#000}.hljs-class .hljs-title,.smalltalk .hljs-class,.hljs-type,.hljs-typename,.hljs-tag .hljs-attribute,.hljs-doctype,.hljs-class .hljs-id,.hljs-built_in,.setting,.hljs-params,.clojure .hljs-attribute{color:#5c2699}.hljs-variable{color:#3f6e74}.css .hljs-tag,.hljs-rule .hljs-property,.hljs-pseudo,.hljs-subst{color:#000}.css .hljs-class,.css .hljs-id{color:#9b703f}.hljs-value .hljs-important{color:#ff7700;font-weight:bold}.hljs-rule .hljs-keyword{color:#c5af75}.hljs-annotation,.apache .hljs-sqbracket,.nginx .hljs-built_in{color:#9b859d}.hljs-preprocessor,.hljs-preprocessor *,.hljs-pragma{color:#643820}.tex .hljs-formula{background-color:#eee;font-style:italic}.diff .hljs-header,.hljs-chunk{color:#808080;font-weight:bold}.diff .hljs-change{background-color:#bccff9}.hljs-addition{background-color:#baeeba}.hljs-deletion{background-color:#ffc8bd}.hljs-comment .hljs-doctag{font-weight:bold}.method .hljs-id{color:#000}</style><style>div.title { padding-top: 40px; } div.afterTitles { height: 15px; }</style><meta charset=\"utf-8\" lang=\"kotlin\">",
                                        " ",
                                        "+<script type=\"text/x-mathjax-config\">MathJax.Hub.Config({ TeX: { equationNumbers: {autoNumber: \"AMS\"} } });</script><span style=\"display:none\">$$\\newcommand{\\n}{\\hat{n}}\\newcommand{\\thetai}{\\theta_\\mathrm{i}}\\newcommand{\\thetao}{\\theta_\\mathrm{o}}\\newcommand{\\d}[1]{\\mathrm{d}#1}\\newcommand{\\w}{\\hat{\\omega}}\\newcommand{\\wi}{\\w_\\mathrm{i}}\\newcommand{\\wo}{\\w_\\mathrm{o}}\\newcommand{\\wh}{\\w_\\mathrm{h}}\\newcommand{\\Li}{L_\\mathrm{i}}\\newcommand{\\Lo}{L_\\mathrm{o}}\\newcommand{\\Le}{L_\\mathrm{e}}\\newcommand{\\Lr}{L_\\mathrm{r}}\\newcommand{\\Lt}{L_\\mathrm{t}}\\newcommand{\\O}{\\mathrm{O}}\\newcommand{\\degrees}{{^{\\large\\circ}}}\\newcommand{\\T}{\\mathsf{T}}\\newcommand{\\mathset}[1]{\\mathbb{#1}}\\newcommand{\\Real}{\\mathset{R}}\\newcommand{\\Integer}{\\mathset{Z}}\\newcommand{\\Boolean}{\\mathset{B}}\\newcommand{\\Complex}{\\mathset{C}}\\newcommand{\\un}[1]{\\,\\mathrm{#1}}$$",
                                        "+</span>",
                                        " <span class=\"md\"><p><title>Android Lint API Guide</title></p><div class=\"title\"> Android Lint API Guide </div>",
                                        " ",
                                        " <div class=\"afterTitles\"></div>"
                                    ],
                                    [
                                        " &nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#writingalintcheck:basics/analyzingkotlinandjavacode/uastexample\" class=\"level3\"><span class=\"tocNumber\">2.14.2&nbsp; </span>UAST Example</a><br>",
                                        " &nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#writingalintcheck:basics/analyzingkotlinandjavacode/lookingupuast\" class=\"level3\"><span class=\"tocNumber\">2.14.3&nbsp; </span>Looking up UAST</a><br>",
                                        " &nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#writingalintcheck:basics/analyzingkotlinandjavacode/resolving\" class=\"level3\"><span class=\"tocNumber\">2.14.4&nbsp; </span>Resolving</a><br>",
                                        "-&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#writingalintcheck:basics/analyzingkotlinandjavacode/psi\" class=\"level3\"><span class=\"tocNumber\">2.14.5&nbsp; </span>PSI</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#writingalintcheck:basics/analyzingkotlinandjavacode/implicitcalls\" class=\"level3\"><span class=\"tocNumber\">2.14.5&nbsp; </span>Implicit Calls</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#writingalintcheck:basics/analyzingkotlinandjavacode/psi\" class=\"level3\"><span class=\"tocNumber\">2.14.6&nbsp; </span>PSI</a><br>",
                                        " &nbsp;&nbsp;<a href=\"#writingalintcheck:basics/testing\" class=\"level2\"><span class=\"tocNumber\">2.15&nbsp; </span>Testing</a><br>",
                                        " <a href=\"#example:samplelintcheckgithubproject\" class=\"level1\"><span class=\"tocNumber\">3&nbsp; </span>Example: Sample Lint Check GitHub Project</a><br>",
                                        " &nbsp;&nbsp;<a href=\"#example:samplelintcheckgithubproject/projectlayout\" class=\"level2\"><span class=\"tocNumber\">3.1&nbsp; </span>Project Layout</a><br>"
                                    ],
                                    [
                                        " &nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#testmodes/source-modifyingtestmodes/parenthesismode\" class=\"level3\"><span class=\"tocNumber\">6.3.4&nbsp; </span>Parenthesis Mode</a><br>",
                                        " &nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#testmodes/source-modifyingtestmodes/argumentreordering\" class=\"level3\"><span class=\"tocNumber\">6.3.5&nbsp; </span>Argument Reordering</a><br>",
                                        " &nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#testmodes/source-modifyingtestmodes/bodyremoval\" class=\"level3\"><span class=\"tocNumber\">6.3.6&nbsp; </span>Body Removal</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#testmodes/source-modifyingtestmodes/iftowhenreplacement\" class=\"level3\"><span class=\"tocNumber\">6.3.7&nbsp; </span>If to When Replacement</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#testmodes/source-modifyingtestmodes/whitespacemode\" class=\"level3\"><span class=\"tocNumber\">6.3.8&nbsp; </span>Whitespace Mode</a><br>",
                                        " <a href=\"#addingquickfixes\" class=\"level1\"><span class=\"tocNumber\">7&nbsp; </span>Adding Quick Fixes</a><br>",
                                        " &nbsp;&nbsp;<a href=\"#addingquickfixes/introduction\" class=\"level2\"><span class=\"tocNumber\">7.1&nbsp; </span>Introduction</a><br>",
                                        " &nbsp;&nbsp;<a href=\"#addingquickfixes/thelintfixbuilderclass\" class=\"level2\"><span class=\"tocNumber\">7.2&nbsp; </span>The LintFix builder class</a><br>"
                                    ],
                                    [
                                        " &nbsp;&nbsp;<a href=\"#dataflowanalyzer/examples\" class=\"level2\"><span class=\"tocNumber\">9.7&nbsp; </span>Examples</a><br>",
                                        " &nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#dataflowanalyzer/examples/simpleexample\" class=\"level3\"><span class=\"tocNumber\">9.7.1&nbsp; </span>Simple Example</a><br>",
                                        " &nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#dataflowanalyzer/examples/complexexample\" class=\"level3\"><span class=\"tocNumber\">9.7.2&nbsp; </span>Complex Example</a><br>",
                                        "-<a href=\"#frequentlyaskedquestions\" class=\"level1\"><span class=\"tocNumber\">10&nbsp; </span>Frequently Asked Questions</a><br>",
                                        "-&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//mydetectorcallbacksaren'tinvoked\" class=\"level3\"><span class=\"tocNumber\">10.0.1&nbsp; </span>My detector callbacks aren't invoked</a><br>",
                                        "-&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//mylintcheckworksfromtheunittestbutnotintheide\" class=\"level3\"><span class=\"tocNumber\">10.0.2&nbsp; </span>My lint check works from the unit test but not in the IDE</a><br>",
                                        "-&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//visitannotationusageisn'tcalledforannotations\" class=\"level3\"><span class=\"tocNumber\">10.0.3&nbsp; </span><code>visitAnnotationUsage</code> isn't called for annotations</a><br>",
                                        "-&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//howdoicheckifauastorpsielementisforjavaorkotlin?\" class=\"level3\"><span class=\"tocNumber\">10.0.4&nbsp; </span>How do I check if a UAST or PSI element is for Java or Kotlin?</a><br>",
                                        "-&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//whatifineedapsielementandihaveauelement?\" class=\"level3\"><span class=\"tocNumber\">10.0.5&nbsp; </span>What if I need a <code>PsiElement</code> and I have a <code>UElement</code> ?</a><br>",
                                        "-&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//howdoigettheumethodforapsimethod?\" class=\"level3\"><span class=\"tocNumber\">10.0.6&nbsp; </span>How do I get the <code>UMethod</code> for a <code>PsiMethod</code> ?</a><br>",
                                        "-&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//howdogetajavaevaluator?\" class=\"level3\"><span class=\"tocNumber\">10.0.7&nbsp; </span>How do get a <code>JavaEvaluator</code> ?</a><br>",
                                        "-&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//howdoicheckwhetheranelementisinternal?\" class=\"level3\"><span class=\"tocNumber\">10.0.8&nbsp; </span>How do I check whether an element is internal?</a><br>",
                                        "-&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//iselementinline,sealed,operator,infix,suspend,data?\" class=\"level3\"><span class=\"tocNumber\">10.0.9&nbsp; </span>Is element inline, sealed, operator, infix, suspend, data?</a><br>",
                                        "-&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//howdoilookupaclassifihaveitsfullyqualifiedname?\" class=\"level3\"><span class=\"tocNumber\">10.0.10&nbsp; </span>How do I look up a class if I have its fully qualified name?</a><br>",
                                        "-&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//howdoilookupaclassifihaveapsitype?\" class=\"level3\"><span class=\"tocNumber\">10.0.11&nbsp; </span>How do I look up a class if I have a PsiType?</a><br>",
                                        "-&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//howdoilookuphierarhcyannotationsforanelement?\" class=\"level3\"><span class=\"tocNumber\">10.0.12&nbsp; </span>How do I look up hierarhcy annotations for an element?</a><br>",
                                        "-&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//howdoilookupifaclassisasubclassofanother?\" class=\"level3\"><span class=\"tocNumber\">10.0.13&nbsp; </span>How do I look up if a class is a subclass of another?</a><br>",
                                        "-&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//howdoiknowwhichparameteracallargumentcorrespondsto?\" class=\"level3\"><span class=\"tocNumber\">10.0.14&nbsp; </span>How do I know which parameter a call argument corresponds to?</a><br>",
                                        "-&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//howcanmylintcheckstargettwodifferentversionsoflint?\" class=\"level3\"><span class=\"tocNumber\">10.0.15&nbsp; </span>How can my lint checks target two different versions of lint?</a><br>",
                                        "-&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//canimakemylintcheck%E2%80%9Cnotsuppressible?%E2%80%9D\" class=\"level3\"><span class=\"tocNumber\">10.0.16&nbsp; </span>Can I make my lint check \u201cnot suppressible?\u201d</a><br>",
                                        "-&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//howdoicheckoutthecurrentlintsourcecode?\" class=\"level3\"><span class=\"tocNumber\">10.0.17&nbsp; </span>How do I check out the current lint source code?</a><br>",
                                        "-&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//wheredoifindexamplesoflintchecks?\" class=\"level3\"><span class=\"tocNumber\">10.0.18&nbsp; </span>Where do I find examples of lint checks?</a><br>",
                                        "-<a href=\"#appendix:recentchanges\" class=\"level1\"><span class=\"tocNumber\">11&nbsp; </span>Appendix: Recent Changes</a><br>",
                                        "-<a href=\"#appendix:environmentvariablesandsystemproperties\" class=\"level1\"><span class=\"tocNumber\">12&nbsp; </span>Appendix: Environment Variables and System Properties</a><br>",
                                        "-&nbsp;&nbsp;<a href=\"#appendix:environmentvariablesandsystemproperties/environmentvariables\" class=\"level2\"><span class=\"tocNumber\">12.1&nbsp; </span>Environment Variables</a><br>",
                                        "-&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#appendix:environmentvariablesandsystemproperties/environmentvariables/detectorconfigurationvariables\" class=\"level3\"><span class=\"tocNumber\">12.1.1&nbsp; </span>Detector Configuration Variables</a><br>",
                                        "-&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#appendix:environmentvariablesandsystemproperties/environmentvariables/lintconfigurationvariables\" class=\"level3\"><span class=\"tocNumber\">12.1.2&nbsp; </span>Lint Configuration Variables</a><br>",
                                        "-&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#appendix:environmentvariablesandsystemproperties/environmentvariables/lintdevelopmentvariables\" class=\"level3\"><span class=\"tocNumber\">12.1.3&nbsp; </span>Lint Development Variables</a><br>",
                                        "-&nbsp;&nbsp;<a href=\"#appendix:environmentvariablesandsystemproperties/systemproperties\" class=\"level2\"><span class=\"tocNumber\">12.2&nbsp; </span>System Properties</a><br>",
                                        "+<a href=\"#annotations\" class=\"level1\"><span class=\"tocNumber\">10&nbsp; </span>Annotations</a><br>",
                                        "+&nbsp;&nbsp;<a href=\"#annotations/basics\" class=\"level2\"><span class=\"tocNumber\">10.1&nbsp; </span>Basics</a><br>",
                                        "+&nbsp;&nbsp;<a href=\"#annotations/annotationusagetypesandisapplicableannotationusage\" class=\"level2\"><span class=\"tocNumber\">10.2&nbsp; </span>Annotation Usage Types and isApplicableAnnotationUsage</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#annotations/annotationusagetypesandisapplicableannotationusage/methodoverride\" class=\"level3\"><span class=\"tocNumber\">10.2.1&nbsp; </span>Method Override</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#annotations/annotationusagetypesandisapplicableannotationusage/methodreturn\" class=\"level3\"><span class=\"tocNumber\">10.2.2&nbsp; </span>Method Return</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#annotations/annotationusagetypesandisapplicableannotationusage/handlingusagetypes\" class=\"level3\"><span class=\"tocNumber\">10.2.3&nbsp; </span>Handling Usage Types</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#annotations/annotationusagetypesandisapplicableannotationusage/usagetypesfilteredbydefault\" class=\"level3\"><span class=\"tocNumber\">10.2.4&nbsp; </span>Usage Types Filtered By Default</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#annotations/annotationusagetypesandisapplicableannotationusage/scopes\" class=\"level3\"><span class=\"tocNumber\">10.2.5&nbsp; </span>Scopes</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#annotations/annotationusagetypesandisapplicableannotationusage/inheritedannotations\" class=\"level3\"><span class=\"tocNumber\">10.2.6&nbsp; </span>Inherited Annotations</a><br>",
                                        "+<a href=\"#frequentlyaskedquestions\" class=\"level1\"><span class=\"tocNumber\">11&nbsp; </span>Frequently Asked Questions</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//mydetectorcallbacksaren'tinvoked\" class=\"level3\"><span class=\"tocNumber\">11.0.1&nbsp; </span>My detector callbacks aren't invoked</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//mylintcheckworksfromtheunittestbutnotintheide\" class=\"level3\"><span class=\"tocNumber\">11.0.2&nbsp; </span>My lint check works from the unit test but not in the IDE</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//visitannotationusageisn'tcalledforannotations\" class=\"level3\"><span class=\"tocNumber\">11.0.3&nbsp; </span><code>visitAnnotationUsage</code> isn't called for annotations</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//howdoicheckifauastorpsielementisforjavaorkotlin?\" class=\"level3\"><span class=\"tocNumber\">11.0.4&nbsp; </span>How do I check if a UAST or PSI element is for Java or Kotlin?</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//whatifineedapsielementandihaveauelement?\" class=\"level3\"><span class=\"tocNumber\">11.0.5&nbsp; </span>What if I need a <code>PsiElement</code> and I have a <code>UElement</code> ?</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//howdoigettheumethodforapsimethod?\" class=\"level3\"><span class=\"tocNumber\">11.0.6&nbsp; </span>How do I get the <code>UMethod</code> for a <code>PsiMethod</code> ?</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//howdogetajavaevaluator?\" class=\"level3\"><span class=\"tocNumber\">11.0.7&nbsp; </span>How do get a <code>JavaEvaluator</code> ?</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//howdoicheckwhetheranelementisinternal?\" class=\"level3\"><span class=\"tocNumber\">11.0.8&nbsp; </span>How do I check whether an element is internal?</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//iselementinline,sealed,operator,infix,suspend,data?\" class=\"level3\"><span class=\"tocNumber\">11.0.9&nbsp; </span>Is element inline, sealed, operator, infix, suspend, data?</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//howdoilookupaclassifihaveitsfullyqualifiedname?\" class=\"level3\"><span class=\"tocNumber\">11.0.10&nbsp; </span>How do I look up a class if I have its fully qualified name?</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//howdoilookupaclassifihaveapsitype?\" class=\"level3\"><span class=\"tocNumber\">11.0.11&nbsp; </span>How do I look up a class if I have a PsiType?</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//howdoilookuphierarhcyannotationsforanelement?\" class=\"level3\"><span class=\"tocNumber\">11.0.12&nbsp; </span>How do I look up hierarhcy annotations for an element?</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//howdoilookupifaclassisasubclassofanother?\" class=\"level3\"><span class=\"tocNumber\">11.0.13&nbsp; </span>How do I look up if a class is a subclass of another?</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//howdoiknowwhichparameteracallargumentcorrespondsto?\" class=\"level3\"><span class=\"tocNumber\">11.0.14&nbsp; </span>How do I know which parameter a call argument corresponds to?</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//howcanmylintcheckstargettwodifferentversionsoflint?\" class=\"level3\"><span class=\"tocNumber\">11.0.15&nbsp; </span>How can my lint checks target two different versions of lint?</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//canimakemylintcheck%E2%80%9Cnotsuppressible?%E2%80%9D\" class=\"level3\"><span class=\"tocNumber\">11.0.16&nbsp; </span>Can I make my lint check \u201cnot suppressible?\u201d</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//whyareoverloadedoperatorsnothandled?\" class=\"level3\"><span class=\"tocNumber\">11.0.17&nbsp; </span>Why are overloaded operators not handled?</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//howdoicheckoutthecurrentlintsourcecode?\" class=\"level3\"><span class=\"tocNumber\">11.0.18&nbsp; </span>How do I check out the current lint source code?</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#frequentlyaskedquestions//wheredoifindexamplesoflintchecks?\" class=\"level3\"><span class=\"tocNumber\">11.0.19&nbsp; </span>Where do I find examples of lint checks?</a><br>",
                                        "+<a href=\"#appendix:recentchanges\" class=\"level1\"><span class=\"tocNumber\">12&nbsp; </span>Appendix: Recent Changes</a><br>",
                                        "+<a href=\"#appendix:environmentvariablesandsystemproperties\" class=\"level1\"><span class=\"tocNumber\">13&nbsp; </span>Appendix: Environment Variables and System Properties</a><br>",
                                        "+&nbsp;&nbsp;<a href=\"#appendix:environmentvariablesandsystemproperties/environmentvariables\" class=\"level2\"><span class=\"tocNumber\">13.1&nbsp; </span>Environment Variables</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#appendix:environmentvariablesandsystemproperties/environmentvariables/detectorconfigurationvariables\" class=\"level3\"><span class=\"tocNumber\">13.1.1&nbsp; </span>Detector Configuration Variables</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#appendix:environmentvariablesandsystemproperties/environmentvariables/lintconfigurationvariables\" class=\"level3\"><span class=\"tocNumber\">13.1.2&nbsp; </span>Lint Configuration Variables</a><br>",
                                        "+&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"#appendix:environmentvariablesandsystemproperties/environmentvariables/lintdevelopmentvariables\" class=\"level3\"><span class=\"tocNumber\">13.1.3&nbsp; </span>Lint Development Variables</a><br>",
                                        "+&nbsp;&nbsp;<a href=\"#appendix:environmentvariablesandsystemproperties/systemproperties\" class=\"level2\"><span class=\"tocNumber\">13.2&nbsp; </span>System Properties</a><br>",
                                        " </p></div><a class=\"target\" name=\"terminology\">&nbsp;</a><a class=\"target\" name=\"terminology\">&nbsp;</a><a class=\"target\" name=\"toc1\">&nbsp;</a><h1>Terminology</h1>",
                                        " <p>",
                                        " "
                                    ],
                                    [
                                        " ",
                                        " </p></dd><dt>Incident</dt><dd><p>  A specific occurrence of the issue at a specific location.",
                                        "   An example of an incident is:",
                                        "-  </p><pre class=\"listing backtick\"><code><span class=\"line\">    Warning: In file IoUtils.kt, line 140, the field download folder</span>",
                                        "-<span class=\"line\">    is \"/sdcard/downloads\"; do not hardcode the path to `/sdcard`.</span></code></pre></dd><dt>Issue</dt><dd><p>  A type or class of problem that your lint check identifies. An issue",
                                        "+  </p><pre class=\"listing backtick\"><code><span class=\"line\"></span>    Warning: In file IoUtils.kt, line 140, the field download folder",
                                        "+<span class=\"line\"></span>    is \"/sdcard/downloads\"; do not hardcode the path to `/sdcard`.</code></pre></dd><dt>Issue</dt><dd><p>  A type or class of problem that your lint check identifies. An issue",
                                        "   has an associated severity (error, warning or info), a priority, a",
                                        "   category, an explanation, and so on.",
                                        " "
                                    ],
                                    [
                                        "   migration to a new API. IntelliJ can automatically quickfix these",
                                        "   deprecation replacements.</li></ul>",
                                        " ",
                                        "-<p></p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-meta\">@Deprecated(</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-meta-string\">\"Use the new report(Incident) method instead, which is more future proof\"</span>,</span>",
                                        "-<span class=\"line\">    ReplaceWith(</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-meta-string\">\"report(Incident(issue, message, location, null, quickfixData))\"</span>,</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-meta-string\">\"com.android.tools.lint.detector.api.Incident\"</span></span>",
                                        "-<span class=\"line\">    )</span></span>",
                                        "-<span class=\"line\">)</span>",
                                        "-<span class=\"line\"><span class=\"hljs-meta\">@JvmOverloads</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">report</span><span class=\"hljs-params\">(</span>",
                                        "-<span class=\"line\">    issue: <span class=\"hljs-type\">Issue</span>,</span>",
                                        "-<span class=\"line\">    location: <span class=\"hljs-type\">Location</span>,</span>",
                                        "-<span class=\"line\">    message: <span class=\"hljs-type\">String</span>,</span>",
                                        "-<span class=\"line\">    quickfixData: <span class=\"hljs-type\">LintFix</span>? = <span class=\"hljs-literal\">null</span></span>",
                                        "-<span class=\"line\">)</span></span> {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-comment\">// ...</span></span>",
                                        "-<span class=\"line\">}</span></div></code></pre><p>",
                                        "+<p></p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-meta\">@Deprecated(",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-meta-string\">\"Use the new report(Incident) method instead, which is more future proof\"</span>,",
                                        "+<span class=\"line\"></span>    ReplaceWith(",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-meta-string\">\"report(Incident(issue, message, location, null, quickfixData))\"</span>,",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-meta-string\">\"com.android.tools.lint.detector.api.Incident\"</span>",
                                        "+<span class=\"line\"></span>    )</span>",
                                        "+<span class=\"line\"></span>)",
                                        "+<span class=\"line\"></span><span class=\"hljs-meta\">@JvmOverloads</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">report</span><span class=\"hljs-params\">(",
                                        "+<span class=\"line\"></span>    issue: <span class=\"hljs-type\">Issue</span>,",
                                        "+<span class=\"line\"></span>    location: <span class=\"hljs-type\">Location</span>,",
                                        "+<span class=\"line\"></span>    message: <span class=\"hljs-type\">String</span>,",
                                        "+<span class=\"line\"></span>    quickfixData: <span class=\"hljs-type\">LintFix</span>? = <span class=\"hljs-literal\">null</span>",
                                        "+<span class=\"line\"></span>)</span></span> {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-comment\">// ...</span>",
                                        "+<span class=\"line\"></span>}</div></code></pre><p>",
                                        " ",
                                        " As of 7.0, there is more Kotlin code in lint than remaining Java",
                                        " code:"
                                    ],
                                    [
                                        "   <code>LintClient</code> provides a simple way to provide exact responses for",
                                        "   specific URLs:</li></ul>",
                                        " ",
                                        "-<p></p><pre class=\"listing tilde\"><code><span class=\"line\">lint()</span>",
                                        "-<span class=\"line\">  .files(...)</span>",
                                        "-<span class=\"line\">  // Set up exactly the expected maven.google.com network output to</span>",
                                        "-<span class=\"line\">  // ensure stable version suggestions in the tests</span>",
                                        "-<span class=\"line\">  .networkData(\"https://maven.google.com/master-index.xml\", \"\"</span>",
                                        "-<span class=\"line\">       + \"<span class=\"hljs-comment\">&lt;!--?xml version='1.0' encoding='UTF-8'?--&gt;</span>\\n\"</span>",
                                        "-<span class=\"line\">       + \"<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">metadata</span>&gt;</span>\\n\"</span>",
                                        "-<span class=\"line\">       + \"  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">com.android.tools.build</span>&gt;</span>\"</span>",
                                        "-<span class=\"line\">       + \"<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">com.android.tools.build</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">metadata</span>&gt;</span>\")</span>",
                                        "-<span class=\"line\">  .networkData(\"https://maven.google.com/com/android/tools/build/group-index.xml\", \"\"</span>",
                                        "-<span class=\"line\">       + \"<span class=\"hljs-comment\">&lt;!--?xml version='1.0' encoding='UTF-8'?--&gt;</span>\\n\"</span>",
                                        "-<span class=\"line\">       + \"<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">com.android.tools.build</span>&gt;</span>\\n\"</span>",
                                        "-<span class=\"line\">       + \"  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">gradle</span> <span class=\"hljs-attr\">versions</span>=<span class=\"hljs-string\">\"\\\"</span><span class=\"hljs-attr\">2.3.3</span>,<span class=\"hljs-attr\">3.0.0-alpha1</span>\\\"/\"&gt;</span>\\n\"</span>",
                                        "-<span class=\"line\">       + \"<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">gradle</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">com.android.tools.build</span>&gt;</span>\")</span>",
                                        "-<span class=\"line\">.run()</span>",
                                        "-<span class=\"line\">.expect(...)</span></code></pre><p>",
                                        "+<p></p><pre class=\"listing tilde\"><code><span class=\"line\"></span>lint()",
                                        "+<span class=\"line\"></span>  .files(...)",
                                        "+<span class=\"line\"></span>  // Set up exactly the expected maven.google.com network output to",
                                        "+<span class=\"line\"></span>  // ensure stable version suggestions in the tests",
                                        "+<span class=\"line\"></span>  .networkData(\"https://maven.google.com/master-index.xml\", \"\"",
                                        "+<span class=\"line\"></span>       + \"<span class=\"hljs-comment\">&lt;!--?xml version='1.0' encoding='UTF-8'?--&gt;</span>\\n\"",
                                        "+<span class=\"line\"></span>       + \"<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">metadata</span>&gt;</span>\\n\"",
                                        "+<span class=\"line\"></span>       + \"  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">com.android.tools.build</span>&gt;</span>\"",
                                        "+<span class=\"line\"></span>       + \"<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">com.android.tools.build</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">metadata</span>&gt;</span>\")",
                                        "+<span class=\"line\"></span>  .networkData(\"https://maven.google.com/com/android/tools/build/group-index.xml\", \"\"",
                                        "+<span class=\"line\"></span>       + \"<span class=\"hljs-comment\">&lt;!--?xml version='1.0' encoding='UTF-8'?--&gt;</span>\\n\"",
                                        "+<span class=\"line\"></span>       + \"<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">com.android.tools.build</span>&gt;</span>\\n\"",
                                        "+<span class=\"line\"></span>       + \"  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">gradle</span> <span class=\"hljs-attr\">versions</span>=<span class=\"hljs-string\">\"\\\"</span><span class=\"hljs-attr\">2.3.3</span>,<span class=\"hljs-attr\">3.0.0-alpha1</span>\\\"/\"&gt;</span>\\n\"",
                                        "+<span class=\"line\"></span>       + \"<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">gradle</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">com.android.tools.build</span>&gt;</span>\")",
                                        "+<span class=\"line\"></span>.run()",
                                        "+<span class=\"line\"></span>.expect(...)</code></pre><p>",
                                        " ",
                                        " And much, much, more. <strong class=\"asterisk\">However, most of the implementation of",
                                        " <code>LintClient</code> is intended for integration of lint itself, and as a check"
                                    ],
                                    [
                                        " ",
                                        " Here's an example:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SdCardDetector</span> : <span class=\"hljs-type\">Detector</span></span>(), SourceCodeScanner {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">companion</span> <span class=\"hljs-keyword\">object</span> Issues {</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-meta\">@JvmField</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-keyword\">val</span> ISSUE = Issue.create(</span>",
                                        "-<span class=\"line\">            id = <span class=\"hljs-string\">\"SdCardPath\"</span>,</span>",
                                        "-<span class=\"line\">            briefDescription = <span class=\"hljs-string\">\"Hardcoded reference to `/sdcard`\"</span>,</span>",
                                        "-<span class=\"line\">            explanation = <span class=\"hljs-string\">\"\"\"</span>",
                                        "-<span class=\"line\">                Your code should not reference the `/sdcard` path directly; \\</span>",
                                        "-<span class=\"line\">                instead use `Environment.getExternalStorageDirectory().getPath()`.</span>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SdCardDetector</span> : <span class=\"hljs-type\">Detector</span></span>(), SourceCodeScanner {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">companion</span> <span class=\"hljs-keyword\">object</span> Issues {",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-meta\">@JvmField</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-keyword\">val</span> ISSUE = Issue.create(",
                                        "+<span class=\"line\"></span>            id = <span class=\"hljs-string\">\"SdCardPath\"</span>,",
                                        "+<span class=\"line\"></span>            briefDescription = <span class=\"hljs-string\">\"Hardcoded reference to `/sdcard`\"</span>,",
                                        "+<span class=\"line\"></span>            explanation = <span class=\"hljs-string\">\"\"\"",
                                        "+<span class=\"line\"></span>                Your code should not reference the `/sdcard` path directly; \\",
                                        "+<span class=\"line\"></span>                instead use `Environment.getExternalStorageDirectory().getPath()`.",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">                Similarly, do not reference the `/data/data/` path directly; it \\</span>",
                                        "-<span class=\"line\">                can vary in multi-user scenarios. Instead, use \\</span>",
                                        "-<span class=\"line\">                `Context.getFilesDir().getPath()`.</span>",
                                        "-<span class=\"line\">                \"\"\"</span>,</span>",
                                        "-<span class=\"line\">            moreInfo = <span class=\"hljs-string\">\"https://developer.android.com/training/data-storage#filesExternal\"</span>,</span>",
                                        "-<span class=\"line\">            category = Category.CORRECTNESS,</span>",
                                        "-<span class=\"line\">            severity = Severity.WARNING,</span>",
                                        "-<span class=\"line\">            androidSpecific = <span class=\"hljs-literal\">true</span>,</span>",
                                        "-<span class=\"line\">            implementation = Implementation(</span>",
                                        "-<span class=\"line\">                SdCardDetector::<span class=\"hljs-keyword\">class</span>.java,</span>",
                                        "-<span class=\"line\">                Scope.JAVA_FILE_SCOPE</span>",
                                        "-<span class=\"line\">            )</span>",
                                        "-<span class=\"line\">        )</span>",
                                        "-<span class=\"line\">    }</span>",
                                        "-<span class=\"line\">    ...</span></div></code></pre><p>",
                                        "+<span class=\"line\"></span>                Similarly, do not reference the `/data/data/` path directly; it \\",
                                        "+<span class=\"line\"></span>                can vary in multi-user scenarios. Instead, use \\",
                                        "+<span class=\"line\"></span>                `Context.getFilesDir().getPath()`.",
                                        "+<span class=\"line\"></span>                \"\"\"</span>,",
                                        "+<span class=\"line\"></span>            moreInfo = <span class=\"hljs-string\">\"https://developer.android.com/training/data-storage#filesExternal\"</span>,",
                                        "+<span class=\"line\"></span>            category = Category.CORRECTNESS,",
                                        "+<span class=\"line\"></span>            severity = Severity.WARNING,",
                                        "+<span class=\"line\"></span>            androidSpecific = <span class=\"hljs-literal\">true</span>,",
                                        "+<span class=\"line\"></span>            implementation = Implementation(",
                                        "+<span class=\"line\"></span>                SdCardDetector::<span class=\"hljs-keyword\">class</span>.java,",
                                        "+<span class=\"line\"></span>                Scope.JAVA_FILE_SCOPE",
                                        "+<span class=\"line\"></span>            )",
                                        "+<span class=\"line\"></span>        )",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>    ...</div></code></pre><p>",
                                        " ",
                                        " There are a number of things to note here.",
                                        " "
                                    ],
                                    [
                                        " that the id is \u201cuser visible\u201d; it is included in text output when lint",
                                        " runs in the build system, such as this:",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\">src/main/kotlin/test/pkg/MyTest.kt:4: Warning: Do not hardcode \"/sdcard/\";</span>",
                                        "-<span class=\"line\">      use Environment.getExternalStorageDirectory().getPath() instead [SdCardPath]</span>",
                                        "-<span class=\"line\">    val s: String = \"/sdcard/mydir\"</span>",
                                        "-<span class=\"line\">                     ~~~~~~~~~~~~~</span>",
                                        "-<span class=\"line\">0 errors, 1 warnings</span></code></pre><p>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span>src/main/kotlin/test/pkg/MyTest.kt:4: Warning: Do not hardcode \"/sdcard/\";",
                                        "+<span class=\"line\"></span>      use Environment.getExternalStorageDirectory().getPath() instead [SdCardPath]",
                                        "+<span class=\"line\"></span>    val s: String = \"/sdcard/mydir\"",
                                        "+<span class=\"line\"></span>                     ~~~~~~~~~~~~~",
                                        "+<span class=\"line\"></span>0 errors, 1 warnings</code></pre><p>",
                                        " ",
                                        " (Notice the <code>[SdCardPath]</code> suffix at the end of the error message.)",
                                        " "
                                    ],
                                    [
                                        " they'll configure and/or suppress issues. For example, to suppress the",
                                        " warning in the current method, use",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\"><span class=\"hljs-meta\">@Suppress(<span class=\"hljs-params\"><span class=\"hljs-string\">\"SdCardPath\"</span></span>)</span></span></code></pre><p>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span><span class=\"hljs-meta\">@Suppress(<span class=\"hljs-params\"><span class=\"hljs-string\">\"SdCardPath\"</span></span>)</span></code></pre><p>",
                                        " ",
                                        " (or in Java, @SuppressWarnings). Note that there is an IDE quickfix to",
                                        " suppress an incident which will automatically add these annotations, so"
                                    ],
                                    [
                                        " class. <code>Scope.JAVA_FILE_SCOPE</code> is the most common, which is a",
                                        " singleton set containing exactly <code>Scope.JAVA_FILE</code>, but you",
                                        " can always create your own, such as for example",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\">    <span class=\"hljs-selector-tag\">EnumSet</span><span class=\"hljs-selector-class\">.of</span>(Scope.CLASS_FILE, Scope.JAVA_LIBRARIES)</span></code></pre><p>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span>    <span class=\"hljs-selector-tag\">EnumSet</span><span class=\"hljs-selector-class\">.of</span>(Scope.CLASS_FILE, Scope.JAVA_LIBRARIES)</code></pre><p>",
                                        " ",
                                        " When a lint issue requires multiple scopes, that means lint will",
                                        " <strong class=\"asterisk\">only</strong> run this detector if <strong class=\"asterisk\">all</strong> the scopes are available in the"
                                    ],
                                    [
                                        " ",
                                        " Here's an example <code>IssueRegistry</code>:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-keyword\">package</span> com.example.lint.checks</span>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-keyword\">package</span> com.example.lint.checks",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> com.android.tools.lint.client.api.IssueRegistry</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> com.android.tools.lint.client.api.Vendor</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.CURRENT_API</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> com.android.tools.lint.client.api.IssueRegistry",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> com.android.tools.lint.client.api.Vendor",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.CURRENT_API",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SampleIssueRegistry</span> : <span class=\"hljs-type\">IssueRegistry</span></span>() {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">val</span> issues = listOf(SdCardDetector.ISSUE)</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SampleIssueRegistry</span> : <span class=\"hljs-type\">IssueRegistry</span></span>() {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">val</span> issues = listOf(SdCardDetector.ISSUE)",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">val</span> api: <span class=\"hljs-built_in\">Int</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-keyword\">get</span>() = CURRENT_API</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">val</span> api: <span class=\"hljs-built_in\">Int</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-keyword\">get</span>() = CURRENT_API",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-comment\">// works with Studio 4.1 or later; see</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-comment\">// com.android.tools.lint.detector.api.Api / ApiKt</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">val</span> minApi: <span class=\"hljs-built_in\">Int</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-keyword\">get</span>() = <span class=\"hljs-number\">8</span></span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-comment\">// works with Studio 4.1 or later; see</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-comment\">// com.android.tools.lint.detector.api.Api / ApiKt</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">val</span> minApi: <span class=\"hljs-built_in\">Int</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-keyword\">get</span>() = <span class=\"hljs-number\">8</span>",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-comment\">// Requires lint API 30.0+; if you're still building for something</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-comment\">// older, just remove this property.</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">val</span> vendor: Vendor = Vendor(</span>",
                                        "-<span class=\"line\">        vendorName = <span class=\"hljs-string\">\"Android Open Source Project\"</span>,</span>",
                                        "-<span class=\"line\">        feedbackUrl = <span class=\"hljs-string\">\"https://com.example.lint.blah.blah\"</span>,</span>",
                                        "-<span class=\"line\">        contact = <span class=\"hljs-string\">\"author@com.example.lint\"</span></span>",
                                        "-<span class=\"line\">    )</span>",
                                        "-<span class=\"line\">}</span></div></code></pre><p>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-comment\">// Requires lint API 30.0+; if you're still building for something</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-comment\">// older, just remove this property.</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">val</span> vendor: Vendor = Vendor(",
                                        "+<span class=\"line\"></span>        vendorName = <span class=\"hljs-string\">\"Android Open Source Project\"</span>,",
                                        "+<span class=\"line\"></span>        feedbackUrl = <span class=\"hljs-string\">\"https://com.example.lint.blah.blah\"</span>,",
                                        "+<span class=\"line\"></span>        contact = <span class=\"hljs-string\">\"author@com.example.lint\"</span>",
                                        "+<span class=\"line\"></span>    )",
                                        "+<span class=\"line\"></span>}</div></code></pre><p>",
                                        " ",
                                        " On line 8, we're returning our issue. It's a list, so an",
                                        " <code>IssueRegistry</code> can provide multiple issues."
                                    ],
                                    [
                                        " </p><p>",
                                        " ",
                                        " Create a file named exactly",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\"><span class=\"hljs-selector-tag\">src</span>/<span class=\"hljs-selector-tag\">main</span>/<span class=\"hljs-selector-tag\">resources</span>/<span class=\"hljs-selector-tag\">META-INF</span>/<span class=\"hljs-selector-tag\">services</span>/<span class=\"hljs-selector-tag\">com</span><span class=\"hljs-selector-class\">.android</span><span class=\"hljs-selector-class\">.tools</span><span class=\"hljs-selector-class\">.lint</span><span class=\"hljs-selector-class\">.client</span><span class=\"hljs-selector-class\">.api</span><span class=\"hljs-selector-class\">.IssueRegistry</span></span></code></pre><p>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span><span class=\"hljs-selector-tag\">src</span>/<span class=\"hljs-selector-tag\">main</span>/<span class=\"hljs-selector-tag\">resources</span>/<span class=\"hljs-selector-tag\">META-INF</span>/<span class=\"hljs-selector-tag\">services</span>/<span class=\"hljs-selector-tag\">com</span><span class=\"hljs-selector-class\">.android</span><span class=\"hljs-selector-class\">.tools</span><span class=\"hljs-selector-class\">.lint</span><span class=\"hljs-selector-class\">.client</span><span class=\"hljs-selector-class\">.api</span><span class=\"hljs-selector-class\">.IssueRegistry</span></code></pre><p>",
                                        " ",
                                        " with the following contents (but where you substitute in your own",
                                        " fully qualified class name for your issue registry):",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\"><span class=\"hljs-selector-tag\">com</span><span class=\"hljs-selector-class\">.example</span><span class=\"hljs-selector-class\">.lint</span><span class=\"hljs-selector-class\">.checks</span><span class=\"hljs-selector-class\">.SampleIssueRegistry</span></span></code></pre><p>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span><span class=\"hljs-selector-tag\">com</span><span class=\"hljs-selector-class\">.example</span><span class=\"hljs-selector-class\">.lint</span><span class=\"hljs-selector-class\">.checks</span><span class=\"hljs-selector-class\">.SampleIssueRegistry</span></code></pre><p>",
                                        " ",
                                        " If you're not building your lint check using Gradle, you may not want",
                                        " the <code>src/main/resources</code> prefix; the point is that your packaging of"
                                    ],
                                    [
                                        " </p><p>",
                                        " ",
                                        " Here's a trivial one:",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyDetector</span> : <span class=\"hljs-type\">Detector</span></span>() {</span>",
                                        "-<span class=\"line\">   <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">run</span><span class=\"hljs-params\">(context: <span class=\"hljs-type\">Context</span>)</span></span> {</span>",
                                        "-<span class=\"line\">       context.report(ISSUE, Location.create(context.file),</span>",
                                        "-<span class=\"line\">           <span class=\"hljs-string\">\"I complain a lot\"</span>)</span>",
                                        "-<span class=\"line\">   }</span>",
                                        "-<span class=\"line\">}</span></div></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyDetector</span> : <span class=\"hljs-type\">Detector</span></span>() {",
                                        "+<span class=\"line\"></span>   <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">run</span><span class=\"hljs-params\">(context: <span class=\"hljs-type\">Context</span>)</span></span> {",
                                        "+<span class=\"line\"></span>       context.report(ISSUE, Location.create(context.file),",
                                        "+<span class=\"line\"></span>           <span class=\"hljs-string\">\"I complain a lot\"</span>)",
                                        "+<span class=\"line\"></span>   }",
                                        "+<span class=\"line\"></span>}</div></code></pre><p>",
                                        " ",
                                        " This will just complain in every single file. Obviously, no real lint",
                                        " detector does this; we want to do some analysis and <strong class=\"asterisk\">conditionally</strong>"
                                    ],
                                    [
                                        " if it encounters a <code>&lt;bitmap&gt;</code> tag it will report that <code>&lt;vector&gt;</code> should",
                                        " be used instead:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.Detector</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.Detector.XmlScanner</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.Location</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.XmlContext</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> org.w3c.dom.Element</span>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.Detector",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.Detector.XmlScanner",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.Location",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.XmlContext",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> org.w3c.dom.Element",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyDetector</span> : <span class=\"hljs-type\">Detector</span></span>(), XmlScanner {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getApplicableElements</span><span class=\"hljs-params\">()</span></span> = listOf(<span class=\"hljs-string\">\"bitmap\"</span>)</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyDetector</span> : <span class=\"hljs-type\">Detector</span></span>(), XmlScanner {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getApplicableElements</span><span class=\"hljs-params\">()</span></span> = listOf(<span class=\"hljs-string\">\"bitmap\"</span>)",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">visitElement</span><span class=\"hljs-params\">(context: <span class=\"hljs-type\">XmlContext</span>, element: <span class=\"hljs-type\">Element</span>)</span></span> {</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-keyword\">val</span> incident = Incident(context, ISSUE)</span>",
                                        "-<span class=\"line\">            .message( <span class=\"hljs-string\">\"Use `&lt;vector&gt;` instead of `&lt;bitmap&gt;`\"</span>)</span>",
                                        "-<span class=\"line\">            .at(element)</span>",
                                        "-<span class=\"line\">        context.report(incident))</span>",
                                        "-<span class=\"line\">    }</span>",
                                        "-<span class=\"line\">}</span></div></code></pre><p>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">visitElement</span><span class=\"hljs-params\">(context: <span class=\"hljs-type\">XmlContext</span>, element: <span class=\"hljs-type\">Element</span>)</span></span> {",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-keyword\">val</span> incident = Incident(context, ISSUE)",
                                        "+<span class=\"line\"></span>            .message( <span class=\"hljs-string\">\"Use `&lt;vector&gt;` instead of `&lt;bitmap&gt;`\"</span>)",
                                        "+<span class=\"line\"></span>            .at(element)",
                                        "+<span class=\"line\"></span>        context.report(incident))",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>}</div></code></pre><p>",
                                        " ",
                                        " The above is using the new <code>Incident</code> API from Lint 7.0 and on; in",
                                        " older versions you can use the following API, which still works in 7.0:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyDetector</span> : <span class=\"hljs-type\">Detector</span></span>(), XmlScanner {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getApplicableElements</span><span class=\"hljs-params\">()</span></span> = listOf(<span class=\"hljs-string\">\"bitmap\"</span>)</span>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyDetector</span> : <span class=\"hljs-type\">Detector</span></span>(), XmlScanner {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getApplicableElements</span><span class=\"hljs-params\">()</span></span> = listOf(<span class=\"hljs-string\">\"bitmap\"</span>)",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">visitElement</span><span class=\"hljs-params\">(context: <span class=\"hljs-type\">XmlContext</span>, element: <span class=\"hljs-type\">Element</span>)</span></span> {</span>",
                                        "-<span class=\"line\">        context.report(ISSUE, context.getLocation(element),</span>",
                                        "-<span class=\"line\">            <span class=\"hljs-string\">\"Use `&lt;vector&gt;` instead of `&lt;bitmap&gt;`\"</span>)</span>",
                                        "-<span class=\"line\">    }</span>",
                                        "-<span class=\"line\">}</span></div></code></pre><p>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">visitElement</span><span class=\"hljs-params\">(context: <span class=\"hljs-type\">XmlContext</span>, element: <span class=\"hljs-type\">Element</span>)</span></span> {",
                                        "+<span class=\"line\"></span>        context.report(ISSUE, context.getLocation(element),",
                                        "+<span class=\"line\"></span>            <span class=\"hljs-string\">\"Use `&lt;vector&gt;` instead of `&lt;bitmap&gt;`\"</span>)",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>}</div></code></pre><p>",
                                        " ",
                                        " The second, older form, may seem simpler, but the new API allows a lot",
                                        " more metadata to be attached to the report, such as an override",
                                        " severity. You don't have to convert to the builder syntax to do this;",
                                        " you could also have written the second form as",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\">context.report(Incident(ISSUE, context.getLocation(element),</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-string\">\"Use `&lt;vector&gt;` instead of `&lt;bitmap&gt;`\"</span>))</span></div></code></pre>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span>context.report(Incident(ISSUE, context.getLocation(element),",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-string\">\"Use `&lt;vector&gt;` instead of `&lt;bitmap&gt;`\"</span>))</div></code></pre>",
                                        " <a class=\"target\" name=\"analyzingkotlinandjavacode\">&nbsp;</a><a class=\"target\" name=\"writingalintcheck:basics/analyzingkotlinandjavacode\">&nbsp;</a><a class=\"target\" name=\"toc2.14\">&nbsp;</a><h2>Analyzing Kotlin and Java Code</h2>",
                                        " ",
                                        " <a class=\"target\" name=\"uast\">&nbsp;</a><a class=\"target\" name=\"writingalintcheck:basics/analyzingkotlinandjavacode/uast\">&nbsp;</a><a class=\"target\" name=\"toc2.14.1\">&nbsp;</a><h3>UAST</h3>"
                                    ],
                                    [
                                        " where you're specifying a specific value directly in the argument list,",
                                        " but also for example referencing a constant from elsewhere.",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getApplicableMethodNames</span><span class=\"hljs-params\">()</span></span>: List&lt;string&gt; = listOf(<span class=\"hljs-string\">\"setRepeating\"</span>)</span>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getApplicableMethodNames</span><span class=\"hljs-params\">()</span></span>: List&lt;string&gt; = listOf(<span class=\"hljs-string\">\"setRepeating\"</span>)",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">visitMethodCall</span><span class=\"hljs-params\">(</span>",
                                        "-<span class=\"line\">    context: <span class=\"hljs-type\">JavaContext</span>,</span>",
                                        "-<span class=\"line\">    node: <span class=\"hljs-type\">UCallExpression</span>,</span>",
                                        "-<span class=\"line\">    method: <span class=\"hljs-type\">PsiMethod</span></span>",
                                        "-<span class=\"line\">)</span></span> {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">val</span> evaluator = context.evaluator</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">if</span> (evaluator.isMemberInClass(method, <span class=\"hljs-string\">\"android.app.AlarmManager\"</span>) &amp;&amp;</span>",
                                        "-<span class=\"line\">        evaluator.getParameterCount(method) == <span class=\"hljs-number\">4</span></span>",
                                        "-<span class=\"line\">    ) {</span>",
                                        "-<span class=\"line\">        ensureAtLeast(context, node, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">5000L</span>)</span>",
                                        "-<span class=\"line\">        ensureAtLeast(context, node, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">60000L</span>)</span>",
                                        "-<span class=\"line\">    }</span>",
                                        "-<span class=\"line\">}</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">visitMethodCall</span><span class=\"hljs-params\">(",
                                        "+<span class=\"line\"></span>    context: <span class=\"hljs-type\">JavaContext</span>,",
                                        "+<span class=\"line\"></span>    node: <span class=\"hljs-type\">UCallExpression</span>,",
                                        "+<span class=\"line\"></span>    method: <span class=\"hljs-type\">PsiMethod</span>",
                                        "+<span class=\"line\"></span>)</span></span> {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> evaluator = context.evaluator",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">if</span> (evaluator.isMemberInClass(method, <span class=\"hljs-string\">\"android.app.AlarmManager\"</span>) &amp;&amp;",
                                        "+<span class=\"line\"></span>        evaluator.getParameterCount(method) == <span class=\"hljs-number\">4</span>",
                                        "+<span class=\"line\"></span>    ) {",
                                        "+<span class=\"line\"></span>        ensureAtLeast(context, node, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">5000L</span>)",
                                        "+<span class=\"line\"></span>        ensureAtLeast(context, node, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">60000L</span>)",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>}",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">ensureAtLeast</span><span class=\"hljs-params\">(</span>",
                                        "-<span class=\"line\">    context: <span class=\"hljs-type\">JavaContext</span>,</span>",
                                        "-<span class=\"line\">    node: <span class=\"hljs-type\">UCallExpression</span>,</span>",
                                        "-<span class=\"line\">    parameter: <span class=\"hljs-type\">Int</span>,</span>",
                                        "-<span class=\"line\">    min: <span class=\"hljs-type\">Long</span></span>",
                                        "-<span class=\"line\">)</span></span> {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">val</span> argument = node.valueArguments[parameter]</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">val</span> value = getLongValue(context, argument)</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">if</span> (value &lt; min) {</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-keyword\">val</span> message = <span class=\"hljs-string\">\"Value will be forced up to <span class=\"hljs-variable\">$min</span> as of Android 5.1; \"</span> +</span>",
                                        "-<span class=\"line\">            <span class=\"hljs-string\">\"don't rely on this to be exact\"</span></span>",
                                        "-<span class=\"line\">        context.report(ISSUE, argument, context.getLocation(argument), message)</span>",
                                        "-<span class=\"line\">    }</span>",
                                        "-<span class=\"line\">}</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">ensureAtLeast</span><span class=\"hljs-params\">(",
                                        "+<span class=\"line\"></span>    context: <span class=\"hljs-type\">JavaContext</span>,",
                                        "+<span class=\"line\"></span>    node: <span class=\"hljs-type\">UCallExpression</span>,",
                                        "+<span class=\"line\"></span>    parameter: <span class=\"hljs-type\">Int</span>,",
                                        "+<span class=\"line\"></span>    min: <span class=\"hljs-type\">Long</span>",
                                        "+<span class=\"line\"></span>)</span></span> {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> argument = node.valueArguments[parameter]",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> value = getLongValue(context, argument)",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">if</span> (value &lt; min) {",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-keyword\">val</span> message = <span class=\"hljs-string\">\"Value will be forced up to <span class=\"hljs-variable\">$min</span> as of Android 5.1; \"</span> +",
                                        "+<span class=\"line\"></span>            <span class=\"hljs-string\">\"don't rely on this to be exact\"</span>",
                                        "+<span class=\"line\"></span>        context.report(ISSUE, argument, context.getLocation(argument), message)",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>}",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getLongValue</span><span class=\"hljs-params\">(</span>",
                                        "-<span class=\"line\">    context: <span class=\"hljs-type\">JavaContext</span>,</span>",
                                        "-<span class=\"line\">    argument: <span class=\"hljs-type\">UExpression</span></span>",
                                        "-<span class=\"line\">)</span></span>: <span class=\"hljs-built_in\">Long</span> {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">val</span> value = ConstantEvaluator.evaluate(context, argument)</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">if</span> (value <span class=\"hljs-keyword\">is</span> Number) {</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-keyword\">return</span> value.toLong()</span>",
                                        "-<span class=\"line\">    }</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getLongValue</span><span class=\"hljs-params\">(",
                                        "+<span class=\"line\"></span>    context: <span class=\"hljs-type\">JavaContext</span>,",
                                        "+<span class=\"line\"></span>    argument: <span class=\"hljs-type\">UExpression</span>",
                                        "+<span class=\"line\"></span>)</span></span>: <span class=\"hljs-built_in\">Long</span> {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> value = ConstantEvaluator.evaluate(context, argument)",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">if</span> (value <span class=\"hljs-keyword\">is</span> Number) {",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-keyword\">return</span> value.toLong()",
                                        "+<span class=\"line\"></span>    }",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">return</span> java.lang.<span class=\"hljs-built_in\">Long</span>.MAX_VALUE</span>",
                                        "-<span class=\"line\">}</span></div></code></pre>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">return</span> java.lang.<span class=\"hljs-built_in\">Long</span>.MAX_VALUE",
                                        "+<span class=\"line\"></span>}</div></code></pre>",
                                        " <a class=\"target\" name=\"lookingupuast\">&nbsp;</a><a class=\"target\" name=\"writingalintcheck:basics/analyzingkotlinandjavacode/lookingupuast\">&nbsp;</a><a class=\"target\" name=\"toc2.14.3\">&nbsp;</a><h3>Looking up UAST</h3>",
                                        " <p>",
                                        " "
                                    ],
                                    [
                                        " ",
                                        " For example, given the following unit test:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">lint().files(</span>",
                                        "-<span class=\"line\">       kotlin(<span class=\"hljs-string\">\"\"</span></span>",
                                        "-<span class=\"line\">               <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"package test.pkg<span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">               <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">               <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"class MyTest {<span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">               <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"    val s: String = <span class=\"hljs-subst\">\\\"</span>hello<span class=\"hljs-subst\">\\\"</span><span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">               <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"}<span class=\"hljs-subst\">\\n</span>\"</span>), <span class=\"hljs-operator\">...</span></span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>lint().files(",
                                        "+<span class=\"line\"></span>       kotlin(<span class=\"hljs-string\">\"\"</span>",
                                        "+<span class=\"line\"></span>               <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"package test.pkg<span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>               <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>               <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"class MyTest {<span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>               <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"    val s: String = <span class=\"hljs-subst\">\\\"</span>hello<span class=\"hljs-subst\">\\\"</span><span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>               <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"}<span class=\"hljs-subst\">\\n</span>\"</span>), <span class=\"hljs-operator\">...</span></code></pre><p>",
                                        " ",
                                        " If you evaluate <code>context.uastFile?.asRecursiveLogString()</code> from",
                                        " one of the callbacks, it will print this:",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\">UFile (package = test.pkg)</span>",
                                        "-<span class=\"line\">    UClass (name = MyTest)</span>",
                                        "-<span class=\"line\">        UField (name = s)</span>",
                                        "-<span class=\"line\">            UAnnotation (fqName = org.jetbrains.annotations.NotNull)</span>",
                                        "-<span class=\"line\">            ULiteralExpression (value = \"hello\")</span>",
                                        "-<span class=\"line\">        UAnnotationMethod (name = getS)</span>",
                                        "-<span class=\"line\">        UAnnotationMethod (name = MyTest)</span></code></pre><p>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span>UFile (package = test.pkg)",
                                        "+<span class=\"line\"></span>    UClass (name = MyTest)",
                                        "+<span class=\"line\"></span>        UField (name = s)",
                                        "+<span class=\"line\"></span>            UAnnotation (fqName = org.jetbrains.annotations.NotNull)",
                                        "+<span class=\"line\"></span>            ULiteralExpression (value = \"hello\")",
                                        "+<span class=\"line\"></span>        UAnnotationMethod (name = getS)",
                                        "+<span class=\"line\"></span>        UAnnotationMethod (name = MyTest)</code></pre><p>",
                                        " ",
                                        " (This also illustrates the earlier point about UAST representing the",
                                        " Java view of the code; here the read-only public Kotlin property \u201ds\u201c is"
                                    ],
                                    [
                                        "    for more details about this.</div>",
                                        " ",
                                        " <p></p>",
                                        "-<a class=\"target\" name=\"psi\">&nbsp;</a><a class=\"target\" name=\"writingalintcheck:basics/analyzingkotlinandjavacode/psi\">&nbsp;</a><a class=\"target\" name=\"toc2.14.5\">&nbsp;</a><h3>PSI</h3>",
                                        "+<a class=\"target\" name=\"implicitcalls\">&nbsp;</a><a class=\"target\" name=\"writingalintcheck:basics/analyzingkotlinandjavacode/implicitcalls\">&nbsp;</a><a class=\"target\" name=\"toc2.14.5\">&nbsp;</a><h3>Implicit Calls</h3>",
                                        "+<p>",
                                        "+",
                                        "+",
                                        "+Kotlin supports operator overloading for a number of built-in",
                                        "+operators. For example, if you have the following code,",
                                        "+",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">test</span><span class=\"hljs-params\">(n1: <span class=\"hljs-type\">BigDecimal</span>, n2: <span class=\"hljs-type\">BigDecimal</span>)</span></span> {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-comment\">// Here, this is really an infix call to BigDecimal#compareTo</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">if</span> (n1 &lt; n2) {",
                                        "+<span class=\"line\"></span>        ...",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>}</code></pre><p>",
                                        "+",
                                        "+the <code>&lt;</code> here is actually a function call (which you can verify by",
                                        "+invoking Go To Declaration over the symbol in the IDE). This is not",
                                        "+something that is built specially for the <code>BigDecimal</code> class; this",
                                        "+works on any of your Java classes as well, and Kotlin if you put the",
                                        "+<code>operator</code> modifier as part of the function declaration.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+However, note that in the abstract syntax tree, this is <strong class=\"asterisk\">not</strong>",
                                        "+represented as a <code>UCallExpression</code>; here we'll have a",
                                        "+<code>UBinaryExpression</code> with left operand <code>n1</code>, right operand <code>n2</code> and",
                                        "+operator <code>UastBinaryOperator.LESS</code>. This means that if your lint check",
                                        "+is specifically looking at <code>compareTo</code> calls, you can't just visit",
                                        "+every <code>UCallExpression</code>; you <em class=\"asterisk\">also</em> have to visit every",
                                        "+<code>UBinaryExpression</code>, and check whether it's invoking a <code>compareTo</code>",
                                        "+method.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+This is not just specific to binary operators; it also applies to unary",
                                        "+operators (such as <code>!</code>, <code>-</code>, <code>++</code>, and so on), as well as even array",
                                        "+accesses; an array access can map to a <code>get</code> call or a <code>set</code> call",
                                        "+depending on how it's used.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+Lint has some special support to help handle these situations.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+First, the built-in support for call callbacks (where you register an",
                                        "+interest in call names by returning names from the",
                                        "+<code>getApplicableMethodNames</code> and then responding in the <code>visitMethodCall</code>",
                                        "+callback) already handles this automatically. If you register for",
                                        "+example an interest in method calls to <code>compareTo</code>, it will invoke your",
                                        "+callback for the binary operator scenario shown above as well, passing",
                                        "+you a call which has the right value arguments, method name, and so on.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+The way this works is that lint can create a \u201dwrapper\u201c class which",
                                        "+presents the underlying <code>UBinaryExpression</code> (or",
                                        "+<code>UArrayAccessExpression</code> and so on) as a <code>UCallExpression</code>. In the case",
                                        "+of a binary operator, the value parameter list will be the left and",
                                        "+right operands. This means that your code can just process this as if",
                                        "+the code had written as an explicit call instead of using the operator",
                                        "+syntax. You can also directly look for this wrapper class,",
                                        "+<code>UImplicitCallExpression</code>, which has an accessor method for looking up",
                                        "+the original or underlying element. And you can construct these",
                                        "+wrappers yourself, via <code>UBinaryExpression.asCall()</code>,",
                                        "+<code>UUnaryExpression.asCall()</code>, and <code>UArrayAccessExpression.asCall()</code>.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+There is also a visitor you can use to visit call calls \u2014",
                                        "+<code>UastCallVisitor</code>, which will visit all calls, including those from",
                                        "+array accesses and unary operators and binary operators.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+This support is particularly useful for array accesses, since unlike",
                                        "+the operator expression, there is no <code>resolveOperator</code> method on",
                                        "+<code>UArrayExpression</code>. There is an open request for that in the UAST issue",
                                        "+tracker (KTIJ-18765), but for now, lint has a workaround to handle the",
                                        "+resolve on its own.",
                                        "+",
                                        "+</p>",
                                        "+<a class=\"target\" name=\"psi\">&nbsp;</a><a class=\"target\" name=\"writingalintcheck:basics/analyzingkotlinandjavacode/psi\">&nbsp;</a><a class=\"target\" name=\"toc2.14.6\">&nbsp;</a><h3>PSI</h3>",
                                        " <p>",
                                        " ",
                                        " "
                                    ],
                                    [
                                        " The <code>checks</code> project is where the actual lint checks are implemented.",
                                        " This project is a plain Kotlin or plain Java Gradle project:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">apply plugin: <span class=\"hljs-string\">'java-library'</span></span>",
                                        "-<span class=\"line\">apply plugin: <span class=\"hljs-string\">'kotlin'</span></span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>apply plugin: <span class=\"hljs-string\">'java-library'</span>",
                                        "+<span class=\"line\"></span>apply plugin: <span class=\"hljs-string\">'kotlin'</span></code></pre><p>",
                                        " ",
                                        " ",
                                        " "
                                    ],
                                    [
                                        " The Gradle file also declares the dependencies on lint APIs",
                                        " that our detector needs:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\">dependencies {</span>",
                                        "-<span class=\"line\">    compileOnly <span class=\"hljs-string\">\"com.android.tools.lint:lint-api:<span class=\"hljs-variable\">$lintVersion</span>\"</span></span>",
                                        "-<span class=\"line\">    compileOnly <span class=\"hljs-string\">\"com.android.tools.lint:lint-checks:<span class=\"hljs-variable\">$lintVersion</span>\"</span></span>",
                                        "-<span class=\"line\">    testImplementation <span class=\"hljs-string\">\"com.android.tools.lint:lint-tests:<span class=\"hljs-variable\">$lintVersion</span>\"</span></span>",
                                        "-<span class=\"line\">}</span></div></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span>dependencies {",
                                        "+<span class=\"line\"></span>    compileOnly <span class=\"hljs-string\">\"com.android.tools.lint:lint-api:<span class=\"hljs-variable\">$lintVersion</span>\"</span>",
                                        "+<span class=\"line\"></span>    compileOnly <span class=\"hljs-string\">\"com.android.tools.lint:lint-checks:<span class=\"hljs-variable\">$lintVersion</span>\"</span>",
                                        "+<span class=\"line\"></span>    testImplementation <span class=\"hljs-string\">\"com.android.tools.lint:lint-tests:<span class=\"hljs-variable\">$lintVersion</span>\"</span>",
                                        "+<span class=\"line\"></span>}</div></code></pre><p>",
                                        " ",
                                        " The second dependency is usually not necessary; you just need to depend",
                                        " on the Lint API. However, the built-in checks define a lot of"
                                    ],
                                    [
                                        " </p><p>",
                                        " ",
                                        " Here's the top level build.gradle",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\">buildscript {</span>",
                                        "-<span class=\"line\">    ext {</span>",
                                        "-<span class=\"line\">        kotlinVersion = <span class=\"hljs-string\">'1.4.32'</span></span>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span>buildscript {",
                                        "+<span class=\"line\"></span>    ext {",
                                        "+<span class=\"line\"></span>        kotlinVersion = <span class=\"hljs-string\">'1.4.32'</span>",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-comment\">// Current lint target: Studio 4.2 / AGP 7</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-comment\">//gradlePluginVersion = '4.2.0-beta06'</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-comment\">//lintVersion = '27.2.0-beta06'</span></span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-comment\">// Current lint target: Studio 4.2 / AGP 7</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-comment\">//gradlePluginVersion = '4.2.0-beta06'</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-comment\">//lintVersion = '27.2.0-beta06'</span>",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-comment\">// Upcoming lint target: Arctic Fox / AGP 7</span></span>",
                                        "-<span class=\"line\">        gradlePluginVersion = <span class=\"hljs-string\">'7.0.0-alpha10'</span></span>",
                                        "-<span class=\"line\">        lintVersion = <span class=\"hljs-string\">'30.0.0-alpha10'</span></span>",
                                        "-<span class=\"line\">    }</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-comment\">// Upcoming lint target: Arctic Fox / AGP 7</span>",
                                        "+<span class=\"line\"></span>        gradlePluginVersion = <span class=\"hljs-string\">'7.0.0-alpha10'</span>",
                                        "+<span class=\"line\"></span>        lintVersion = <span class=\"hljs-string\">'30.0.0-alpha10'</span>",
                                        "+<span class=\"line\"></span>    }",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">    repositories {</span>",
                                        "-<span class=\"line\">        google()</span>",
                                        "-<span class=\"line\">        mavenCentral()</span>",
                                        "-<span class=\"line\">    }</span>",
                                        "-<span class=\"line\">    dependencies {</span>",
                                        "-<span class=\"line\">        classpath <span class=\"hljs-string\">\"com.android.tools.build:gradle:<span class=\"hljs-variable\">$gradlePluginVersion</span>\"</span></span>",
                                        "-<span class=\"line\">        classpath <span class=\"hljs-string\">\"org.jetbrains.kotlin:kotlin-gradle-plugin:<span class=\"hljs-variable\">$kotlinVersion</span>\"</span></span>",
                                        "-<span class=\"line\">    }</span>",
                                        "-<span class=\"line\">}</span></div></code></pre><p>",
                                        "+<span class=\"line\"></span>    repositories {",
                                        "+<span class=\"line\"></span>        google()",
                                        "+<span class=\"line\"></span>        mavenCentral()",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>    dependencies {",
                                        "+<span class=\"line\"></span>        classpath <span class=\"hljs-string\">\"com.android.tools.build:gradle:<span class=\"hljs-variable\">$gradlePluginVersion</span>\"</span>",
                                        "+<span class=\"line\"></span>        classpath <span class=\"hljs-string\">\"org.jetbrains.kotlin:kotlin-gradle-plugin:<span class=\"hljs-variable\">$kotlinVersion</span>\"</span>",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>}</div></code></pre><p>",
                                        " ",
                                        " The <code>$lintVersion</code> variable is defined on line 11. We don't technically",
                                        " need to define the <code>$gradlePluginVersion</code> here or add it to the classpath on line 19, but that's done so that we can add the <code>lint</code>"
                                    ],
                                    [
                                        " ",
                                        " The lint checks source project is very simple",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\"><span class=\"hljs-selector-tag\">checks</span>/<span class=\"hljs-selector-tag\">build</span><span class=\"hljs-selector-class\">.gradle</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-selector-tag\">checks</span>/<span class=\"hljs-selector-tag\">src</span>/<span class=\"hljs-selector-tag\">main</span>/<span class=\"hljs-selector-tag\">resources</span>/<span class=\"hljs-selector-tag\">META-INF</span>/<span class=\"hljs-selector-tag\">services</span>/<span class=\"hljs-selector-tag\">com</span><span class=\"hljs-selector-class\">.android</span><span class=\"hljs-selector-class\">.tools</span><span class=\"hljs-selector-class\">.lint</span><span class=\"hljs-selector-class\">.client</span><span class=\"hljs-selector-class\">.api</span><span class=\"hljs-selector-class\">.IssueRegistry</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-selector-tag\">checks</span>/<span class=\"hljs-selector-tag\">src</span>/<span class=\"hljs-selector-tag\">main</span>/<span class=\"hljs-selector-tag\">java</span>/<span class=\"hljs-selector-tag\">com</span>/<span class=\"hljs-selector-tag\">example</span>/<span class=\"hljs-selector-tag\">lint</span>/<span class=\"hljs-selector-tag\">checks</span>/<span class=\"hljs-selector-tag\">SampleIssueRegistry</span><span class=\"hljs-selector-class\">.kt</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-selector-tag\">checks</span>/<span class=\"hljs-selector-tag\">src</span>/<span class=\"hljs-selector-tag\">main</span>/<span class=\"hljs-selector-tag\">java</span>/<span class=\"hljs-selector-tag\">com</span>/<span class=\"hljs-selector-tag\">example</span>/<span class=\"hljs-selector-tag\">lint</span>/<span class=\"hljs-selector-tag\">checks</span>/<span class=\"hljs-selector-tag\">SampleCodeDetector</span><span class=\"hljs-selector-class\">.kt</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-selector-tag\">checks</span>/<span class=\"hljs-selector-tag\">src</span>/<span class=\"hljs-selector-tag\">test</span>/<span class=\"hljs-selector-tag\">java</span>/<span class=\"hljs-selector-tag\">com</span>/<span class=\"hljs-selector-tag\">example</span>/<span class=\"hljs-selector-tag\">lint</span>/<span class=\"hljs-selector-tag\">checks</span>/<span class=\"hljs-selector-tag\">SampleCodeDetectorTest</span><span class=\"hljs-selector-class\">.kt</span></span></code></pre><p>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span><span class=\"hljs-selector-tag\">checks</span>/<span class=\"hljs-selector-tag\">build</span><span class=\"hljs-selector-class\">.gradle</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-selector-tag\">checks</span>/<span class=\"hljs-selector-tag\">src</span>/<span class=\"hljs-selector-tag\">main</span>/<span class=\"hljs-selector-tag\">resources</span>/<span class=\"hljs-selector-tag\">META-INF</span>/<span class=\"hljs-selector-tag\">services</span>/<span class=\"hljs-selector-tag\">com</span><span class=\"hljs-selector-class\">.android</span><span class=\"hljs-selector-class\">.tools</span><span class=\"hljs-selector-class\">.lint</span><span class=\"hljs-selector-class\">.client</span><span class=\"hljs-selector-class\">.api</span><span class=\"hljs-selector-class\">.IssueRegistry</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-selector-tag\">checks</span>/<span class=\"hljs-selector-tag\">src</span>/<span class=\"hljs-selector-tag\">main</span>/<span class=\"hljs-selector-tag\">java</span>/<span class=\"hljs-selector-tag\">com</span>/<span class=\"hljs-selector-tag\">example</span>/<span class=\"hljs-selector-tag\">lint</span>/<span class=\"hljs-selector-tag\">checks</span>/<span class=\"hljs-selector-tag\">SampleIssueRegistry</span><span class=\"hljs-selector-class\">.kt</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-selector-tag\">checks</span>/<span class=\"hljs-selector-tag\">src</span>/<span class=\"hljs-selector-tag\">main</span>/<span class=\"hljs-selector-tag\">java</span>/<span class=\"hljs-selector-tag\">com</span>/<span class=\"hljs-selector-tag\">example</span>/<span class=\"hljs-selector-tag\">lint</span>/<span class=\"hljs-selector-tag\">checks</span>/<span class=\"hljs-selector-tag\">SampleCodeDetector</span><span class=\"hljs-selector-class\">.kt</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-selector-tag\">checks</span>/<span class=\"hljs-selector-tag\">src</span>/<span class=\"hljs-selector-tag\">test</span>/<span class=\"hljs-selector-tag\">java</span>/<span class=\"hljs-selector-tag\">com</span>/<span class=\"hljs-selector-tag\">example</span>/<span class=\"hljs-selector-tag\">lint</span>/<span class=\"hljs-selector-tag\">checks</span>/<span class=\"hljs-selector-tag\">SampleCodeDetectorTest</span><span class=\"hljs-selector-class\">.kt</span></code></pre><p>",
                                        " ",
                                        " First is the build file, which we've discussed above.",
                                        " "
                                    ],
                                    [
                                        " And the <strong class=\"asterisk\">contents</strong> of that file is a single line, the fully",
                                        " qualified name of the issue registry:",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\"><span class=\"hljs-variable\">$ </span>cat checks/src/main/resources/META-INF/services/com.android.tools.lint.client.api.IssueRegistry</span>",
                                        "-<span class=\"line\">com.example.lint.checks.SampleIssueRegistry</span></code></pre><p>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span><span class=\"hljs-variable\">$ </span>cat checks/src/main/resources/META-INF/services/com.android.tools.lint.client.api.IssueRegistry",
                                        "+<span class=\"line\"></span>com.example.lint.checks.SampleIssueRegistry</code></pre><p>",
                                        " ",
                                        " (The service loader mechanism is understood by IntelliJ, so it will",
                                        " correctly update the service file contents if the issue registry is"
                                    ],
                                    [
                                        " In its simplest form we'd only need to have the following code",
                                        " in that file:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\"><span class=\"hljs-title\">package</span> com.example.lint.checks</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> com.android.tools.lint.client.api.IssueRegistry</span>",
                                        "-<span class=\"line\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-type\">SampleIssueRegistry</span> : <span class=\"hljs-type\">IssueRegistry</span>() {</span>",
                                        "-<span class=\"line\">    override val issues = listOf(<span class=\"hljs-type\">SampleCodeDetector</span>.<span class=\"hljs-type\">ISSUE</span>)</span>",
                                        "-<span class=\"line\">}</span></span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-title\">package</span> com.example.lint.checks",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> com.android.tools.lint.client.api.IssueRegistry",
                                        "+<span class=\"line\"></span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-type\">SampleIssueRegistry</span> : <span class=\"hljs-type\">IssueRegistry</span>() {",
                                        "+<span class=\"line\"></span>    override val issues = listOf(<span class=\"hljs-type\">SampleCodeDetector</span>.<span class=\"hljs-type\">ISSUE</span>)",
                                        "+<span class=\"line\"></span>}</span></code></pre><p>",
                                        " ",
                                        " However, we're also providing some additional metadata about these lint",
                                        " checks, such as the <code>Vendor</code>, which contains information about the"
                                    ],
                                    [
                                        " The <code>IssueRegistry</code> references the <code>SampleCodeDetector.ISSUE</code>,",
                                        " so let's take a look at <code>SampleCodeDetector</code>:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SampleCodeDetector</span> : <span class=\"hljs-type\">Detector</span></span>(), UastScanner {</span>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SampleCodeDetector</span> : <span class=\"hljs-type\">Detector</span></span>(), UastScanner {",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-comment\">// ...</span></span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-comment\">// ...</span>",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">companion</span> <span class=\"hljs-keyword\">object</span> {</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-comment\">/**</span>",
                                        "-<span class=\"line\">         * Issue describing the problem and pointing to the detector</span>",
                                        "-<span class=\"line\">         * implementation.</span>",
                                        "-<span class=\"line\">         */</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-meta\">@JvmField</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-keyword\">val</span> ISSUE: Issue = Issue.create(</span>",
                                        "-<span class=\"line\">            <span class=\"hljs-comment\">// ID: used in @SuppressLint warnings etc</span></span>",
                                        "-<span class=\"line\">            id = <span class=\"hljs-string\">\"ShortUniqueId\"</span>,</span>",
                                        "-<span class=\"line\">            <span class=\"hljs-comment\">// Title -- shown in the IDE's preference dialog, as category headers in the</span></span>",
                                        "-<span class=\"line\">            <span class=\"hljs-comment\">// Analysis results window, etc</span></span>",
                                        "-<span class=\"line\">            briefDescription = <span class=\"hljs-string\">\"Lint Mentions\"</span>,</span>",
                                        "-<span class=\"line\">            <span class=\"hljs-comment\">// Full explanation of the issue; you can use some markdown markup such as</span></span>",
                                        "-<span class=\"line\">            <span class=\"hljs-comment\">// `monospace`, *italic*, and **bold**.</span></span>",
                                        "-<span class=\"line\">            explanation = <span class=\"hljs-string\">\"\"\"</span>",
                                        "-<span class=\"line\">                    This check highlights string literals in code which mentions the word `lint`. \\</span>",
                                        "-<span class=\"line\">                    Blah blah blah.</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">companion</span> <span class=\"hljs-keyword\">object</span> {",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-comment\">/**",
                                        "+<span class=\"line\"></span>         * Issue describing the problem and pointing to the detector",
                                        "+<span class=\"line\"></span>         * implementation.",
                                        "+<span class=\"line\"></span>         */</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-meta\">@JvmField</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-keyword\">val</span> ISSUE: Issue = Issue.create(",
                                        "+<span class=\"line\"></span>            <span class=\"hljs-comment\">// ID: used in @SuppressLint warnings etc</span>",
                                        "+<span class=\"line\"></span>            id = <span class=\"hljs-string\">\"SampleId\"</span>,",
                                        "+<span class=\"line\"></span>            <span class=\"hljs-comment\">// Title -- shown in the IDE's preference dialog, as category headers in the</span>",
                                        "+<span class=\"line\"></span>            <span class=\"hljs-comment\">// Analysis results window, etc</span>",
                                        "+<span class=\"line\"></span>            briefDescription = <span class=\"hljs-string\">\"Lint Mentions\"</span>,",
                                        "+<span class=\"line\"></span>            <span class=\"hljs-comment\">// Full explanation of the issue; you can use some markdown markup such as</span>",
                                        "+<span class=\"line\"></span>            <span class=\"hljs-comment\">// `monospace`, *italic*, and **bold**.</span>",
                                        "+<span class=\"line\"></span>            explanation = <span class=\"hljs-string\">\"\"\"",
                                        "+<span class=\"line\"></span>                    This check highlights string literals in code which mentions the word `lint`. \\",
                                        "+<span class=\"line\"></span>                    Blah blah blah.",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">                    Another paragraph here.</span>",
                                        "-<span class=\"line\">                    \"\"\"</span>,</span>",
                                        "-<span class=\"line\">            category = Category.CORRECTNESS,</span>",
                                        "-<span class=\"line\">            priority = <span class=\"hljs-number\">6</span>,</span>",
                                        "-<span class=\"line\">            severity = Severity.WARNING,</span>",
                                        "-<span class=\"line\">            implementation = Implementation(</span>",
                                        "-<span class=\"line\">                SampleCodeDetector::<span class=\"hljs-keyword\">class</span>.java,</span>",
                                        "-<span class=\"line\">                Scope.JAVA_FILE_SCOPE</span>",
                                        "-<span class=\"line\">            )</span>",
                                        "-<span class=\"line\">        )</span>",
                                        "-<span class=\"line\">    }</span>",
                                        "-<span class=\"line\">}</span></div></code></pre><p>",
                                        "+<span class=\"line\"></span>                    Another paragraph here.",
                                        "+<span class=\"line\"></span>                    \"\"\"</span>,",
                                        "+<span class=\"line\"></span>            category = Category.CORRECTNESS,",
                                        "+<span class=\"line\"></span>            priority = <span class=\"hljs-number\">6</span>,",
                                        "+<span class=\"line\"></span>            severity = Severity.WARNING,",
                                        "+<span class=\"line\"></span>            implementation = Implementation(",
                                        "+<span class=\"line\"></span>                SampleCodeDetector::<span class=\"hljs-keyword\">class</span>.java,",
                                        "+<span class=\"line\"></span>                Scope.JAVA_FILE_SCOPE",
                                        "+<span class=\"line\"></span>            )",
                                        "+<span class=\"line\"></span>        )",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>}</div></code></pre><p>",
                                        " ",
                                        " The <code>Issue</code> registration is pretty self-explanatory, and the details",
                                        " about issue registration are covered in the <a href=\"#writingalintcheck:basics\">basics</a>"
                                    ],
                                    [
                                        " the above I deleted the body of that class; here it is now without the",
                                        " issue registration at the end:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-keyword\">package</span> com.example.lint.checks</span>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-keyword\">package</span> com.example.lint.checks",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> com.android.tools.lint.client.api.UElementHandler</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.Category</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.Detector</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.Detector.UastScanner</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.Implementation</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.Issue</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.JavaContext</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.Scope</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.Severity</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> org.jetbrains.uast.UElement</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> org.jetbrains.uast.ULiteralExpression</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> org.jetbrains.uast.evaluateString</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> com.android.tools.lint.client.api.UElementHandler",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.Category",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.Detector",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.Detector.UastScanner",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.Implementation",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.Issue",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.JavaContext",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.Scope",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> com.android.tools.lint.detector.api.Severity",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> org.jetbrains.uast.UElement",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> org.jetbrains.uast.ULiteralExpression",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> org.jetbrains.uast.evaluateString",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SampleCodeDetector</span> : <span class=\"hljs-type\">Detector</span></span>(), UastScanner {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getApplicableUastTypes</span><span class=\"hljs-params\">()</span></span>: List&lt;<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>&lt;<span class=\"hljs-type\">out uelement?=\"\"</span>&gt;&gt; </span>{</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-keyword\">return</span> listOf(ULiteralExpression::<span class=\"hljs-keyword\">class</span>.java)</span>",
                                        "-<span class=\"line\">    }</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SampleCodeDetector</span> : <span class=\"hljs-type\">Detector</span></span>(), UastScanner {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getApplicableUastTypes</span><span class=\"hljs-params\">()</span></span>: List&lt;<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>&lt;<span class=\"hljs-type\">out uelement?=\"\"</span>&gt;&gt; </span>{",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-keyword\">return</span> listOf(ULiteralExpression::<span class=\"hljs-keyword\">class</span>.java)",
                                        "+<span class=\"line\"></span>    }",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">createUastHandler</span><span class=\"hljs-params\">(context: <span class=\"hljs-type\">JavaContext</span>)</span></span>: UElementHandler {</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">object</span> : UElementHandler() {</span>",
                                        "-<span class=\"line\">            <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">visitLiteralExpression</span><span class=\"hljs-params\">(node: <span class=\"hljs-type\">ULiteralExpression</span>)</span></span> {</span>",
                                        "-<span class=\"line\">                <span class=\"hljs-keyword\">val</span> string = node.evaluateString() ?: <span class=\"hljs-keyword\">return</span></span>",
                                        "-<span class=\"line\">                <span class=\"hljs-keyword\">if</span> (string.contains(<span class=\"hljs-string\">\"lint\"</span>) &amp;&amp; string.matches(Regex(<span class=\"hljs-string\">\".*\\\\blint\\\\b.*\"</span>))) {</span>",
                                        "-<span class=\"line\">                    context.report(</span>",
                                        "-<span class=\"line\">                        ISSUE, node, context.getLocation(node),</span>",
                                        "-<span class=\"line\">                        <span class=\"hljs-string\">\"This code mentions `lint`: **Congratulations**\"</span></span>",
                                        "-<span class=\"line\">                    )</span>",
                                        "-<span class=\"line\">                }</span>",
                                        "-<span class=\"line\">            }</span>",
                                        "-<span class=\"line\">        }</span>",
                                        "-<span class=\"line\">    }</span>",
                                        "-<span class=\"line\">}</span></div></code></pre><p>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">createUastHandler</span><span class=\"hljs-params\">(context: <span class=\"hljs-type\">JavaContext</span>)</span></span>: UElementHandler {",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">object</span> : UElementHandler() {",
                                        "+<span class=\"line\"></span>            <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">visitLiteralExpression</span><span class=\"hljs-params\">(node: <span class=\"hljs-type\">ULiteralExpression</span>)</span></span> {",
                                        "+<span class=\"line\"></span>                <span class=\"hljs-keyword\">val</span> string = node.evaluateString() ?: <span class=\"hljs-keyword\">return</span>",
                                        "+<span class=\"line\"></span>                <span class=\"hljs-keyword\">if</span> (string.contains(<span class=\"hljs-string\">\"lint\"</span>) &amp;&amp; string.matches(Regex(<span class=\"hljs-string\">\".*\\\\blint\\\\b.*\"</span>))) {",
                                        "+<span class=\"line\"></span>                    context.report(",
                                        "+<span class=\"line\"></span>                        ISSUE, node, context.getLocation(node),",
                                        "+<span class=\"line\"></span>                        <span class=\"hljs-string\">\"This code mentions `lint`: **Congratulations**\"</span>",
                                        "+<span class=\"line\"></span>                    )",
                                        "+<span class=\"line\"></span>                }",
                                        "+<span class=\"line\"></span>            }",
                                        "+<span class=\"line\"></span>        }",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>}</div></code></pre><p>",
                                        " ",
                                        " This lint check is very simple; for Kotlin and Java files, it visits",
                                        " all the literal strings, and if the string contains the word \u201clint\u201d,"
                                    ],
                                    [
                                        " ",
                                        " Last but not least, let's not forget the unit test:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-keyword\">package</span> com.example.lint.checks</span>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-keyword\">package</span> com.example.lint.checks",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> com.android.tools.lint.checks.infrastructure.TestFiles.java</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> com.android.tools.lint.checks.infrastructure.TestLintTask.lint</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> org.junit.Test</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> com.android.tools.lint.checks.infrastructure.TestFiles.java",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> com.android.tools.lint.checks.infrastructure.TestLintTask.lint",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> org.junit.Test",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SampleCodeDetectorTest</span> </span>{</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-meta\">@Test</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">testBasic</span><span class=\"hljs-params\">()</span></span> {</span>",
                                        "-<span class=\"line\">        lint().files(</span>",
                                        "-<span class=\"line\">            java(</span>",
                                        "-<span class=\"line\">                <span class=\"hljs-string\">\"\"\"</span>",
                                        "-<span class=\"line\">                package test.pkg;</span>",
                                        "-<span class=\"line\">                public class TestClass1 {</span>",
                                        "-<span class=\"line\">                    // In a comment, mentioning \"lint\" has no effect</span>",
                                        "-<span class=\"line\">                    private static String s1 = \"Ignore non-word usages: linting\";</span>",
                                        "-<span class=\"line\">                    private static String s2 = \"Let's say it: lint\";</span>",
                                        "-<span class=\"line\">                }</span>",
                                        "-<span class=\"line\">                \"\"\"</span></span>",
                                        "-<span class=\"line\">            ).indented()</span>",
                                        "-<span class=\"line\">        )</span>",
                                        "-<span class=\"line\">        .issues(SampleCodeDetector.ISSUE)</span>",
                                        "-<span class=\"line\">        .run()</span>",
                                        "-<span class=\"line\">        .<span class=\"hljs-keyword\">expect</span>(</span>",
                                        "-<span class=\"line\">            <span class=\"hljs-string\">\"\"\"</span>",
                                        "-<span class=\"line\">            src/test/pkg/TestClass1.java:5: Warning: This code mentions lint: Congratulations [ShortUniqueId]</span>",
                                        "-<span class=\"line\">                private static String s2 = \"Let's say it: lint\";</span>",
                                        "-<span class=\"line\">                                           \u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c</span>",
                                        "-<span class=\"line\">            0 errors, 1 warnings</span>",
                                        "-<span class=\"line\">            \"\"\"</span></span>",
                                        "-<span class=\"line\">        )</span>",
                                        "-<span class=\"line\">    }</span>",
                                        "-<span class=\"line\">}</span></div></code></pre><p>",
                                        "+<span class=\"line\"></span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SampleCodeDetectorTest</span> </span>{",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-meta\">@Test</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">testBasic</span><span class=\"hljs-params\">()</span></span> {",
                                        "+<span class=\"line\"></span>        lint().files(",
                                        "+<span class=\"line\"></span>            java(",
                                        "+<span class=\"line\"></span>                <span class=\"hljs-string\">\"\"\"",
                                        "+<span class=\"line\"></span>                package test.pkg;",
                                        "+<span class=\"line\"></span>                public class TestClass1 {",
                                        "+<span class=\"line\"></span>                    // In a comment, mentioning \"lint\" has no effect",
                                        "+<span class=\"line\"></span>                    private static String s1 = \"Ignore non-word usages: linting\";",
                                        "+<span class=\"line\"></span>                    private static String s2 = \"Let's say it: lint\";",
                                        "+<span class=\"line\"></span>                }",
                                        "+<span class=\"line\"></span>                \"\"\"</span>",
                                        "+<span class=\"line\"></span>            ).indented()",
                                        "+<span class=\"line\"></span>        )",
                                        "+<span class=\"line\"></span>        .issues(SampleCodeDetector.ISSUE)",
                                        "+<span class=\"line\"></span>        .run()",
                                        "+<span class=\"line\"></span>        .<span class=\"hljs-keyword\">expect</span>(",
                                        "+<span class=\"line\"></span>            <span class=\"hljs-string\">\"\"\"",
                                        "+<span class=\"line\"></span>            src/test/pkg/TestClass1.java:5: Warning: This code mentions lint: Congratulations [SampleId]",
                                        "+<span class=\"line\"></span>                private static String s2 = \"Let's say it: lint\";",
                                        "+<span class=\"line\"></span>                                           \u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c",
                                        "+<span class=\"line\"></span>            0 errors, 1 warnings",
                                        "+<span class=\"line\"></span>            \"\"\"</span>",
                                        "+<span class=\"line\"></span>        )",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>}</div></code></pre><p>",
                                        " ",
                                        " As you can see, writing a lint unit test is very simple, because",
                                        " lint ships with a dedicated testing library; this is what the",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\">    testImplementation <span class=\"hljs-string\">\"com.android.tools.lint:lint-tests:<span class=\"hljs-variable\">$lintVersion</span>\"</span></span></code></pre><p>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span>    testImplementation <span class=\"hljs-string\">\"com.android.tools.lint:lint-tests:<span class=\"hljs-variable\">$lintVersion</span>\"</span></code></pre><p>",
                                        " ",
                                        " dependency in build.gradle pulled in.",
                                        " "
                                    ],
                                    [
                                        " You can manually point it to your custom lint checks jar files by using",
                                        " the environment variable <code>ANDROID_LINT_JARS</code>:",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> <span class=\"hljs-built_in\">export</span> ANDROID_LINT_JARS=/path/to/first.jar:/path/to/second.jar</span></span></code></pre><p>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span><span class=\"hljs-meta\">$</span><span class=\"bash\"> <span class=\"hljs-built_in\">export</span> ANDROID_LINT_JARS=/path/to/first.jar:/path/to/second.jar</span></code></pre><p>",
                                        " (On Windows, use <code>;</code> instead of <code>:</code> as the path separator)",
                                        " ",
                                        " </p><p>"
                                    ],
                                    [
                                        " AAR file, we can see the lint.jar with several lint checks within as",
                                        " part of the payload:",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> jar tvf ~/.gradle/caches/.../jakewharton.timber/timber/4.5.1/?/timber-4.5.1.aar</span></span>",
                                        "-<span class=\"line\">   216 Fri Jan 20 14:45:28 PST 2017 AndroidManifest.xml</span>",
                                        "-<span class=\"line\">  8533 Fri Jan 20 14:45:28 PST 2017 classes.jar</span>",
                                        "-<span class=\"line\"> 10111 Fri Jan 20 14:45:28 PST 2017 lint.jar</span>",
                                        "-<span class=\"line\">    39 Fri Jan 20 14:45:28 PST 2017 proguard.txt</span>",
                                        "-<span class=\"line\">     0 Fri Jan 20 14:45:24 PST 2017 aidl/</span>",
                                        "-<span class=\"line\">     0 Fri Jan 20 14:45:28 PST 2017 assets/</span>",
                                        "-<span class=\"line\">     0 Fri Jan 20 14:45:28 PST 2017 jni/</span>",
                                        "-<span class=\"line\">     0 Fri Jan 20 14:45:28 PST 2017 res/</span>",
                                        "-<span class=\"line\">     0 Fri Jan 20 14:45:28 PST 2017 libs/</span></code></pre><p>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span><span class=\"hljs-meta\">$</span><span class=\"bash\"> jar tvf ~/.gradle/caches/.../jakewharton.timber/timber/4.5.1/?/timber-4.5.1.aar</span>",
                                        "+<span class=\"line\"></span>   216 Fri Jan 20 14:45:28 PST 2017 AndroidManifest.xml",
                                        "+<span class=\"line\"></span>  8533 Fri Jan 20 14:45:28 PST 2017 classes.jar",
                                        "+<span class=\"line\"></span> 10111 Fri Jan 20 14:45:28 PST 2017 lint.jar",
                                        "+<span class=\"line\"></span>    39 Fri Jan 20 14:45:28 PST 2017 proguard.txt",
                                        "+<span class=\"line\"></span>     0 Fri Jan 20 14:45:24 PST 2017 aidl/",
                                        "+<span class=\"line\"></span>     0 Fri Jan 20 14:45:28 PST 2017 assets/",
                                        "+<span class=\"line\"></span>     0 Fri Jan 20 14:45:28 PST 2017 jni/",
                                        "+<span class=\"line\"></span>     0 Fri Jan 20 14:45:28 PST 2017 res/",
                                        "+<span class=\"line\"></span>     0 Fri Jan 20 14:45:28 PST 2017 libs/</code></pre><p>",
                                        " ",
                                        " The advantage of this approach is that when lint notices that you",
                                        " depend on a library, and that library contains custom lint checks, then"
                                    ],
                                    [
                                        " Gradle library plugin. It then specifies a <code>lintPublish</code> configuration",
                                        " referencing the checks lint project:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">apply plugin: <span class=\"hljs-string\">'com.android.library'</span></span>",
                                        "-<span class=\"line\">dependencies {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-function\">lintPublish <span class=\"hljs-title\">project</span>(<span class=\"hljs-params\"><span class=\"hljs-string\">':checks'</span></span>)</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-comment\">// other dependencies</span></span>",
                                        "-<span class=\"line\">}</span></span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>apply plugin: <span class=\"hljs-string\">'com.android.library'</span>",
                                        "+<span class=\"line\"></span>dependencies {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-function\">lintPublish <span class=\"hljs-title\">project</span>(<span class=\"hljs-params\"><span class=\"hljs-string\">':checks'</span></span>)",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-comment\">// other dependencies</span>",
                                        "+<span class=\"line\"></span>}</span></code></pre><p>",
                                        " ",
                                        " Finally, the sample <code>:app</code> project is an example of an Android app",
                                        " which depends on the library, and the source code in the app contains a"
                                    ],
                                    [
                                        " You can use a similar approach to <code>lintPublish</code>: In your app",
                                        " module, specify",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">apply plugin: <span class=\"hljs-string\">'com.android.application'</span></span>",
                                        "-<span class=\"line\">dependencies {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-function\">lintConfig <span class=\"hljs-title\">project</span>(<span class=\"hljs-params\"><span class=\"hljs-string\">':checks'</span></span>)</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-comment\">// other dependencies</span></span>",
                                        "-<span class=\"line\">}</span></span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>apply plugin: <span class=\"hljs-string\">'com.android.application'</span>",
                                        "+<span class=\"line\"></span>dependencies {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-function\">lintConfig <span class=\"hljs-title\">project</span>(<span class=\"hljs-params\"><span class=\"hljs-string\">':checks'</span></span>)",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-comment\">// other dependencies</span>",
                                        "+<span class=\"line\"></span>}</span></code></pre><p>",
                                        " ",
                                        " Now, when lint runs on this application, it will apply the checks",
                                        " provided from the given project."
                                    ],
                                    [
                                        " update your <code>IssueRegistry</code> to override the <code>deletedIssues</code> property to",
                                        " return your deleted issue id or ids:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\"><span class=\"hljs-comment\">/**</span>",
                                        "-<span class=\"line\"> * The issue id's from any issues that have been deleted from this</span>",
                                        "-<span class=\"line\"> * registry. This is here such that when an issue no longer applies</span>",
                                        "-<span class=\"line\"> * and is no longer registered, any existing mentions of the issue</span>",
                                        "-<span class=\"line\"> * id in baselines, lint.xml files etc are gracefully handled.</span>",
                                        "-<span class=\"line\"> */</span></span>",
                                        "-<span class=\"line\">open val deletedIssues: <span class=\"hljs-keyword\">List</span>&lt;<span class=\"hljs-keyword\">string</span>&gt; = emptyList()</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-comment\">/**",
                                        "+<span class=\"line\"></span> * The issue id's from any issues that have been deleted from this",
                                        "+<span class=\"line\"></span> * registry. This is here such that when an issue no longer applies",
                                        "+<span class=\"line\"></span> * and is no longer registered, any existing mentions of the issue",
                                        "+<span class=\"line\"></span> * id in baselines, lint.xml files etc are gracefully handled.",
                                        "+<span class=\"line\"></span> */</span>",
                                        "+<span class=\"line\"></span>open val deletedIssues: <span class=\"hljs-keyword\">List</span>&lt;<span class=\"hljs-keyword\">string</span>&gt; = emptyList()</code></pre><p>",
                                        " ",
                                        " The reason you'll want to do this is listed right there in the doc: If",
                                        " you don't do this, and if users have for example listed your issue id"
                                    ],
                                    [
                                        " Lint has a dedicated testing library for lint checks. To use it,",
                                        " add this dependency to your lint check Gradle project:",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\">testImplementation <span class=\"hljs-string\">\"com.android.tools.lint:lint-tests:<span class=\"hljs-variable\">$lintVersion</span>\"</span></span></code></pre><p>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span>testImplementation <span class=\"hljs-string\">\"com.android.tools.lint:lint-tests:<span class=\"hljs-variable\">$lintVersion</span>\"</span></code></pre><p>",
                                        " ",
                                        " This lends itself nicely to test-driven development. When we get bug",
                                        " reports of a false positive, we typically start by adding the text for"
                                    ],
                                    [
                                        " just issues warnings whenever it sees the word \u201clint\u201d mentioned",
                                        " in a string:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-keyword\">package</span> com.example.lint.checks</span>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-keyword\">package</span> com.example.lint.checks",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> com.android.tools.lint.checks.infrastructure.TestFiles.java</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> com.android.tools.lint.checks.infrastructure.TestLintTask.lint</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> org.junit.Test</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> com.android.tools.lint.checks.infrastructure.TestFiles.java",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> com.android.tools.lint.checks.infrastructure.TestLintTask.lint",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> org.junit.Test",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SampleCodeDetectorTest</span> </span>{</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-meta\">@Test</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">testBasic</span><span class=\"hljs-params\">()</span></span> {</span>",
                                        "-<span class=\"line\">        lint().files(</span>",
                                        "-<span class=\"line\">            java(</span>",
                                        "-<span class=\"line\">                <span class=\"hljs-string\">\"\"\"</span>",
                                        "-<span class=\"line\">                package test.pkg;</span>",
                                        "-<span class=\"line\">                public class TestClass1 {</span>",
                                        "-<span class=\"line\">                    // In a comment, mentioning \"lint\" has no effect</span>",
                                        "-<span class=\"line\">                    private static String s1 = \"Ignore non-word usages: linting\";</span>",
                                        "-<span class=\"line\">                    private static String s2 = \"Let's say it: lint\";</span>",
                                        "-<span class=\"line\">                }</span>",
                                        "-<span class=\"line\">                \"\"\"</span></span>",
                                        "-<span class=\"line\">            ).indented()</span>",
                                        "-<span class=\"line\">        )</span>",
                                        "-<span class=\"line\">        .issues(SampleCodeDetector.ISSUE)</span>",
                                        "-<span class=\"line\">        .run()</span>",
                                        "-<span class=\"line\">        .<span class=\"hljs-keyword\">expect</span>(</span>",
                                        "-<span class=\"line\">            <span class=\"hljs-string\">\"\"\"</span>",
                                        "-<span class=\"line\">            src/test/pkg/TestClass1.java:5: Warning: This code mentions lint: Congratulations [ShortUniqueId]</span>",
                                        "-<span class=\"line\">                private static String s2 = \"Let's say it: lint\";</span>",
                                        "-<span class=\"line\">                                           \u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c</span>",
                                        "-<span class=\"line\">            0 errors, 1 warnings</span>",
                                        "-<span class=\"line\">            \"\"\"</span></span>",
                                        "-<span class=\"line\">        )</span>",
                                        "-<span class=\"line\">    }</span>",
                                        "-<span class=\"line\">}</span></div></code></pre><p>",
                                        "+<span class=\"line\"></span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SampleCodeDetectorTest</span> </span>{",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-meta\">@Test</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">testBasic</span><span class=\"hljs-params\">()</span></span> {",
                                        "+<span class=\"line\"></span>        lint().files(",
                                        "+<span class=\"line\"></span>            java(",
                                        "+<span class=\"line\"></span>                <span class=\"hljs-string\">\"\"\"",
                                        "+<span class=\"line\"></span>                package test.pkg;",
                                        "+<span class=\"line\"></span>                public class TestClass1 {",
                                        "+<span class=\"line\"></span>                    // In a comment, mentioning \"lint\" has no effect",
                                        "+<span class=\"line\"></span>                    private static String s1 = \"Ignore non-word usages: linting\";",
                                        "+<span class=\"line\"></span>                    private static String s2 = \"Let's say it: lint\";",
                                        "+<span class=\"line\"></span>                }",
                                        "+<span class=\"line\"></span>                \"\"\"</span>",
                                        "+<span class=\"line\"></span>            ).indented()",
                                        "+<span class=\"line\"></span>        )",
                                        "+<span class=\"line\"></span>        .issues(SampleCodeDetector.ISSUE)",
                                        "+<span class=\"line\"></span>        .run()",
                                        "+<span class=\"line\"></span>        .<span class=\"hljs-keyword\">expect</span>(",
                                        "+<span class=\"line\"></span>            <span class=\"hljs-string\">\"\"\"",
                                        "+<span class=\"line\"></span>            src/test/pkg/TestClass1.java:5: Warning: This code mentions lint: Congratulations [SampleId]",
                                        "+<span class=\"line\"></span>                private static String s2 = \"Let's say it: lint\";",
                                        "+<span class=\"line\"></span>                                           \u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c",
                                        "+<span class=\"line\"></span>            0 errors, 1 warnings",
                                        "+<span class=\"line\"></span>            \"\"\"</span>",
                                        "+<span class=\"line\"></span>        )",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>}</div></code></pre><p>",
                                        " ",
                                        " Lint's testing API is a \u201cfluent API\u201d; you chain method calls together,",
                                        " and the return objects determine what is allowed next."
                                    ],
                                    [
                                        " ",
                                        "    For icons, we can construct bitmaps like this:</p></uses-sdk></li></ul>",
                                        " ",
                                        "-<p></p><pre class=\"listing backtick\"><code><span class=\"line\">        <span class=\"hljs-selector-tag\">image</span>(\"res/mipmap-hdpi/my_launcher2_round.png\", <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">50</span>)</span>",
                                        "-<span class=\"line\">           <span class=\"hljs-selector-class\">.fillOval</span>(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">0</span>xFFFFFFFF)</span>",
                                        "-<span class=\"line\">           <span class=\"hljs-selector-class\">.text</span>(<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">5</span>, \"x\", <span class=\"hljs-number\">0</span>xFFFFFFFF))</span></code></pre><p>",
                                        "+<p></p><pre class=\"listing backtick\"><code><span class=\"line\"></span>        <span class=\"hljs-selector-tag\">image</span>(\"res/mipmap-hdpi/my_launcher2_round.png\", <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">50</span>)",
                                        "+<span class=\"line\"></span>           <span class=\"hljs-selector-class\">.fillOval</span>(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">0</span>xFFFFFFFF)",
                                        "+<span class=\"line\"></span>           <span class=\"hljs-selector-class\">.text</span>(<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">5</span>, \"x\", <span class=\"hljs-number\">0</span>xFFFFFFFF))</code></pre><p>",
                                        " ",
                                        " ",
                                        " </p><ul>"
                                    ],
                                    [
                                        " For example, for a lint check result which flags two incidents, with a",
                                        " single quickfix, the unit test looks like this:",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\">lint().files(<span class=\"hljs-operator\">...</span>)</span>",
                                        "-<span class=\"line\">    .run()</span>",
                                        "-<span class=\"line\">    .expect(expected)</span>",
                                        "-<span class=\"line\">    .expectFixDiffs(</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-string\">\"\"</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"Fix for res/layout/textsize.xml line 10: Replace with sp:<span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"@@ -11 +11<span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"-         android:textSize=<span class=\"hljs-subst\">\\\"</span>14dp<span class=\"hljs-subst\">\\\"</span> /&gt;<span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"+         android:textSize=<span class=\"hljs-subst\">\\\"</span>14sp<span class=\"hljs-subst\">\\\"</span> /&gt;<span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"Fix for res/layout/textsize.xml line 15: Replace with sp:<span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"@@ -16 +16<span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"-         android:textSize=<span class=\"hljs-subst\">\\\"</span>14dip<span class=\"hljs-subst\">\\\"</span> /&gt;<span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"+         android:textSize=<span class=\"hljs-subst\">\\\"</span>14sp<span class=\"hljs-subst\">\\\"</span> /&gt;<span class=\"hljs-subst\">\\n</span>\"</span>);</span></code></pre><p>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span>lint().files(<span class=\"hljs-operator\">...</span>)",
                                        "+<span class=\"line\"></span>    .run()",
                                        "+<span class=\"line\"></span>    .expect(expected)",
                                        "+<span class=\"line\"></span>    .expectFixDiffs(",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-string\">\"\"</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"Fix for res/layout/textsize.xml line 10: Replace with sp:<span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"@@ -11 +11<span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"-         android:textSize=<span class=\"hljs-subst\">\\\"</span>14dp<span class=\"hljs-subst\">\\\"</span> /&gt;<span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"+         android:textSize=<span class=\"hljs-subst\">\\\"</span>14sp<span class=\"hljs-subst\">\\\"</span> /&gt;<span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"Fix for res/layout/textsize.xml line 15: Replace with sp:<span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"@@ -16 +16<span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"-         android:textSize=<span class=\"hljs-subst\">\\\"</span>14dip<span class=\"hljs-subst\">\\\"</span> /&gt;<span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"+         android:textSize=<span class=\"hljs-subst\">\\\"</span>14sp<span class=\"hljs-subst\">\\\"</span> /&gt;<span class=\"hljs-subst\">\\n</span>\"</span>);</code></pre><p>",
                                        " ",
                                        " The <code>expectFixDiffs</code> method will iterate over all the incidents it",
                                        " found, and in succession, apply the fix, diff the two sources, and"
                                    ],
                                    [
                                        " When there are multiple fixes offered for a single incident, it will",
                                        " iterate through all of these too:",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\">lint().files(<span class=\"hljs-operator\">...</span>)</span>",
                                        "-<span class=\"line\">    .run()</span>",
                                        "-<span class=\"line\">    .expect(expected)</span>",
                                        "-<span class=\"line\">    .expectFixDiffs(</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"Fix for res/layout/autofill.xml line 7: Set autofillHints:<span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"@@ -12 +12<span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"          android:layout_width=<span class=\"hljs-subst\">\\\"</span>match_parent<span class=\"hljs-subst\">\\\"</span><span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"          android:layout_height=<span class=\"hljs-subst\">\\\"</span>wrap_content<span class=\"hljs-subst\">\\\"</span><span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"+         android:autofillHints=<span class=\"hljs-subst\">\\\"</span>|<span class=\"hljs-subst\">\\\"</span><span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"          android:hint=<span class=\"hljs-subst\">\\\"</span>hint<span class=\"hljs-subst\">\\\"</span><span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"          android:inputType=<span class=\"hljs-subst\">\\\"</span>password<span class=\"hljs-subst\">\\\"</span> &gt;<span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"Fix for res/layout/autofill.xml line 7: Set importantForAutofill=<span class=\"hljs-subst\">\\\"</span>no<span class=\"hljs-subst\">\\\"</span>:<span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"@@ -13 +13<span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"          android:layout_height=<span class=\"hljs-subst\">\\\"</span>wrap_content<span class=\"hljs-subst\">\\\"</span><span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"          android:hint=<span class=\"hljs-subst\">\\\"</span>hint<span class=\"hljs-subst\">\\\"</span><span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"+         android:importantForAutofill=<span class=\"hljs-subst\">\\\"</span>no<span class=\"hljs-subst\">\\\"</span><span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"          android:inputType=<span class=\"hljs-subst\">\\\"</span>password<span class=\"hljs-subst\">\\\"</span> &gt;<span class=\"hljs-subst\">\\n</span>\"</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"  <span class=\"hljs-subst\">\\n</span>\"</span>);</span></code></pre>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span>lint().files(<span class=\"hljs-operator\">...</span>)",
                                        "+<span class=\"line\"></span>    .run()",
                                        "+<span class=\"line\"></span>    .expect(expected)",
                                        "+<span class=\"line\"></span>    .expectFixDiffs(",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"Fix for res/layout/autofill.xml line 7: Set autofillHints:<span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"@@ -12 +12<span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"          android:layout_width=<span class=\"hljs-subst\">\\\"</span>match_parent<span class=\"hljs-subst\">\\\"</span><span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"          android:layout_height=<span class=\"hljs-subst\">\\\"</span>wrap_content<span class=\"hljs-subst\">\\\"</span><span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"+         android:autofillHints=<span class=\"hljs-subst\">\\\"</span>|<span class=\"hljs-subst\">\\\"</span><span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"          android:hint=<span class=\"hljs-subst\">\\\"</span>hint<span class=\"hljs-subst\">\\\"</span><span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"          android:inputType=<span class=\"hljs-subst\">\\\"</span>password<span class=\"hljs-subst\">\\\"</span> &gt;<span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"Fix for res/layout/autofill.xml line 7: Set importantForAutofill=<span class=\"hljs-subst\">\\\"</span>no<span class=\"hljs-subst\">\\\"</span>:<span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"@@ -13 +13<span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"          android:layout_height=<span class=\"hljs-subst\">\\\"</span>wrap_content<span class=\"hljs-subst\">\\\"</span><span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"          android:hint=<span class=\"hljs-subst\">\\\"</span>hint<span class=\"hljs-subst\">\\\"</span><span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"+         android:importantForAutofill=<span class=\"hljs-subst\">\\\"</span>no<span class=\"hljs-subst\">\\\"</span><span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"          android:inputType=<span class=\"hljs-subst\">\\\"</span>password<span class=\"hljs-subst\">\\\"</span> &gt;<span class=\"hljs-subst\">\\n</span>\"</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\"  <span class=\"hljs-subst\">\\n</span>\"</span>);</code></pre>",
                                        " <a class=\"target\" name=\"librarydependenciesandstubs\">&nbsp;</a><a class=\"target\" name=\"lintcheckunittesting/librarydependenciesandstubs\">&nbsp;</a><a class=\"target\" name=\"toc5.7\">&nbsp;</a><h2>Library Dependencies and Stubs</h2>",
                                        " <p>",
                                        " "
                                    ],
                                    [
                                        " For example, for lint's own <code>RecyclerView</code> test, the unit test declares",
                                        " a field holding the recycler view stub:",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\">private val recyclerViewStub = java(</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-string\">\"\"\"</span>",
                                        "-<span class=\"line\">    package android.support.v7.widget;</span>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span>private val recyclerViewStub = java(",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-string\">\"\"\"",
                                        "+<span class=\"line\"></span>    package android.support.v7.widget;",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">    import android.content.Context;</span>",
                                        "-<span class=\"line\">    import android.util.AttributeSet;</span>",
                                        "-<span class=\"line\">    import android.view.View;</span>",
                                        "-<span class=\"line\">    import java.util.List;</span>",
                                        "+<span class=\"line\"></span>    import android.content.Context;",
                                        "+<span class=\"line\"></span>    import android.util.AttributeSet;",
                                        "+<span class=\"line\"></span>    import android.view.View;",
                                        "+<span class=\"line\"></span>    import java.util.List;",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">    // Just a stub for lint unit tests</span>",
                                        "-<span class=\"line\">    public class RecyclerView extends View {</span>",
                                        "-<span class=\"line\">        public RecyclerView(Context context, AttributeSet attrs) {</span>",
                                        "-<span class=\"line\">            super(context, attrs);</span>",
                                        "-<span class=\"line\">        }</span>",
                                        "+<span class=\"line\"></span>    // Just a stub for lint unit tests",
                                        "+<span class=\"line\"></span>    public class RecyclerView extends View {",
                                        "+<span class=\"line\"></span>        public RecyclerView(Context context, AttributeSet attrs) {",
                                        "+<span class=\"line\"></span>            super(context, attrs);",
                                        "+<span class=\"line\"></span>        }",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">        public abstract static class ViewHolder {</span>",
                                        "-<span class=\"line\">            public ViewHolder(View itemView) {</span>",
                                        "-<span class=\"line\">            }</span>",
                                        "-<span class=\"line\">        }</span>",
                                        "+<span class=\"line\"></span>        public abstract static class ViewHolder {",
                                        "+<span class=\"line\"></span>            public ViewHolder(View itemView) {",
                                        "+<span class=\"line\"></span>            }",
                                        "+<span class=\"line\"></span>        }",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">        public abstract static class Adapter&lt;vh extends=\"\" viewholder=\"\"&gt; {</span>",
                                        "-<span class=\"line\">            public abstract void onBindViewHolder(VH holder, int position);</span>",
                                        "-<span class=\"line\">            public void onBindViewHolder(VH holder, int position, List&lt;object&gt; payloads) {</span>",
                                        "-<span class=\"line\">            }</span>",
                                        "-<span class=\"line\">            public void notifyDataSetChanged() { }</span>",
                                        "-<span class=\"line\">        }</span>",
                                        "-<span class=\"line\">    }</span>",
                                        "-<span class=\"line\">    \"\"\"</span></span>",
                                        "-<span class=\"line\">).indented()</span></code></pre><p>",
                                        "+<span class=\"line\"></span>        public abstract static class Adapter&lt;vh extends=\"\" viewholder=\"\"&gt; {",
                                        "+<span class=\"line\"></span>            public abstract void onBindViewHolder(VH holder, int position);",
                                        "+<span class=\"line\"></span>            public void onBindViewHolder(VH holder, int position, List&lt;object&gt; payloads) {",
                                        "+<span class=\"line\"></span>            }",
                                        "+<span class=\"line\"></span>            public void notifyDataSetChanged() { }",
                                        "+<span class=\"line\"></span>        }",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>    \"\"\"</span>",
                                        "+<span class=\"line\"></span>).indented()</code></pre><p>",
                                        " ",
                                        " And now, all the other unit tests simply include <code>recyclerViewStub</code>",
                                        " as one of the test files. For a larger example, see",
                                        "-<a href=\"https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-master-dev:lint/libs/lint-tests/src/test/java/com/android/tools/lint/checks/SliceDetectorTest.kt\">this test</a>.",
                                        "+<a href=\"https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-main:lint/libs/lint-tests/src/test/java/com/android/tools/lint/checks/SliceDetectorTest.kt\">this test</a>.",
                                        " ",
                                        " </p><p>",
                                        " "
                                    ],
                                    [
                                        " ",
                                        " Here's an example of a test failure for an unresolved import:",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\">java.lang.IllegalStateException:</span>",
                                        "-<span class=\"line\">app/src/com/example/MyDiffUtilCallbackJava.java:<span class=\"hljs-number\">4</span>: Error:</span>",
                                        "-<span class=\"line\">Couldn<span class=\"hljs-number\">'</span>t resolve <span class=\"hljs-keyword\">this</span> <span class=\"hljs-keyword\">import</span> [LintError]</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">import</span> androidx.recyclerview.widget.DiffUtil;</span>",
                                        "-<span class=\"line\">       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span>java.lang.IllegalStateException:",
                                        "+<span class=\"line\"></span>app/src/com/example/MyDiffUtilCallbackJava.java:<span class=\"hljs-number\">4</span>: Error:",
                                        "+<span class=\"line\"></span>Couldn<span class=\"hljs-number\">'</span>t resolve <span class=\"hljs-keyword\">this</span> <span class=\"hljs-keyword\">import</span> [LintError]",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">import</span> androidx.recyclerview.widget.DiffUtil;",
                                        "+<span class=\"line\"></span>       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">This usually means that the unit test needs to declare a stub file <span class=\"hljs-keyword\">or</span></span>",
                                        "-<span class=\"line\">placeholder with the expected signature such that type resolving works.</span>",
                                        "+<span class=\"line\"></span>This usually means that the unit test needs to declare a stub file <span class=\"hljs-keyword\">or</span>",
                                        "+<span class=\"line\"></span>placeholder with the expected signature such that type resolving works.",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">If <span class=\"hljs-keyword\">this</span> <span class=\"hljs-keyword\">import</span> is immaterial to the test, either <span class=\"hljs-keyword\">delete</span> it, <span class=\"hljs-keyword\">or</span> mark</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">this</span> unit test as allowing resolution errors by setting</span>",
                                        "-<span class=\"line\">`allowCompilationErrors()`.</span>",
                                        "+<span class=\"line\"></span>If <span class=\"hljs-keyword\">this</span> <span class=\"hljs-keyword\">import</span> is immaterial to the test, either <span class=\"hljs-keyword\">delete</span> it, <span class=\"hljs-keyword\">or</span> mark",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">this</span> unit test as allowing resolution errors by setting",
                                        "+<span class=\"line\"></span>`allowCompilationErrors()`.",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">(This check only enforces <span class=\"hljs-keyword\">import</span> references, <span class=\"hljs-keyword\">not</span> all references, so <span class=\"hljs-keyword\">if</span></span>",
                                        "-<span class=\"line\">it doesn<span class=\"hljs-number\">'</span>t matter to the detector, you can just remove the <span class=\"hljs-keyword\">import</span> but</span>",
                                        "-<span class=\"line\">leave references to the class in the code.)</span>",
                                        "+<span class=\"line\"></span>(This check only enforces <span class=\"hljs-keyword\">import</span> references, <span class=\"hljs-keyword\">not</span> all references, so <span class=\"hljs-keyword\">if</span>",
                                        "+<span class=\"line\"></span>it doesn<span class=\"hljs-number\">'</span>t matter to the detector, you can just remove the <span class=\"hljs-keyword\">import</span> but",
                                        "+<span class=\"line\"></span>leave references to the class in the code.)",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">For more information, see the <span class=\"hljs-string\">\"Library Dependencies and Stubs\"</span> section in</span>",
                                        "-<span class=\"line\">https:<span class=\"hljs-comment\">//cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-master-dev:lint/docs/api-guide/unit-testing.md.html</span></span></code></pre>",
                                        "+<span class=\"line\"></span>For more information, see the <span class=\"hljs-string\">\"Library Dependencies and Stubs\"</span> section in",
                                        "+<span class=\"line\"></span>https:<span class=\"hljs-comment\">//cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-main:lint/docs/api-guide/unit-testing.md.html</span></code></pre>",
                                        " <a class=\"target\" name=\"binaryandcompiledsourcefiles\">&nbsp;</a><a class=\"target\" name=\"lintcheckunittesting/binaryandcompiledsourcefiles\">&nbsp;</a><a class=\"target\" name=\"toc5.8\">&nbsp;</a><h2>Binary and Compiled Source Files</h2>",
                                        " <p>",
                                        " "
                                    ],
                                    [
                                        " example from a lint check which tries to recognize usage",
                                        " of Cordova in the bytecode:",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">testVulnerableCordovaVersionInClasses</span><span class=\"hljs-params\">()</span></span> {</span>",
                                        "-<span class=\"line\">    lint().files(</span>",
                                        "-<span class=\"line\">        base64gzip(</span>",
                                        "-<span class=\"line\">            <span class=\"hljs-string\">\"bin/classes/org/apache/cordova/Device.class\"</span>,</span>",
                                        "-<span class=\"line\">            <span class=\"hljs-string\">\"\"</span> +</span>",
                                        "-<span class=\"line\">                <span class=\"hljs-string\">\"yv66vgAAADIAFAoABQAPCAAQCQAEABEHABIHABMBAA5jb3Jkb3ZhVmVyc2lv\"</span> +</span>",
                                        "-<span class=\"line\">                <span class=\"hljs-string\">\"bgEAEkxqYXZhL2xhbmcvU3RyaW5nOwEABjxpbml0PgEAAygpVgEABENvZGUB\"</span> +</span>",
                                        "-<span class=\"line\">                <span class=\"hljs-string\">\"AA9MaW5lTnVtYmVyVGFibGUBAAg8Y2xpbml0PgEAClNvdXJjZUZpbGUBAAtE\"</span> +</span>",
                                        "-<span class=\"line\">                <span class=\"hljs-string\">\"ZXZpY2UuamF2YQwACAAJAQAFMi43LjAMAAYABwEAGW9yZy9hcGFjaGUvY29y\"</span> +</span>",
                                        "-<span class=\"line\">                <span class=\"hljs-string\">\"ZG92YS9EZXZpY2UBABBqYXZhL2xhbmcvT2JqZWN0ACEABAAFAAAAAQAJAAYA\"</span> +</span>",
                                        "-<span class=\"line\">                <span class=\"hljs-string\">\"BwAAAAIAAQAIAAkAAQAKAAAAHQABAAEAAAAFKrcAAbEAAAABAAsAAAAGAAEA\"</span> +</span>",
                                        "-<span class=\"line\">                <span class=\"hljs-string\">\"AAAEAAgADAAJAAEACgAAAB4AAQAAAAAABhICswADsQAAAAEACwAAAAYAAQAA\"</span> +</span>",
                                        "-<span class=\"line\">                <span class=\"hljs-string\">\"AAUAAQANAAAAAgAO\"</span></span>",
                                        "-<span class=\"line\">        )`</span>",
                                        "-<span class=\"line\">    ).run().<span class=\"hljs-keyword\">expect</span>(</span></code></pre><p>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">testVulnerableCordovaVersionInClasses</span><span class=\"hljs-params\">()</span></span> {",
                                        "+<span class=\"line\"></span>    lint().files(",
                                        "+<span class=\"line\"></span>        base64gzip(",
                                        "+<span class=\"line\"></span>            <span class=\"hljs-string\">\"bin/classes/org/apache/cordova/Device.class\"</span>,",
                                        "+<span class=\"line\"></span>            <span class=\"hljs-string\">\"\"</span> +",
                                        "+<span class=\"line\"></span>                <span class=\"hljs-string\">\"yv66vgAAADIAFAoABQAPCAAQCQAEABEHABIHABMBAA5jb3Jkb3ZhVmVyc2lv\"</span> +",
                                        "+<span class=\"line\"></span>                <span class=\"hljs-string\">\"bgEAEkxqYXZhL2xhbmcvU3RyaW5nOwEABjxpbml0PgEAAygpVgEABENvZGUB\"</span> +",
                                        "+<span class=\"line\"></span>                <span class=\"hljs-string\">\"AA9MaW5lTnVtYmVyVGFibGUBAAg8Y2xpbml0PgEAClNvdXJjZUZpbGUBAAtE\"</span> +",
                                        "+<span class=\"line\"></span>                <span class=\"hljs-string\">\"ZXZpY2UuamF2YQwACAAJAQAFMi43LjAMAAYABwEAGW9yZy9hcGFjaGUvY29y\"</span> +",
                                        "+<span class=\"line\"></span>                <span class=\"hljs-string\">\"ZG92YS9EZXZpY2UBABBqYXZhL2xhbmcvT2JqZWN0ACEABAAFAAAAAQAJAAYA\"</span> +",
                                        "+<span class=\"line\"></span>                <span class=\"hljs-string\">\"BwAAAAIAAQAIAAkAAQAKAAAAHQABAAEAAAAFKrcAAbEAAAABAAsAAAAGAAEA\"</span> +",
                                        "+<span class=\"line\"></span>                <span class=\"hljs-string\">\"AAAEAAgADAAJAAEACgAAAB4AAQAAAAAABhICswADsQAAAAEACwAAAAYAAQAA\"</span> +",
                                        "+<span class=\"line\"></span>                <span class=\"hljs-string\">\"AAUAAQANAAAAAgAO\"</span>",
                                        "+<span class=\"line\"></span>        )`",
                                        "+<span class=\"line\"></span>    ).run().<span class=\"hljs-keyword\">expect</span>(</code></pre><p>",
                                        " ",
                                        " Here, \u201dbase64gzip\u201c means that the file is gzipped and then base64",
                                        " encoded."
                                    ],
                                    [
                                        " If you want to compute the base64gzip string for a given file, a simple",
                                        " way to do it is to add this statement at the beginning of your test:",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\">assertEquals(<span class=\"hljs-string\">\"\"</span>, TestFiles.toBase64gzip(<span class=\"hljs-name\">File</span>(<span class=\"hljs-string\">\"/tmp/mybinary.bin\"</span>)))</span></code></pre><p>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span>assertEquals(<span class=\"hljs-string\">\"\"</span>, TestFiles.toBase64gzip(<span class=\"hljs-name\">File</span>(<span class=\"hljs-string\">\"/tmp/mybinary.bin\"</span>)))</code></pre><p>",
                                        " ",
                                        " The test will fail, and now you have your output to copy/paste into the",
                                        " test."
                                    ],
                                    [
                                        " part of the run setup by adding the following method declaration into",
                                        " your detector class:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\"><span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">lint</span><span class=\"hljs-params\">()</span></span>: TestLintTask {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">super</span>.lint().testModes(TestMode.PARENTHESIZED)</span>",
                                        "-<span class=\"line\">}</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">lint</span><span class=\"hljs-params\">()</span></span>: TestLintTask {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">super</span>.lint().testModes(TestMode.PARENTHESIZED)",
                                        "+<span class=\"line\"></span>}</code></pre><p>",
                                        " ",
                                        " Now when you run your test, it will run <em class=\"asterisk\">only</em> this test mode, so you",
                                        " can set breakpoints and start debugging through the scenario without"
                                    ],
                                    [
                                        " <code>skipTestModes</code>. Adding a comment for why that particular mode is",
                                        " skipped is useful as well.",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">lint().files(...)</span>",
                                        "-<span class=\"line\">    .allowCompilationErrors()</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-comment\">// When running multiple passes of lint each pass will warn</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-comment\">// about the obsolete lint checks; that's fine</span></span>",
                                        "-<span class=\"line\">    .skipTestModes(TestMode.PARTIAL)</span>",
                                        "-<span class=\"line\">    .run()</span>",
                                        "-<span class=\"line\">    .expectClean()</span></code></pre>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>lint().files(...)",
                                        "+<span class=\"line\"></span>    .allowCompilationErrors()",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-comment\">// When running multiple passes of lint each pass will warn</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-comment\">// about the obsolete lint checks; that's fine</span>",
                                        "+<span class=\"line\"></span>    .skipTestModes(TestMode.PARTIAL)",
                                        "+<span class=\"line\"></span>    .run()",
                                        "+<span class=\"line\"></span>    .expectClean()</code></pre>",
                                        " <a class=\"target\" name=\"source-modifyingtestmodes\">&nbsp;</a><a class=\"target\" name=\"testmodes/source-modifyingtestmodes\">&nbsp;</a><a class=\"target\" name=\"toc6.3\">&nbsp;</a><h2>Source-Modifying Test Modes</h2>",
                                        " <p>",
                                        " "
                                    ],
                                    [
                                        " ",
                                        " For example, this mode will convert the following code:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\"><span class=\"hljs-keyword\">import</span> android.widget.RemoteViews</span>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">import</span> android.widget.RemoteViews",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">test</span><span class=\"hljs-params\">(packageName: <span class=\"hljs-type\">String</span>, other: <span class=\"hljs-type\">Any</span>)</span></span> {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">val</span> rv = RemoteViews(packageName, R.layout.test)</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">val</span> ov = other <span class=\"hljs-keyword\">as</span> RemoteViews</span>",
                                        "-<span class=\"line\">}</span></code></pre><p>",
                                        "+<span class=\"line\"></span><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">test</span><span class=\"hljs-params\">(packageName: <span class=\"hljs-type\">String</span>, other: <span class=\"hljs-type\">Any</span>)</span></span> {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> rv = RemoteViews(packageName, R.layout.test)",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> ov = other <span class=\"hljs-keyword\">as</span> RemoteViews",
                                        "+<span class=\"line\"></span>}</code></pre><p>",
                                        " ",
                                        " to",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\"><span class=\"hljs-keyword\">import</span> android.widget.RemoteViews</span>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">import</span> android.widget.RemoteViews",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">test</span><span class=\"hljs-params\">(packageName: <span class=\"hljs-type\">String</span>, other: <span class=\"hljs-type\">Any</span>)</span></span> {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">val</span> rv = android.widget.RemoteViews(packageName, R.layout.test)</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">val</span> ov = other <span class=\"hljs-keyword\">as</span> android.widget.RemoteViews</span>",
                                        "-<span class=\"line\">}</span></code></pre><p>",
                                        "+<span class=\"line\"></span><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">test</span><span class=\"hljs-params\">(packageName: <span class=\"hljs-type\">String</span>, other: <span class=\"hljs-type\">Any</span>)</span></span> {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> rv = android.widget.RemoteViews(packageName, R.layout.test)",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> ov = other <span class=\"hljs-keyword\">as</span> android.widget.RemoteViews",
                                        "+<span class=\"line\"></span>}</code></pre><p>",
                                        " ",
                                        " This makes sure that your detector handles not only the case where a",
                                        " symbol appears in its normal imported state, but also when it is fully"
                                    ],
                                    [
                                        " it was looking to identify references to an <code>EnumSet</code>,",
                                        " and the code looked like this:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">checkEnumSet</span><span class=\"hljs-params\">(node: <span class=\"hljs-type\">UCallExpression</span>)</span></span> {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">val</span> receiver = node.receiver</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">if</span> (receiver <span class=\"hljs-keyword\">is</span> USimpleNameReferenceExpression &amp;&amp;</span>",
                                        "-<span class=\"line\">        receiver.identifier == <span class=\"hljs-string\">\"EnumSet\"</span></span>",
                                        "-<span class=\"line\">    ) {</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">checkEnumSet</span><span class=\"hljs-params\">(node: <span class=\"hljs-type\">UCallExpression</span>)</span></span> {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> receiver = node.receiver",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">if</span> (receiver <span class=\"hljs-keyword\">is</span> USimpleNameReferenceExpression &amp;&amp;",
                                        "+<span class=\"line\"></span>        receiver.identifier == <span class=\"hljs-string\">\"EnumSet\"</span>",
                                        "+<span class=\"line\"></span>    ) {</code></pre><p>",
                                        " ",
                                        " which will work for code such as <code>EnumSet.of()</code> but not",
                                        " <code>java.util.EnumSet.of()</code>."
                                    ],
                                    [
                                        " ",
                                        " Instead, use something like this:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">checkEnumSet</span><span class=\"hljs-params\">(node: <span class=\"hljs-type\">UCallExpression</span>)</span></span> {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">val</span> targetClass = node.resolve()?.containingClass?.qualifiedName</span>",
                                        "-<span class=\"line\">        ?: <span class=\"hljs-keyword\">return</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">if</span> (targetClass == <span class=\"hljs-string\">\"java.util.EnumSet\"</span>) {</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">checkEnumSet</span><span class=\"hljs-params\">(node: <span class=\"hljs-type\">UCallExpression</span>)</span></span> {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> targetClass = node.resolve()?.containingClass?.qualifiedName",
                                        "+<span class=\"line\"></span>        ?: <span class=\"hljs-keyword\">return</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">if</span> (targetClass == <span class=\"hljs-string\">\"java.util.EnumSet\"</span>) {</code></pre><p>",
                                        " ",
                                        " As with all the source transforming test modes, there are cases where",
                                        " it doesn't apply. For example, lint had a built-in check for camera"
                                    ],
                                    [
                                        " platform one it will normally encourage you to import the androidx one",
                                        " instead:",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\">src/test/pkg/ExifUsage.java:<span class=\"hljs-number\">9</span>: Warning: Avoid <span class=\"hljs-keyword\">using</span> android.media.ExifInterface; use androidx.media.ExifInterface instead [ExifInterface]</span>",
                                        "-<span class=\"line\">        android.media.ExifInterface exif = <span class=\"hljs-keyword\">new</span> android.media.ExifInterface(path);</span>",
                                        "-<span class=\"line\">        ~~~~~~~~~~~~~~~~~~~~~~~~~~~</span></code></pre><p>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span>src/test/pkg/ExifUsage.java:<span class=\"hljs-number\">9</span>: Warning: Avoid <span class=\"hljs-keyword\">using</span> android.media.ExifInterface; use androidx.media.ExifInterface instead [ExifInterface]",
                                        "+<span class=\"line\"></span>        android.media.ExifInterface exif = <span class=\"hljs-keyword\">new</span> android.media.ExifInterface(path);",
                                        "+<span class=\"line\"></span>        ~~~~~~~~~~~~~~~~~~~~~~~~~~~</code></pre><p>",
                                        " ",
                                        " However, if you explicitly (via fully qualified imports) reference the",
                                        " platform one, in that case the lint check does not issue any warnings"
                                    ],
                                    [
                                        " and that's fine; as usual we'll deliberately turn off the check in this",
                                        " detector:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" @Override\"><span class=\"line\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">protected</span> TestLintTask <span class=\"hljs-title\">lint</span><span class=\"hljs-params\">()</span> </span>{</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-comment\">// This lint check deliberately treats fully qualified imports</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-comment\">// differently (they are interpreted as a deliberate usage of</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-comment\">// the discouraged API) so the fully qualified equivalence test</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-comment\">// does not apply:</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">super</span>.lint().skipTestModes(TestMode.FULLY_QUALIFIED);</span>",
                                        "-<span class=\"line\">}</span></div></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-meta\">@Override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">protected</span> TestLintTask <span class=\"hljs-title\">lint</span><span class=\"hljs-params\">()</span> </span>{",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-comment\">// This lint check deliberately treats fully qualified imports</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-comment\">// differently (they are interpreted as a deliberate usage of</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-comment\">// the discouraged API) so the fully qualified equivalence test</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-comment\">// does not apply:</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">super</span>.lint().skipTestModes(TestMode.FULLY_QUALIFIED);",
                                        "+<span class=\"line\"></span>}</code></pre><p>",
                                        " ",
                                        " ",
                                        " "
                                    ],
                                    [
                                        " ",
                                        " For example, this mode will convert the following code:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\"><span class=\"hljs-keyword\">import</span> android.widget.RemoteViews</span>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">import</span> android.widget.RemoteViews",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">test</span><span class=\"hljs-params\">(packageName: <span class=\"hljs-type\">String</span>, other: <span class=\"hljs-type\">Any</span>)</span></span> {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">val</span> rv = RemoteViews(packageName, R.layout.test)</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">val</span> ov = other <span class=\"hljs-keyword\">as</span> RemoteViews</span>",
                                        "-<span class=\"line\">}</span></code></pre><p>",
                                        "+<span class=\"line\"></span><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">test</span><span class=\"hljs-params\">(packageName: <span class=\"hljs-type\">String</span>, other: <span class=\"hljs-type\">Any</span>)</span></span> {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> rv = RemoteViews(packageName, R.layout.test)",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> ov = other <span class=\"hljs-keyword\">as</span> RemoteViews",
                                        "+<span class=\"line\"></span>}</code></pre><p>",
                                        " ",
                                        " to",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\"><span class=\"hljs-keyword\">import</span> android.widget.RemoteViews <span class=\"hljs-keyword\">as</span> IMPORT_ALIAS_1_REMOTEVIEWS</span>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">import</span> android.widget.RemoteViews <span class=\"hljs-keyword\">as</span> IMPORT_ALIAS_1_REMOTEVIEWS",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">test</span><span class=\"hljs-params\">(packageName: <span class=\"hljs-type\">String</span>, other: <span class=\"hljs-type\">Any</span>)</span></span> {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">val</span> rv = IMPORT_ALIAS_1_REMOTEVIEWS(packageName, R.layout.test)</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">val</span> ov = other <span class=\"hljs-keyword\">as</span> IMPORT_ALIAS_1_REMOTEVIEWS</span>",
                                        "-<span class=\"line\">}</span></code></pre>",
                                        "+<span class=\"line\"></span><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">test</span><span class=\"hljs-params\">(packageName: <span class=\"hljs-type\">String</span>, other: <span class=\"hljs-type\">Any</span>)</span></span> {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> rv = IMPORT_ALIAS_1_REMOTEVIEWS(packageName, R.layout.test)",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> ov = other <span class=\"hljs-keyword\">as</span> IMPORT_ALIAS_1_REMOTEVIEWS",
                                        "+<span class=\"line\"></span>}</code></pre>",
                                        " <a class=\"target\" name=\"typealiasing\">&nbsp;</a><a class=\"target\" name=\"testmodes/source-modifyingtestmodes/typealiasing\">&nbsp;</a><a class=\"target\" name=\"toc6.3.3\">&nbsp;</a><h3>Type Aliasing</h3>",
                                        " <p>",
                                        " "
                                    ],
                                    [
                                        " ",
                                        " For example, this mode will convert the following code:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\"><span class=\"hljs-keyword\">import</span> android.widget.RemoteViews</span>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">import</span> android.widget.RemoteViews",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">test</span><span class=\"hljs-params\">(packageName: <span class=\"hljs-type\">String</span>, other: <span class=\"hljs-type\">Any</span>)</span></span> {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">val</span> rv = RemoteViews(packageName, R.layout.test)</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">val</span> ov = other <span class=\"hljs-keyword\">as</span> RemoteViews</span>",
                                        "-<span class=\"line\">}</span></code></pre><p>",
                                        "+<span class=\"line\"></span><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">test</span><span class=\"hljs-params\">(packageName: <span class=\"hljs-type\">String</span>, other: <span class=\"hljs-type\">Any</span>)</span></span> {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> rv = RemoteViews(packageName, R.layout.test)",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> ov = other <span class=\"hljs-keyword\">as</span> RemoteViews",
                                        "+<span class=\"line\"></span>}</code></pre><p>",
                                        " ",
                                        " to",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\"><span class=\"hljs-keyword\">import</span> android.widget.RemoteViews</span>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">import</span> android.widget.RemoteViews",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">test</span><span class=\"hljs-params\">(packageName: <span class=\"hljs-type\">TYPE_ALIAS_1</span>, other: <span class=\"hljs-type\">TYPE_ALIAS_2</span>)</span></span> {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">val</span> rv = RemoteViews(packageName, R.layout.test)</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">val</span> ov = other <span class=\"hljs-keyword\">as</span> TYPE_ALIAS_3</span>",
                                        "-<span class=\"line\">}</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">typealias</span> TYPE_ALIAS_1 = String</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">typealias</span> TYPE_ALIAS_2 = Any</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">typealias</span> TYPE_ALIAS_3 = RemoteViews</span></code></pre>",
                                        "+<span class=\"line\"></span><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">test</span><span class=\"hljs-params\">(packageName: <span class=\"hljs-type\">TYPE_ALIAS_1</span>, other: <span class=\"hljs-type\">TYPE_ALIAS_2</span>)</span></span> {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> rv = RemoteViews(packageName, R.layout.test)",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> ov = other <span class=\"hljs-keyword\">as</span> TYPE_ALIAS_3",
                                        "+<span class=\"line\"></span>}",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">typealias</span> TYPE_ALIAS_1 = String",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">typealias</span> TYPE_ALIAS_2 = Any",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">typealias</span> TYPE_ALIAS_3 = RemoteViews</code></pre>",
                                        " <a class=\"target\" name=\"parenthesismode\">&nbsp;</a><a class=\"target\" name=\"testmodes/source-modifyingtestmodes/parenthesismode\">&nbsp;</a><a class=\"target\" name=\"toc6.3.4\">&nbsp;</a><h3>Parenthesis Mode</h3>",
                                        " <p>",
                                        " "
                                    ],
                                    [
                                        " ",
                                        " For example, this mode will convert the following code:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">(t <span class=\"hljs-keyword\">as</span>? String)?.plus(<span class=\"hljs-string\">\"other\"</span>)?.<span class=\"hljs-keyword\">get</span>(<span class=\"hljs-number\">0</span>)?.dec()?.inc()</span>",
                                        "-<span class=\"line\"><span class=\"hljs-string\">\"foo\"</span>.chars().allMatch { it.dec() &gt; <span class=\"hljs-number\">0</span> }.toString()</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>(t <span class=\"hljs-keyword\">as</span>? String)?.plus(<span class=\"hljs-string\">\"other\"</span>)?.<span class=\"hljs-keyword\">get</span>(<span class=\"hljs-number\">0</span>)?.dec()?.inc()",
                                        "+<span class=\"line\"></span><span class=\"hljs-string\">\"foo\"</span>.chars().allMatch { it.dec() &gt; <span class=\"hljs-number\">0</span> }.toString()</code></pre><p>",
                                        " ",
                                        " to",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">(((((t <span class=\"hljs-keyword\">as</span>? String))?.plus(<span class=\"hljs-string\">\"other\"</span>))?.<span class=\"hljs-keyword\">get</span>(<span class=\"hljs-number\">0</span>))?.dec())?.inc()</span>",
                                        "-<span class=\"line\">((<span class=\"hljs-string\">\"foo\"</span>.chars()).allMatch { (it.dec() &gt; <span class=\"hljs-number\">0</span>) }).toString()</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>(((((t <span class=\"hljs-keyword\">as</span>? String))?.plus(<span class=\"hljs-string\">\"other\"</span>))?.<span class=\"hljs-keyword\">get</span>(<span class=\"hljs-number\">0</span>))?.dec())?.inc()",
                                        "+<span class=\"line\"></span>((<span class=\"hljs-string\">\"foo\"</span>.chars()).allMatch { (it.dec() &gt; <span class=\"hljs-number\">0</span>) }).toString()</code></pre><p>",
                                        " ",
                                        " By default the parenthesis mode limits itself to \u201clikely\u201d unnecessary",
                                        " parentheses; in particular, it won't put extra parenthesis around"
                                    ],
                                    [
                                        " ",
                                        " For example, this mode will convert the following code:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">test(<span class=\"hljs-string\">\"test\"</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-literal\">true</span>)</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>test(<span class=\"hljs-string\">\"test\"</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-literal\">true</span>)</code></pre><p>",
                                        " ",
                                        " to",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">test(n = <span class=\"hljs-number\">5</span>, z = <span class=\"hljs-literal\">true</span>, s = <span class=\"hljs-string\">\"test\"</span>)</span></code></pre>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>test(n = <span class=\"hljs-number\">5</span>, z = <span class=\"hljs-literal\">true</span>, s = <span class=\"hljs-string\">\"test\"</span>)</code></pre>",
                                        " <a class=\"target\" name=\"bodyremoval\">&nbsp;</a><a class=\"target\" name=\"testmodes/source-modifyingtestmodes/bodyremoval\">&nbsp;</a><a class=\"target\" name=\"toc6.3.6\">&nbsp;</a><h3>Body Removal</h3>",
                                        " <p>",
                                        " ",
                                        " ",
                                        " In Kotlin, you can replace",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">test</span><span class=\"hljs-params\">()</span></span>: List&lt;string&gt; {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-literal\">true</span>) listOf(<span class=\"hljs-string\">\"hello\"</span>) <span class=\"hljs-keyword\">else</span> emptyList()</span>",
                                        "-<span class=\"line\">}</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">test</span><span class=\"hljs-params\">()</span></span>: List&lt;string&gt; {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-literal\">true</span>) listOf(<span class=\"hljs-string\">\"hello\"</span>) <span class=\"hljs-keyword\">else</span> emptyList()",
                                        "+<span class=\"line\"></span>}</code></pre><p>",
                                        " ",
                                        " with",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">test</span><span class=\"hljs-params\">()</span></span>: List&lt;string&gt; = <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-literal\">true</span>) listOf(<span class=\"hljs-string\">\"hello\"</span>) <span class=\"hljs-keyword\">else</span> emptyList()</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">test</span><span class=\"hljs-params\">()</span></span>: List&lt;string&gt; = <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-literal\">true</span>) listOf(<span class=\"hljs-string\">\"hello\"</span>) <span class=\"hljs-keyword\">else</span> emptyList()</code></pre><p>",
                                        " ",
                                        " Note that these two ASTs do not look the same; we'll only have an",
                                        " <code>UReturnExpression</code> node in the first case. Therefore, you have to be"
                                    ],
                                    [
                                        " It also does one more thing: it toggled optional braces from if",
                                        " expressions \u2014 converting",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\"><span class=\"hljs-keyword\">if</span> (x &lt; y) { test(x+<span class=\"hljs-number\">1</span>) } <span class=\"hljs-keyword\">else</span> test(x+<span class=\"hljs-number\">2</span>)</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">if</span> (x &lt; y) { test(x+<span class=\"hljs-number\">1</span>) } <span class=\"hljs-keyword\">else</span> test(x+<span class=\"hljs-number\">2</span>)</code></pre><p>",
                                        " ",
                                        " to",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\"><span class=\"hljs-keyword\">if</span> (x &lt; y) test(x+<span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">else</span> { test(x+<span class=\"hljs-number\">2</span>) }</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">if</span> (x &lt; y) test(x+<span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">else</span> { test(x+<span class=\"hljs-number\">2</span>) }</code></pre><p>",
                                        " ",
                                        " (Here it has removed the braces around the if-then body since they are",
                                        " optional, and it has added braces around the if-else body since it did"
                                    ],
                                    [
                                        " making sure that detectors are properly handling the presence of",
                                        " absence of <code>UBlockExpression</code> around the child nodes.",
                                        " ",
                                        "+</p>",
                                        "+<a class=\"target\" name=\"iftowhenreplacement\">&nbsp;</a><a class=\"target\" name=\"testmodes/source-modifyingtestmodes/iftowhenreplacement\">&nbsp;</a><a class=\"target\" name=\"toc6.3.7\">&nbsp;</a><h3>If to When Replacement</h3>",
                                        "+<p>",
                                        "+",
                                        "+",
                                        "+In Kotlin, you can replace a series of <code>if</code>/<code>else</code> statements with a",
                                        "+single <code>when</code> block. These two alternative do not look the same in the",
                                        "+AST; <code>if</code> expressions show up as <code>UIfExpression</code>, and <code>when</code>",
                                        "+expressions show up as <code>USwitchExpression</code>.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+The if-to-when test mode will change all the <code>if</code> statements in Kotlin",
                                        "+lint tests with the corresponding when statement, and makes sure that",
                                        "+the test results remain the same. This ensures that detectors are",
                                        "+properly looking for both <code>UIfExpression</code> and <code>USwitchExpression</code> and",
                                        "+handling each. When this test mode was introduced, around 12 unit tests",
                                        "+in lint's built-in checks (spread across 5 detectors) needed some",
                                        "+tweaks.",
                                        "+",
                                        "+</p>",
                                        "+<a class=\"target\" name=\"whitespacemode\">&nbsp;</a><a class=\"target\" name=\"testmodes/source-modifyingtestmodes/whitespacemode\">&nbsp;</a><a class=\"target\" name=\"toc6.3.8\">&nbsp;</a><h3>Whitespace Mode</h3>",
                                        "+<p>",
                                        "+",
                                        "+",
                                        "+This test mode inserts a number of \u201cunnecessary\u201d whitespace characters",
                                        "+in valid places in the source code.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+This helps catch bugs where lint checks are improperly making",
                                        "+assumptions about whitespace in the source file, particularly in",
                                        "+quickfix implementations, or when for example looking up a qualified",
                                        "+expression and just taking the <code>asSourceString()</code> or <code>text</code> property of",
                                        "+a PSI element or PSI type and checking it for equality with something",
                                        "+like <code>java.util.List&lt;string&gt;</code>.",
                                        "+",
                                        " </p><p>",
                                        " ",
                                        "+For example, some of the built-in checks which performed quickfix",
                                        "+string replacements based on regular expression matching had to be",
                                        "+updated to be prepared for whitespace characters:",
                                        "+",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>+++ b/lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/WakelockDetector.java",
                                        "+<span class=\"line\"></span>@@ -454,7 +454,7 @@ public class WakelockDetector extends Detector implements ClassScanner, SourceCo",
                                        "+<span class=\"line\"></span>     LintFix fix =",
                                        "+<span class=\"line\"></span>             fix().name(\"Set timeout to 10 minutes\")",
                                        "+<span class=\"line\"></span>                     .replace()",
                                        "+<span class=\"line\"></span>-                    .pattern(\"acquire\\\\(()\\\\)\")",
                                        "+<span class=\"line\"></span>+                    .pattern(\"acquire\\\\s*\\\\(()\\\\s*\\\\)\")",
                                        "+<span class=\"line\"></span>                     .with(\"10*60*1000L /*10 minutes*/\")",
                                        "+<span class=\"line\"></span>                     .build();</code></pre><p>",
                                        "+",
                                        " ",
                                        " ",
                                        " </p>"
                                    ],
                                    [
                                        " For example, to create a lint fix to set an XML attribute of a given",
                                        " name to \u201dtrue\u201c, use something like this:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">LintFix fix = fix().<span class=\"hljs-keyword\">set</span>(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">\"singleLine\"</span>, <span class=\"hljs-string\">\"true\"</span>).build()</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>LintFix fix = fix().<span class=\"hljs-keyword\">set</span>(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">\"singleLine\"</span>, <span class=\"hljs-string\">\"true\"</span>).build()</code></pre><p>",
                                        " ",
                                        " Here the <code>fix()</code> method is provided by the <code>Detector</code> super class, but",
                                        " that's just a utility method for <code>LintFix.fix()</code> (or in older versions,"
                                    ],
                                    [
                                        "   approach to a completely different one that you cannot automate, you",
                                        "   could use something like this:</li></ul>",
                                        " ",
                                        "-<p></p><pre class=\"listing tilde\"><code><span class=\"line\"><span class=\"hljs-keyword\">val</span> message = <span class=\"hljs-string\">\"Job scheduling with `GcmNetworkManager` is deprecated: Use AndroidX `WorkManager` instead\"</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">val</span> fix = fix()</span>",
                                        "-<span class=\"line\">.url(<span class=\"hljs-string\">\"https://developer.android.com/topic/libraries/architecture/workmanager/migrating-gcm\"</span>)</span>",
                                        "-<span class=\"line\">.build()</span></code></pre>",
                                        "+<p></p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">val</span> message = <span class=\"hljs-string\">\"Job scheduling with `GcmNetworkManager` is deprecated: Use AndroidX `WorkManager` instead\"</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">val</span> fix = fix()",
                                        "+<span class=\"line\"></span>.url(<span class=\"hljs-string\">\"https://developer.android.com/topic/libraries/architecture/workmanager/migrating-gcm\"</span>)",
                                        "+<span class=\"line\"></span>.build()</code></pre>",
                                        " <a class=\"target\" name=\"combiningfixes\">&nbsp;</a><a class=\"target\" name=\"addingquickfixes/combiningfixes\">&nbsp;</a><a class=\"target\" name=\"toc7.5\">&nbsp;</a><h2>Combining Fixes</h2>",
                                        " <p>",
                                        " "
                                    ],
                                    [
                                        " performed as a unit; here we're both setting a new attribute and",
                                        " deleting a previous attribute:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\"><span class=\"hljs-keyword\">val</span> fix = fix().name(<span class=\"hljs-string\">\"Replace with singleLine=\\\"true\\\"\"</span>)</span>",
                                        "-<span class=\"line\">    .composite(</span>",
                                        "-<span class=\"line\">        fix().<span class=\"hljs-keyword\">set</span>(ANDROID_URI, <span class=\"hljs-string\">\"singleLine\"</span>, <span class=\"hljs-string\">\"true\"</span>).build(),</span>",
                                        "-<span class=\"line\">        fix().unset(namespace, oldAttributeName).build()</span>",
                                        "-<span class=\"line\">    )</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">val</span> fix = fix().name(<span class=\"hljs-string\">\"Replace with singleLine=\\\"true\\\"\"</span>)",
                                        "+<span class=\"line\"></span>    .composite(",
                                        "+<span class=\"line\"></span>        fix().<span class=\"hljs-keyword\">set</span>(ANDROID_URI, <span class=\"hljs-string\">\"singleLine\"</span>, <span class=\"hljs-string\">\"true\"</span>).build(),",
                                        "+<span class=\"line\"></span>        fix().unset(namespace, oldAttributeName).build()",
                                        "+<span class=\"line\"></span>    )</code></pre><p>",
                                        " ",
                                        " And here's an example of how to create an alternatives fix, which are",
                                        " offered to the user as separate options; this is from our earlier"
                                    ],
                                    [
                                        " description, which can be set either on the \u201dtext\u201c attribute or the",
                                        " \u201ccontentDescription\u201d attribute:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\"><span class=\"hljs-keyword\">val</span> fix = fix().alternatives(</span>",
                                        "-<span class=\"line\">    fix().<span class=\"hljs-keyword\">set</span>().todo(ANDROID_URI, <span class=\"hljs-string\">\"text\"</span>).build(),</span>",
                                        "-<span class=\"line\">    fix().<span class=\"hljs-keyword\">set</span>().todo(ANDROID_URI, <span class=\"hljs-string\">\"contentDescription\"</span>)</span>",
                                        "-<span class=\"line\">    .build())</span></code></pre>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">val</span> fix = fix().alternatives(",
                                        "+<span class=\"line\"></span>    fix().<span class=\"hljs-keyword\">set</span>().todo(ANDROID_URI, <span class=\"hljs-string\">\"text\"</span>).build(),",
                                        "+<span class=\"line\"></span>    fix().<span class=\"hljs-keyword\">set</span>().todo(ANDROID_URI, <span class=\"hljs-string\">\"contentDescription\"</span>)",
                                        "+<span class=\"line\"></span>    .build())</code></pre>",
                                        " <a class=\"target\" name=\"refactoringjavaandkotlincode\">&nbsp;</a><a class=\"target\" name=\"addingquickfixes/refactoringjavaandkotlincode\">&nbsp;</a><a class=\"target\" name=\"toc7.6\">&nbsp;</a><h2>Refactoring Java and Kotlin code</h2>",
                                        " <p>",
                                        " "
                                    ],
                                    [
                                        " ",
                                        " Here's an example from lint's <code>AssertDetector</code>:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-keyword\">val</span> fix = fix().name(<span class=\"hljs-string\">\"Surround with desiredAssertionStatus() check\"</span>)</span>",
                                        "-<span class=\"line\">    .replace()</span>",
                                        "-<span class=\"line\">    .range(context.getLocation(assertCall))</span>",
                                        "-<span class=\"line\">    .pattern(<span class=\"hljs-string\">\"(.*)\"</span>)</span>",
                                        "-<span class=\"line\">    .with(<span class=\"hljs-string\">\"if (javaClass.desiredAssertionStatus()) { \\\\k&lt;1&gt; }\"</span>)</span>",
                                        "-<span class=\"line\">    .reformat(<span class=\"hljs-literal\">true</span>)</span>",
                                        "-<span class=\"line\">    .build()</span></div></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-keyword\">val</span> fix = fix().name(<span class=\"hljs-string\">\"Surround with desiredAssertionStatus() check\"</span>)",
                                        "+<span class=\"line\"></span>    .replace()",
                                        "+<span class=\"line\"></span>    .range(context.getLocation(assertCall))",
                                        "+<span class=\"line\"></span>    .pattern(<span class=\"hljs-string\">\"(.*)\"</span>)",
                                        "+<span class=\"line\"></span>    .with(<span class=\"hljs-string\">\"if (javaClass.desiredAssertionStatus()) { \\\\k&lt;1&gt; }\"</span>)",
                                        "+<span class=\"line\"></span>    .reformat(<span class=\"hljs-literal\">true</span>)",
                                        "+<span class=\"line\"></span>    .build()</div></code></pre><p>",
                                        " ",
                                        " The replacement string's back reference above, on line 5, is \\k&lt;1&gt;. If",
                                        " there were multiple regular expression groups in the replacement"
                                    ],
                                    [
                                        " ",
                                        " Here's how this looks when applied, from its unit test:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">lint().files().run().expectFixDiffs(</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-string\">\"\"\"</span>",
                                        "-<span class=\"line\">    Fix for src/test/pkg/AssertTest.kt line 18: Surround with desiredAssertionStatus() check:</span>",
                                        "-<span class=\"line\">    @@ -18 +18</span>",
                                        "-<span class=\"line\">    -         assert(expensive()) // WARN</span>",
                                        "-<span class=\"line\">    +         if (javaClass.desiredAssertionStatus()) { assert(expensive()) } // WARN</span>",
                                        "-<span class=\"line\">    \"\"\"</span></span>",
                                        "-<span class=\"line\">)</span></code></pre>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>lint().files().run().expectFixDiffs(",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-string\">\"\"\"",
                                        "+<span class=\"line\"></span>    Fix for src/test/pkg/AssertTest.kt line 18: Surround with desiredAssertionStatus() check:",
                                        "+<span class=\"line\"></span>    @@ -18 +18",
                                        "+<span class=\"line\"></span>    -         assert(expensive()) // WARN",
                                        "+<span class=\"line\"></span>    +         if (javaClass.desiredAssertionStatus()) { assert(expensive()) } // WARN",
                                        "+<span class=\"line\"></span>    \"\"\"</span>",
                                        "+<span class=\"line\"></span>)</code></pre>",
                                        " <a class=\"target\" name=\"emittingquickfixxmltoapplyonci\">&nbsp;</a><a class=\"target\" name=\"addingquickfixes/emittingquickfixxmltoapplyonci\">&nbsp;</a><a class=\"target\" name=\"toc7.8\">&nbsp;</a><h2>Emitting quick fix XML to apply on CI</h2>",
                                        " <p>",
                                        " "
                                    ],
                                    [
                                        " merged manifest, is not allowed during the analysis phase. Attempting",
                                        " to do so will generate an error:",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\">    SdCardTest.java: Error: The lint detector</span>",
                                        "-<span class=\"line\">        com.android.tools.lint.checks.SdCardDetector</span>",
                                        "-<span class=\"line\">    called context.getMainProject() during module analysis.</span>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span>    SdCardTest.java: Error: The lint detector",
                                        "+<span class=\"line\"></span>        com.android.tools.lint.checks.SdCardDetector",
                                        "+<span class=\"line\"></span>    called context.getMainProject() during module analysis.",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">    This does not work correctly when running in Lint Unit Tests.</span>",
                                        "+<span class=\"line\"></span>    This does not work correctly when running in Lint Unit Tests.",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">    In particular, there may be false positives or false negatives because</span>",
                                        "-<span class=\"line\">    the lint check may be using the minSdkVersion or manifest information</span>",
                                        "-<span class=\"line\">    from the library instead of any consuming app module.</span>",
                                        "+<span class=\"line\"></span>    In particular, there may be false positives or false negatives because",
                                        "+<span class=\"line\"></span>    the lint check may be using the minSdkVersion or manifest information",
                                        "+<span class=\"line\"></span>    from the library instead of any consuming app module.",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">    Contact the vendor of the lint issue to get it fixed/updated (if</span>",
                                        "-<span class=\"line\">    known, listed below), and in the meantime you can try to work around</span>",
                                        "-<span class=\"line\">    this by disabling the following issues:</span>",
                                        "+<span class=\"line\"></span>    Contact the vendor of the lint issue to get it fixed/updated (if",
                                        "+<span class=\"line\"></span>    known, listed below), and in the meantime you can try to work around",
                                        "+<span class=\"line\"></span>    this by disabling the following issues:",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">    \"SdCardPath\"</span>",
                                        "+<span class=\"line\"></span>    \"SdCardPath\"",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">    Issue Vendor:</span>",
                                        "-<span class=\"line\">    Vendor: Android Open Source Project</span>",
                                        "-<span class=\"line\">    Contact: https://groups.google.com/g/lint-dev</span>",
                                        "-<span class=\"line\">    Feedback: https://issuetracker.google.com/issues/new?component=192708</span>",
                                        "+<span class=\"line\"></span>    Issue Vendor:",
                                        "+<span class=\"line\"></span>    Vendor: Android Open Source Project",
                                        "+<span class=\"line\"></span>    Contact: https://groups.google.com/g/lint-dev",
                                        "+<span class=\"line\"></span>    Feedback: https://issuetracker.google.com/issues/new?component=192708",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">    Call stack: Context.getMainProject(Context.kt:117)\u2190SdCardDetector$createUastHandler$1.visitLiteralExpression(SdCardDetector.kt:66)</span>",
                                        "-<span class=\"line\">        \u2190UElementVisitor$DispatchPsiVisitor.visitLiteralExpression(UElementVisitor.kt:791)</span>",
                                        "-<span class=\"line\">        \u2190ULiteralExpression$DefaultImpls.accept(ULiteralExpression.kt:38)</span>",
                                        "-<span class=\"line\">        \u2190JavaULiteralExpression.accept(JavaULiteralExpression.kt:24)\u2190UVariableKt.visitContents(UVariable.kt:64)</span>",
                                        "-<span class=\"line\">        \u2190UVariableKt.access$visitContents(UVariable.kt:1)\u2190UField$DefaultImpls.accept(UVariable.kt:92)</span>",
                                        "-<span class=\"line\">        ...</span></code></pre><p>",
                                        "+<span class=\"line\"></span>    Call stack: Context.getMainProject(Context.kt:117)\u2190SdCardDetector$createUastHandler$1.visitLiteralExpression(SdCardDetector.kt:66)",
                                        "+<span class=\"line\"></span>        \u2190UElementVisitor$DispatchPsiVisitor.visitLiteralExpression(UElementVisitor.kt:791)",
                                        "+<span class=\"line\"></span>        \u2190ULiteralExpression$DefaultImpls.accept(ULiteralExpression.kt:38)",
                                        "+<span class=\"line\"></span>        \u2190JavaULiteralExpression.accept(JavaULiteralExpression.kt:24)\u2190UVariableKt.visitContents(UVariable.kt:64)",
                                        "+<span class=\"line\"></span>        \u2190UVariableKt.access$visitContents(UVariable.kt:1)\u2190UField$DefaultImpls.accept(UVariable.kt:92)",
                                        "+<span class=\"line\"></span>        ...</code></pre><p>",
                                        " ",
                                        " Specific examples of information many lint checks look at in this",
                                        " category:"
                                    ],
                                    [
                                        " ",
                                        " For example, if you have the following unit test declaration:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\">   lint().files(</span>",
                                        "-<span class=\"line\">       manifest().minSdk(<span class=\"hljs-number\">15</span>),</span>",
                                        "-<span class=\"line\">       manifest().to(<span class=\"hljs-string\">\"../app/AndroidManifest.xml\"</span>).minSdk(<span class=\"hljs-number\">21</span>),</span>",
                                        "-<span class=\"line\">       xml(</span>",
                                        "-<span class=\"line\">           <span class=\"hljs-string\">\"res/layout/linear.xml\"</span>,</span>",
                                        "-<span class=\"line\">           <span class=\"hljs-string\">\"&lt;linearlayout ...=\"</span><span class=\"hljs-string\">\"&gt;\"</span> + ...</span></div></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span>   lint().files(",
                                        "+<span class=\"line\"></span>       manifest().minSdk(<span class=\"hljs-number\">15</span>),",
                                        "+<span class=\"line\"></span>       manifest().to(<span class=\"hljs-string\">\"../app/AndroidManifest.xml\"</span>).minSdk(<span class=\"hljs-number\">21</span>),",
                                        "+<span class=\"line\"></span>       xml(",
                                        "+<span class=\"line\"></span>           <span class=\"hljs-string\">\"res/layout/linear.xml\"</span>,",
                                        "+<span class=\"line\"></span>           <span class=\"hljs-string\">\"&lt;linearlayout ...=\"</span><span class=\"hljs-string\">\"&gt;\"</span> + ...</div></code></pre><p>",
                                        " ",
                                        " The second <code>manifest()</code> call here on line 3 does all the heavy lifting:",
                                        " the fact that you're referencing <code>../app</code> means it will create another"
                                    ],
                                    [
                                        " ",
                                        " ",
                                        " In the past, you would typically report problems like this:",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\">    context.report(</span>",
                                        "-<span class=\"line\">        ISSUE,</span>",
                                        "-<span class=\"line\">        element,</span>",
                                        "-<span class=\"line\">        context.getNameLocation(element),</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-string\">\"Missing `contentDescription` attribute on image\"</span></span>",
                                        "-<span class=\"line\">    )</span></div></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span>    context.report(",
                                        "+<span class=\"line\"></span>        ISSUE,",
                                        "+<span class=\"line\"></span>        element,",
                                        "+<span class=\"line\"></span>        context.getNameLocation(element),",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-string\">\"Missing `contentDescription` attribute on image\"</span>",
                                        "+<span class=\"line\"></span>    )</div></code></pre><p>",
                                        " ",
                                        " At some point, we added support for quickfixes, so the",
                                        " report method took an additional parameter, line 6:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\">    context.report(</span>",
                                        "-<span class=\"line\">        ISSUE,</span>",
                                        "-<span class=\"line\">        element,</span>",
                                        "-<span class=\"line\">        context.getNameLocation(element),</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-string\">\"Missing `contentDescription` attribute on image\"</span>,</span>",
                                        "-<span class=\"line\">        fix().<span class=\"hljs-keyword\">set</span>().todo(ANDROID_URI, ATTR_CONTENT_DESCRIPTION).build()</span>",
                                        "-<span class=\"line\">)</span></div></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span>    context.report(",
                                        "+<span class=\"line\"></span>        ISSUE,",
                                        "+<span class=\"line\"></span>        element,",
                                        "+<span class=\"line\"></span>        context.getNameLocation(element),",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-string\">\"Missing `contentDescription` attribute on image\"</span>,",
                                        "+<span class=\"line\"></span>        fix().<span class=\"hljs-keyword\">set</span>().todo(ANDROID_URI, ATTR_CONTENT_DESCRIPTION).build()",
                                        "+<span class=\"line\"></span>)</div></code></pre><p>",
                                        " ",
                                        " Now that we need to attach various additional data (like constraints",
                                        " and maps), we don't really want to just add more parameters."
                                    ],
                                    [
                                        " adding <code>Incident(</code> (or from Java, <code>new Incident(</code>) inside the",
                                        " <code>context.report</code> block like this:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">    context.report(Incident(</span>",
                                        "-<span class=\"line\">        ISSUE,</span>",
                                        "-<span class=\"line\">        element,</span>",
                                        "-<span class=\"line\">        context.getNameLocation(element),</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-string\">\"Missing `contentDescription` attribute on image\"</span></span>",
                                        "-<span class=\"line\">    ))</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>    context.report(Incident(",
                                        "+<span class=\"line\"></span>        ISSUE,",
                                        "+<span class=\"line\"></span>        element,",
                                        "+<span class=\"line\"></span>        context.getNameLocation(element),",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-string\">\"Missing `contentDescription` attribute on image\"</span>",
                                        "+<span class=\"line\"></span>    ))</code></pre><p>",
                                        " ",
                                        " and then reformatting the source code:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">    context.report(</span>",
                                        "-<span class=\"line\">        Incident(</span>",
                                        "-<span class=\"line\">            ISSUE,</span>",
                                        "-<span class=\"line\">            element,</span>",
                                        "-<span class=\"line\">            context.getNameLocation(element),</span>",
                                        "-<span class=\"line\">            <span class=\"hljs-string\">\"Missing `contentDescription` attribute on image\"</span></span>",
                                        "-<span class=\"line\">        )</span>",
                                        "-<span class=\"line\">)</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>    context.report(",
                                        "+<span class=\"line\"></span>        Incident(",
                                        "+<span class=\"line\"></span>            ISSUE,",
                                        "+<span class=\"line\"></span>            element,",
                                        "+<span class=\"line\"></span>            context.getNameLocation(element),",
                                        "+<span class=\"line\"></span>            <span class=\"hljs-string\">\"Missing `contentDescription` attribute on image\"</span>",
                                        "+<span class=\"line\"></span>        )",
                                        "+<span class=\"line\"></span>)</code></pre><p>",
                                        " ",
                                        " <code>Incident</code> has a number of overloaded constructors to make it easy to",
                                        " construct it from existing report calls."
                                    ],
                                    [
                                        " There are other ways to construct it too, for example like the",
                                        " following:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">    Incident(context)</span>",
                                        "-<span class=\"line\">        .issue(ISSUE)</span>",
                                        "-<span class=\"line\">        .scope(node)</span>",
                                        "-<span class=\"line\">        .location(context.getLocation(node))</span>",
                                        "-<span class=\"line\">        .message(<span class=\"hljs-string\">\"Do not hardcode \\\"/sdcard/\\\"\"</span>).report()</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>    Incident(context)",
                                        "+<span class=\"line\"></span>        .issue(ISSUE)",
                                        "+<span class=\"line\"></span>        .scope(node)",
                                        "+<span class=\"line\"></span>        .location(context.getLocation(node))",
                                        "+<span class=\"line\"></span>        .message(<span class=\"hljs-string\">\"Do not hardcode \\\"/sdcard/\\\"\"</span>).report()</code></pre><p>",
                                        " ",
                                        " That are additional methods you can fall too, like <code>fix()</code>, and",
                                        " conveniently, <code>at()</code> which specifies not only the scope node but",
                                        " automatically computes and records the location of that scope node too,",
                                        " such that the following is equivalent:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">    Incident(context)</span>",
                                        "-<span class=\"line\">        .issue(ISSUE)</span>",
                                        "-<span class=\"line\">        .at(node)</span>",
                                        "-<span class=\"line\">        .message(<span class=\"hljs-string\">\"Do not hardcode \\\"/sdcard/\\\"\"</span>).report()</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>    Incident(context)",
                                        "+<span class=\"line\"></span>        .issue(ISSUE)",
                                        "+<span class=\"line\"></span>        .at(node)",
                                        "+<span class=\"line\"></span>        .message(<span class=\"hljs-string\">\"Do not hardcode \\\"/sdcard/\\\"\"</span>).report()</code></pre><p>",
                                        " ",
                                        " So step one to partial analysis is to convert your code to report",
                                        " incidents instead of the passing in all the individual properties of an"
                                    ],
                                    [
                                        " <code>Incident</code> as before, and then report them via",
                                        " <code>context.report(incident, constraint)</code>:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">    String message =</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-string\">\"One or more images in this project can be converted to \"</span></span>",
                                        "-<span class=\"line\">        + <span class=\"hljs-string\">\"the WebP format which typically results in smaller file sizes, \"</span></span>",
                                        "-<span class=\"line\">        + <span class=\"hljs-string\">\"even for lossless conversion\"</span>;</span>",
                                        "-<span class=\"line\">    Incident incident = <span class=\"hljs-keyword\">new</span> Incident(WEBP_ELIGIBLE, location, message);</span>",
                                        "-<span class=\"line\">    context.report(incident, minSdkAtLeast(<span class=\"hljs-number\">18</span>));</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>    String message =",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-string\">\"One or more images in this project can be converted to \"</span>",
                                        "+<span class=\"line\"></span>        + <span class=\"hljs-string\">\"the WebP format which typically results in smaller file sizes, \"</span>",
                                        "+<span class=\"line\"></span>        + <span class=\"hljs-string\">\"even for lossless conversion\"</span>;",
                                        "+<span class=\"line\"></span>    Incident incident = <span class=\"hljs-keyword\">new</span> Incident(WEBP_ELIGIBLE, location, message);",
                                        "+<span class=\"line\"></span>    context.report(incident, minSdkAtLeast(<span class=\"hljs-number\">18</span>));</code></pre><p>",
                                        " ",
                                        " Finally, note that you can combine constraints; there are both \u201cand\u201d",
                                        " and \u201cor\u201d operators defined for the <code>Constraint</code> class. so the following",
                                        " is valid:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">    <span class=\"hljs-keyword\">val</span> constraint = targetSdkAtLeast(<span class=\"hljs-number\">23</span>) and notLibraryProject()</span>",
                                        "-<span class=\"line\">    context.report(incident, constraint)</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> constraint = targetSdkAtLeast(<span class=\"hljs-number\">23</span>) and notLibraryProject()",
                                        "+<span class=\"line\"></span>    context.report(incident, constraint)</code></pre><p>",
                                        " ",
                                        " That's all you have to do. Lint will record this provisional incident,",
                                        " and when it is performing reporting, it will evaluate these constraints"
                                    ],
                                    [
                                        " ",
                                        " Here's an example:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">    context.report(</span>",
                                        "-<span class=\"line\">        incident,</span>",
                                        "-<span class=\"line\">        map()</span>",
                                        "-<span class=\"line\">            .put(KEY_OVERRIDES, overrides)</span>",
                                        "-<span class=\"line\">            .put(KEY_IMPLICIT, implicitlyExportedPreS)</span>",
                                        "-<span class=\"line\">    )</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>    context.report(",
                                        "+<span class=\"line\"></span>        incident,",
                                        "+<span class=\"line\"></span>        map()",
                                        "+<span class=\"line\"></span>            .put(KEY_OVERRIDES, overrides)",
                                        "+<span class=\"line\"></span>            .put(KEY_IMPLICIT, implicitlyExportedPreS)",
                                        "+<span class=\"line\"></span>    )</code></pre><p>",
                                        " ",
                                        " Here, <code>map()</code> is a method defined by <code>Detector</code> to create a new",
                                        " <code>LintMap</code>, similar to how <code>fix()</code> constructs a new <code>LintFix</code>."
                                    ],
                                    [
                                        " Note however that when reporting data, you need to do the post",
                                        " processing yourself. To do this, you need to override this method:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">    <span class=\"hljs-comment\">/**</span>",
                                        "-<span class=\"line\">     * Filter which looks at incidents previously reported via</span>",
                                        "-<span class=\"line\">     * [Context.report] with a [LintMap], and returns false if the issue</span>",
                                        "-<span class=\"line\">     * does not apply in the current reporting project context, or true</span>",
                                        "-<span class=\"line\">     * if the issue should be reported. For issues that are accepted,</span>",
                                        "-<span class=\"line\">     * the detector is also allowed to mutate the issue, such as</span>",
                                        "-<span class=\"line\">     * customizing the error message further.</span>",
                                        "-<span class=\"line\">     */</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">filterIncident</span><span class=\"hljs-params\">(context: <span class=\"hljs-type\">Context</span>, incident: <span class=\"hljs-type\">Incident</span>, map: <span class=\"hljs-type\">LintMap</span>)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { }</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>    <span class=\"hljs-comment\">/**",
                                        "+<span class=\"line\"></span>     * Filter which looks at incidents previously reported via",
                                        "+<span class=\"line\"></span>     * [Context.report] with a [LintMap], and returns false if the issue",
                                        "+<span class=\"line\"></span>     * does not apply in the current reporting project context, or true",
                                        "+<span class=\"line\"></span>     * if the issue should be reported. For issues that are accepted,",
                                        "+<span class=\"line\"></span>     * the detector is also allowed to mutate the issue, such as",
                                        "+<span class=\"line\"></span>     * customizing the error message further.",
                                        "+<span class=\"line\"></span>     */</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">filterIncident</span><span class=\"hljs-params\">(context: <span class=\"hljs-type\">Context</span>, incident: <span class=\"hljs-type\">Incident</span>, map: <span class=\"hljs-type\">LintMap</span>)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { }</code></pre><p>",
                                        " ",
                                        " For example, for the above report call, the corresponding",
                                        " implementation of <code>filterIncident</code> looks like this:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">filterIncident</span><span class=\"hljs-params\">(context: <span class=\"hljs-type\">Context</span>, incident: <span class=\"hljs-type\">Incident</span>, map: <span class=\"hljs-type\">LintMap</span>)</span></span>: <span class=\"hljs-built_in\">Boolean</span> {</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-keyword\">if</span> (context.mainProject.targetSdk &lt; <span class=\"hljs-number\">19</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-keyword\">if</span> (map.getBoolean(KEY_IMPLICIT, <span class=\"hljs-literal\">false</span>) == <span class=\"hljs-literal\">true</span> &amp;&amp; context.mainProject.targetSdk &gt;= <span class=\"hljs-number\">31</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-keyword\">return</span> map.getBoolean(KEY_OVERRIDES, <span class=\"hljs-literal\">false</span>) == <span class=\"hljs-literal\">false</span></span>",
                                        "-<span class=\"line\">    }</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">filterIncident</span><span class=\"hljs-params\">(context: <span class=\"hljs-type\">Context</span>, incident: <span class=\"hljs-type\">Incident</span>, map: <span class=\"hljs-type\">LintMap</span>)</span></span>: <span class=\"hljs-built_in\">Boolean</span> {",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-keyword\">if</span> (context.mainProject.targetSdk &lt; <span class=\"hljs-number\">19</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-keyword\">if</span> (map.getBoolean(KEY_IMPLICIT, <span class=\"hljs-literal\">false</span>) == <span class=\"hljs-literal\">true</span> &amp;&amp; context.mainProject.targetSdk &gt;= <span class=\"hljs-number\">31</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-keyword\">return</span> map.getBoolean(KEY_OVERRIDES, <span class=\"hljs-literal\">false</span>) == <span class=\"hljs-literal\">false</span>",
                                        "+<span class=\"line\"></span>    }</code></pre><p>",
                                        " ",
                                        " Note also that you are allowed to modify incidents here before",
                                        " reporting them. The most common reason scenario for this is changing"
                                    ],
                                    [
                                        " </p><p>",
                                        " ",
                                        " The most complicated example of this is lint's built-in",
                                        "-<a href=\"https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-master-dev:lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/UnusedResourceDetector.java\">UnusedResourceDetector</a>, which locates unused resources. This \u201crequires\u201d",
                                        "+<a href=\"https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-main:lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/UnusedResourceDetector.java\">UnusedResourceDetector</a>, which locates unused resources. This \u201crequires\u201d",
                                        " global analysis, since we want to include all resources in the entire",
                                        " project. We also cannot just store lists of \u201cresources declared\u201d and",
                                        " \u201cresources referenced\u201c since we really want to treat this as a graph."
                                    ],
                                    [
                                        " first looking up the module data map, by calling this method on the",
                                        " <code>Context</code>:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">    <span class=\"hljs-comment\">/**</span>",
                                        "-<span class=\"line\">     * Returns a [PartialResult] where state can be stored for later</span>",
                                        "-<span class=\"line\">     * analysis. This is a more general mechanism for reporting</span>",
                                        "-<span class=\"line\">     * provisional issues when you need to collect a lot of data and do</span>",
                                        "-<span class=\"line\">     * some post processing before figuring out what to report and you</span>",
                                        "-<span class=\"line\">     * can't enumerate out specific [Incident] occurrences up front.</span>",
                                        "-<span class=\"line\">     *</span>",
                                        "-<span class=\"line\">     * Note that in this case, the lint infrastructure will not</span>",
                                        "-<span class=\"line\">     * automatically look up the error location (since there isn't one</span>",
                                        "-<span class=\"line\">     * yet) to see if the issue has been suppressed (via annotations,</span>",
                                        "-<span class=\"line\">     * lint.xml and other mechanisms), so you should do this</span>",
                                        "-<span class=\"line\">     * yourself, via the various [LintDriver.isSuppressed] methods.</span>",
                                        "-<span class=\"line\">     */</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getPartialResults</span><span class=\"hljs-params\">(issue: <span class=\"hljs-type\">Issue</span>)</span></span>: PartialResult { ... }</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>    <span class=\"hljs-comment\">/**",
                                        "+<span class=\"line\"></span>     * Returns a [PartialResult] where state can be stored for later",
                                        "+<span class=\"line\"></span>     * analysis. This is a more general mechanism for reporting",
                                        "+<span class=\"line\"></span>     * provisional issues when you need to collect a lot of data and do",
                                        "+<span class=\"line\"></span>     * some post processing before figuring out what to report and you",
                                        "+<span class=\"line\"></span>     * can't enumerate out specific [Incident] occurrences up front.",
                                        "+<span class=\"line\"></span>     *",
                                        "+<span class=\"line\"></span>     * Note that in this case, the lint infrastructure will not",
                                        "+<span class=\"line\"></span>     * automatically look up the error location (since there isn't one",
                                        "+<span class=\"line\"></span>     * yet) to see if the issue has been suppressed (via annotations,",
                                        "+<span class=\"line\"></span>     * lint.xml and other mechanisms), so you should do this",
                                        "+<span class=\"line\"></span>     * yourself, via the various [LintDriver.isSuppressed] methods.",
                                        "+<span class=\"line\"></span>     */</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getPartialResults</span><span class=\"hljs-params\">(issue: <span class=\"hljs-type\">Issue</span>)</span></span>: PartialResult { ... }</code></pre><p>",
                                        " ",
                                        " Then you put whatever data you want, such as the resource usage model",
                                        " encoded as a string."
                                    ],
                                    [
                                        " you can walk through the map contents, compute incidents and report",
                                        " them:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">    <span class=\"hljs-comment\">/**</span>",
                                        "-<span class=\"line\">     * Callback to detectors that add partial results (by adding entries</span>",
                                        "-<span class=\"line\">     * to the map returned by [LintClient.getPartialResults]). This is</span>",
                                        "-<span class=\"line\">     * where the data should be analyzed and merged and results reported</span>",
                                        "-<span class=\"line\">     * (via [Context.report]) to lint.</span>",
                                        "-<span class=\"line\">     */</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">checkPartialResults</span><span class=\"hljs-params\">(context: <span class=\"hljs-type\">Context</span>, partialResults: <span class=\"hljs-type\">PartialResult</span>)</span></span> { ... }</span></code></pre>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>    <span class=\"hljs-comment\">/**",
                                        "+<span class=\"line\"></span>     * Callback to detectors that add partial results (by adding entries",
                                        "+<span class=\"line\"></span>     * to the map returned by [LintClient.getPartialResults]). This is",
                                        "+<span class=\"line\"></span>     * where the data should be analyzed and merged and results reported",
                                        "+<span class=\"line\"></span>     * (via [Context.report]) to lint.",
                                        "+<span class=\"line\"></span>     */</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">checkPartialResults</span><span class=\"hljs-params\">(context: <span class=\"hljs-type\">Context</span>, partialResults: <span class=\"hljs-type\">PartialResult</span>)</span></span> { ... }</code></pre>",
                                        " <a class=\"target\" name=\"optimizations\">&nbsp;</a><a class=\"target\" name=\"partialanalysis/optimizations\">&nbsp;</a><a class=\"target\" name=\"toc8.9\">&nbsp;</a><h2>Optimizations</h2>",
                                        " <p>",
                                        " "
                                    ],
                                    [
                                        " ",
                                        " Do this by calling <code>isGlobalAnalysis()</code>:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">   <span class=\"hljs-keyword\">if</span> (context.isGlobalAnalysis()) {</span>",
                                        "-<span class=\"line\">       <span class=\"hljs-comment\">// shortcut</span></span>",
                                        "-<span class=\"line\">   } <span class=\"hljs-keyword\">else</span> {</span>",
                                        "-<span class=\"line\">       <span class=\"hljs-comment\">// partial analysis code path</span></span>",
                                        "-<span class=\"line\">   }</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>   <span class=\"hljs-keyword\">if</span> (context.isGlobalAnalysis()) {",
                                        "+<span class=\"line\"></span>       <span class=\"hljs-comment\">// shortcut</span>",
                                        "+<span class=\"line\"></span>   } <span class=\"hljs-keyword\">else</span> {",
                                        "+<span class=\"line\"></span>       <span class=\"hljs-comment\">// partial analysis code path</span>",
                                        "+<span class=\"line\"></span>   }</code></pre><p>",
                                        " ",
                                        " ",
                                        " "
                                    ],
                                    [
                                        " ",
                                        " Here are some examples:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\">getFragmentManager().beginTransaction().commit() <span class=\"hljs-comment\">// OK</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">val</span> t1 = getFragmentManager().beginTransaction() <span class=\"hljs-comment\">// NEVER COMMITTED</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">val</span> t2 = getFragmentManager().beginTransaction() <span class=\"hljs-comment\">// OK</span></span>",
                                        "-<span class=\"line\">t2.commit()</span></div></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span>getFragmentManager().beginTransaction().commit() <span class=\"hljs-comment\">// OK</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">val</span> t1 = getFragmentManager().beginTransaction() <span class=\"hljs-comment\">// NEVER COMMITTED</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">val</span> t2 = getFragmentManager().beginTransaction() <span class=\"hljs-comment\">// OK</span>",
                                        "+<span class=\"line\"></span>t2.commit()</div></code></pre><p>",
                                        " ",
                                        " Here we are creating 3 transactions. The first one is committed",
                                        " immediately. The second one is never committed. And the third one"
                                    ],
                                    [
                                        " ",
                                        " For the above transaction scenario, it might look like this:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getApplicableMethodNames</span><span class=\"hljs-params\">()</span></span>: List&lt;string&gt; =</span>",
                                        "-<span class=\"line\">    listOf(<span class=\"hljs-string\">\"beginTransaction\"</span>)</span>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getApplicableMethodNames</span><span class=\"hljs-params\">()</span></span>: List&lt;string&gt; =",
                                        "+<span class=\"line\"></span>    listOf(<span class=\"hljs-string\">\"beginTransaction\"</span>)",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">visitMethodCall</span><span class=\"hljs-params\">(context: <span class=\"hljs-type\">JavaContext</span>, node: <span class=\"hljs-type\">UCallExpression</span>, method: <span class=\"hljs-type\">PsiMethod</span>)</span></span> {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">val</span> containingClass = method.containingClass</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">val</span> evaluator = context.evaluator</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">visitMethodCall</span><span class=\"hljs-params\">(context: <span class=\"hljs-type\">JavaContext</span>, node: <span class=\"hljs-type\">UCallExpression</span>, method: <span class=\"hljs-type\">PsiMethod</span>)</span></span> {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> containingClass = method.containingClass",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> evaluator = context.evaluator",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">if</span> (evaluator.extendsClass(containingClass, <span class=\"hljs-string\">\"android.app.FragmentManager\"</span>, <span class=\"hljs-literal\">false</span>)) {</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-comment\">// node is a call to FragmentManager.beginTransaction(),</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-comment\">// so this expression will evaluate to an instance of</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-comment\">// a Transaction. We want to track this instance to see</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-comment\">// if we eventually call commit on it.</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-keyword\">var</span> foundCommit = <span class=\"hljs-literal\">false</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-keyword\">val</span> visitor = <span class=\"hljs-keyword\">object</span> : DataFlowAnalyzer(setOf(node)) {</span>",
                                        "-<span class=\"line\">            <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">receiver</span><span class=\"hljs-params\">(call: <span class=\"hljs-type\">UCallExpression</span>)</span></span> {</span>",
                                        "-<span class=\"line\">                <span class=\"hljs-keyword\">if</span> (call.methodName == <span class=\"hljs-string\">\"commit\"</span>) {</span>",
                                        "-<span class=\"line\">                    foundCommit = <span class=\"hljs-literal\">true</span></span>",
                                        "-<span class=\"line\">                }</span>",
                                        "-<span class=\"line\">            }</span>",
                                        "-<span class=\"line\">        }</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-keyword\">val</span> method = node.getParentOfType(UMethod::<span class=\"hljs-keyword\">class</span>.java)</span>",
                                        "-<span class=\"line\">        method?.accept(visitor)</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-keyword\">if</span> (!foundCommit) {</span>",
                                        "-<span class=\"line\">            context.report(Incident(...))</span>",
                                        "-<span class=\"line\">        }</span>",
                                        "-<span class=\"line\">    }</span>",
                                        "-<span class=\"line\">}</span></div></code></pre><p>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">if</span> (evaluator.extendsClass(containingClass, <span class=\"hljs-string\">\"android.app.FragmentManager\"</span>, <span class=\"hljs-literal\">false</span>)) {",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-comment\">// node is a call to FragmentManager.beginTransaction(),</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-comment\">// so this expression will evaluate to an instance of</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-comment\">// a Transaction. We want to track this instance to see</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-comment\">// if we eventually call commit on it.</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-keyword\">var</span> foundCommit = <span class=\"hljs-literal\">false</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-keyword\">val</span> visitor = <span class=\"hljs-keyword\">object</span> : DataFlowAnalyzer(setOf(node)) {",
                                        "+<span class=\"line\"></span>            <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">receiver</span><span class=\"hljs-params\">(call: <span class=\"hljs-type\">UCallExpression</span>)</span></span> {",
                                        "+<span class=\"line\"></span>                <span class=\"hljs-keyword\">if</span> (call.methodName == <span class=\"hljs-string\">\"commit\"</span>) {",
                                        "+<span class=\"line\"></span>                    foundCommit = <span class=\"hljs-literal\">true</span>",
                                        "+<span class=\"line\"></span>                }",
                                        "+<span class=\"line\"></span>            }",
                                        "+<span class=\"line\"></span>        }",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-keyword\">val</span> method = node.getParentOfType(UMethod::<span class=\"hljs-keyword\">class</span>.java)",
                                        "+<span class=\"line\"></span>        method?.accept(visitor)",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-keyword\">if</span> (!foundCommit) {",
                                        "+<span class=\"line\"></span>            context.report(Incident(...))",
                                        "+<span class=\"line\"></span>        }",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>}</div></code></pre><p>",
                                        " ",
                                        " Aas you can see, the <code>DataFlowAnalyzer</code> is a visitor, so when we find a",
                                        " call we're interested in, we construct a <code>DataFlowAnalyzer</code> and"
                                    ],
                                    [
                                        " With the above setup, basic value tracking is working; e.g. it will",
                                        " correctly handle the following case:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-keyword\">val</span> t = getFragmentManager().beginTransaction().commit()</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">val</span> t2 = t</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">val</span> t3 = t2</span>",
                                        "-<span class=\"line\">t3.commit()</span></div></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-keyword\">val</span> t = getFragmentManager().beginTransaction().commit()",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">val</span> t2 = t",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">val</span> t3 = t2",
                                        "+<span class=\"line\"></span>t3.commit()</div></code></pre><p>",
                                        " ",
                                        " However, there's a lot that can go wrong, which we'll need to deal with. This is explained in the following sections",
                                        " "
                                    ],
                                    [
                                        " The Transaction API has a number of utility methods; here's a partial",
                                        " list:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FragmentTransaction</span> </span>{</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">commit</span><span class=\"hljs-params\">()</span></span>;</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">commitAllowingStateLoss</span><span class=\"hljs-params\">()</span></span>;</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> FragmentTransaction <span class=\"hljs-title\">show</span><span class=\"hljs-params\">(Fragment fragment)</span></span>;</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> FragmentTransaction <span class=\"hljs-title\">hide</span><span class=\"hljs-params\">(Fragment fragment)</span></span>;</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> FragmentTransaction <span class=\"hljs-title\">attach</span><span class=\"hljs-params\">(Fragment fragment)</span></span>;</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> FragmentTransaction <span class=\"hljs-title\">detach</span><span class=\"hljs-params\">(Fragment fragment)</span></span>;</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> FragmentTransaction <span class=\"hljs-title\">add</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> containerViewId, Fragment fragment)</span></span>;</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> FragmentTransaction <span class=\"hljs-title\">add</span><span class=\"hljs-params\">(Fragment fragment, String tag)</span></span>;</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> FragmentTransaction <span class=\"hljs-title\">addToBackStack</span><span class=\"hljs-params\">(String name)</span></span>;</span>",
                                        "-<span class=\"line\">    ...</span>",
                                        "-<span class=\"line\">}</span></div></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FragmentTransaction</span> </span>{",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">commit</span><span class=\"hljs-params\">()</span></span>;",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">commitAllowingStateLoss</span><span class=\"hljs-params\">()</span></span>;",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> FragmentTransaction <span class=\"hljs-title\">show</span><span class=\"hljs-params\">(Fragment fragment)</span></span>;",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> FragmentTransaction <span class=\"hljs-title\">hide</span><span class=\"hljs-params\">(Fragment fragment)</span></span>;",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> FragmentTransaction <span class=\"hljs-title\">attach</span><span class=\"hljs-params\">(Fragment fragment)</span></span>;",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> FragmentTransaction <span class=\"hljs-title\">detach</span><span class=\"hljs-params\">(Fragment fragment)</span></span>;",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> FragmentTransaction <span class=\"hljs-title\">add</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> containerViewId, Fragment fragment)</span></span>;",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> FragmentTransaction <span class=\"hljs-title\">add</span><span class=\"hljs-params\">(Fragment fragment, String tag)</span></span>;",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> FragmentTransaction <span class=\"hljs-title\">addToBackStack</span><span class=\"hljs-params\">(String name)</span></span>;",
                                        "+<span class=\"line\"></span>    ...",
                                        "+<span class=\"line\"></span>}</div></code></pre><p>",
                                        " ",
                                        " The reason all these methods return a <code>FragmentTransaction</code> is to make it easy to chain calls; e.g.",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">int</span> id = getFragmentManager().beginTransaction()</span>",
                                        "-<span class=\"line\">        .add(<span class=\"hljs-keyword\">new</span> Fragment(), <span class=\"hljs-keyword\">null</span>)</span>",
                                        "-<span class=\"line\">        .addToBackStack(<span class=\"hljs-keyword\">null</span>)</span>",
                                        "-<span class=\"line\">        .commit();</span></div></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">int</span> id = getFragmentManager().beginTransaction()",
                                        "+<span class=\"line\"></span>        .add(<span class=\"hljs-keyword\">new</span> Fragment(), <span class=\"hljs-keyword\">null</span>)",
                                        "+<span class=\"line\"></span>        .addToBackStack(<span class=\"hljs-keyword\">null</span>)",
                                        "+<span class=\"line\"></span>        .commit();</div></code></pre><p>",
                                        " ",
                                        " In order to correctly analyze this, we'd need to know what the implementation of <code>add</code> and <code>addToBackStack</code> return. If we know that they simply return \u201cthis\u201d, then it's easy; we can transfer the instance through the call.",
                                        " "
                                    ],
                                    [
                                        " ",
                                        " But there may be cases where you either don't want these heuristics, or you want to add your own. In these cases, you would override the <code>returnsSelf</code> method on the flow analyzer and apply your own logic:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-keyword\">val</span> visitor = <span class=\"hljs-keyword\">object</span> : DataFlowAnalyzer(setOf(node)) {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">returnsSelf</span><span class=\"hljs-params\">(call: <span class=\"hljs-type\">UCallExpression</span>)</span></span>: <span class=\"hljs-built_in\">Boolean</span> {</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">super</span>.returnsSelf(call) || call.methodName == <span class=\"hljs-string\">\"copy\"</span></span>",
                                        "-<span class=\"line\">    }</span>",
                                        "-<span class=\"line\">}</span></div></code></pre>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-keyword\">val</span> visitor = <span class=\"hljs-keyword\">object</span> : DataFlowAnalyzer(setOf(node)) {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">returnsSelf</span><span class=\"hljs-params\">(call: <span class=\"hljs-type\">UCallExpression</span>)</span></span>: <span class=\"hljs-built_in\">Boolean</span> {",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">super</span>.returnsSelf(call) || call.methodName == <span class=\"hljs-string\">\"copy\"</span>",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>}</div></code></pre>",
                                        " <a class=\"target\" name=\"kotlinscopingfunctions\">&nbsp;</a><a class=\"target\" name=\"dataflowanalyzer/kotlinscopingfunctions\">&nbsp;</a><a class=\"target\" name=\"toc9.3\">&nbsp;</a><h2>Kotlin Scoping Functions</h2>",
                                        " <p>",
                                        " "
                                    ],
                                    [
                                        " example, it will automatically handle scenarios like the",
                                        " following:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\">transaction1.let { it.commit() }</span>",
                                        "-<span class=\"line\">transaction2.apply { commit() }</span>",
                                        "-<span class=\"line\">with (transaction3) { commit() }</span>",
                                        "-<span class=\"line\">transaction4.also { it.commit() }</span>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span>transaction1.let { it.commit() }",
                                        "+<span class=\"line\"></span>transaction2.apply { commit() }",
                                        "+<span class=\"line\"></span>with (transaction3) { commit() }",
                                        "+<span class=\"line\"></span>transaction4.also { it.commit() }",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">getFragmentManager.let {</span>",
                                        "-<span class=\"line\">    it.beginTransaction()</span>",
                                        "-<span class=\"line\">}.commit()</span>",
                                        "+<span class=\"line\"></span>getFragmentManager.let {",
                                        "+<span class=\"line\"></span>    it.beginTransaction()",
                                        "+<span class=\"line\"></span>}.commit()",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-comment\">// complex (contrived and unrealistic) example:</span></span>",
                                        "-<span class=\"line\">transaction5.let {</span>",
                                        "-<span class=\"line\">    it.also {</span>",
                                        "-<span class=\"line\">        it.apply {</span>",
                                        "-<span class=\"line\">            with(<span class=\"hljs-keyword\">this</span>) {</span>",
                                        "-<span class=\"line\">                commit()</span>",
                                        "-<span class=\"line\">            }</span>",
                                        "-<span class=\"line\">        }</span>",
                                        "-<span class=\"line\">    }</span>",
                                        "-<span class=\"line\">}</span></div></code></pre>",
                                        "+<span class=\"line\"></span><span class=\"hljs-comment\">// complex (contrived and unrealistic) example:</span>",
                                        "+<span class=\"line\"></span>transaction5.let {",
                                        "+<span class=\"line\"></span>    it.also {",
                                        "+<span class=\"line\"></span>        it.apply {",
                                        "+<span class=\"line\"></span>            with(<span class=\"hljs-keyword\">this</span>) {",
                                        "+<span class=\"line\"></span>                commit()",
                                        "+<span class=\"line\"></span>            }",
                                        "+<span class=\"line\"></span>        }",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>}</div></code></pre>",
                                        " <a class=\"target\" name=\"limitations\">&nbsp;</a><a class=\"target\" name=\"dataflowanalyzer/limitations\">&nbsp;</a><a class=\"target\" name=\"toc9.4\">&nbsp;</a><h2>Limitations</h2>",
                                        " <p>",
                                        " "
                                    ],
                                    [
                                        " ",
                                        " What if your check gets invoked on a code snippet like this:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">createTransaction</span><span class=\"hljs-params\">()</span></span>: FragmentTransaction =</span>",
                                        "-<span class=\"line\">    getFragmentManager().beginTransaction().add(new Fragment(), <span class=\"hljs-literal\">null</span>)</span></div></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">createTransaction</span><span class=\"hljs-params\">()</span></span>: FragmentTransaction =",
                                        "+<span class=\"line\"></span>    getFragmentManager().beginTransaction().add(new Fragment(), <span class=\"hljs-literal\">null</span>)</div></code></pre><p>",
                                        " ",
                                        " Here, we're not calling <code>commit</code>, so our lint check would issue a",
                                        " warning. However, it's quite possible and likely that elsewhere,",
                                        " there's code using it, like this:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-keyword\">val</span> transaction = createTransaction()</span>",
                                        "-<span class=\"line\">...</span>",
                                        "-<span class=\"line\">transaction.commit()</span></div></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-keyword\">val</span> transaction = createTransaction()",
                                        "+<span class=\"line\"></span>...",
                                        "+<span class=\"line\"></span>transaction.commit()</div></code></pre><p>",
                                        " ",
                                        " Ideally, we'd perform global analysis to handle this, but that's not",
                                        " currently possible. However, we <em class=\"asterisk\">can</em> analyze some additional non-local"
                                    ],
                                    [
                                        " ",
                                        " The analyzer has a callback method to let us know when this is happening. We can override that callback to remember that the value escapes, and if so, ignore the missing commit:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-keyword\">var</span> foundCommit = <span class=\"hljs-literal\">false</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">var</span> escapes = <span class=\"hljs-literal\">false</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">val</span> visitor = <span class=\"hljs-keyword\">object</span> : DataFlowAnalyzer(setOf(node)) {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">returns</span><span class=\"hljs-params\">(expression: <span class=\"hljs-type\">UReturnExpression</span>)</span></span> {</span>",
                                        "-<span class=\"line\">        escapes = <span class=\"hljs-literal\">true</span></span>",
                                        "-<span class=\"line\">    }</span>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-keyword\">var</span> foundCommit = <span class=\"hljs-literal\">false</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">var</span> escapes = <span class=\"hljs-literal\">false</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">val</span> visitor = <span class=\"hljs-keyword\">object</span> : DataFlowAnalyzer(setOf(node)) {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">returns</span><span class=\"hljs-params\">(expression: <span class=\"hljs-type\">UReturnExpression</span>)</span></span> {",
                                        "+<span class=\"line\"></span>        escapes = <span class=\"hljs-literal\">true</span>",
                                        "+<span class=\"line\"></span>    }",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">argument</span><span class=\"hljs-params\">(call: <span class=\"hljs-type\">UCallExpression</span>, reference: <span class=\"hljs-type\">UElement</span>)</span></span> {</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-keyword\">super</span>.argument(call, reference)</span>",
                                        "-<span class=\"line\">    }</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">argument</span><span class=\"hljs-params\">(call: <span class=\"hljs-type\">UCallExpression</span>, reference: <span class=\"hljs-type\">UElement</span>)</span></span> {",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-keyword\">super</span>.argument(call, reference)",
                                        "+<span class=\"line\"></span>    }",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">field</span><span class=\"hljs-params\">(field: <span class=\"hljs-type\">UElement</span>)</span></span> {</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-keyword\">super</span>.field(field)</span>",
                                        "-<span class=\"line\">    }</span>",
                                        "-<span class=\"line\">}</span>",
                                        "-<span class=\"line\">node.getParentOfType(UMethod::<span class=\"hljs-keyword\">class</span>.java)?.accept(visitor)</span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">if</span> (!escapes &amp;&amp; !foundCommit) {</span>",
                                        "-<span class=\"line\">    context.report(Incident(...))</span>",
                                        "-<span class=\"line\">}</span></div></code></pre>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">field</span><span class=\"hljs-params\">(field: <span class=\"hljs-type\">UElement</span>)</span></span> {",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-keyword\">super</span>.field(field)",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>}",
                                        "+<span class=\"line\"></span>node.getParentOfType(UMethod::<span class=\"hljs-keyword\">class</span>.java)?.accept(visitor)",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">if</span> (!escapes &amp;&amp; !foundCommit) {",
                                        "+<span class=\"line\"></span>    context.report(Incident(...))",
                                        "+<span class=\"line\"></span>}</div></code></pre>",
                                        " <a class=\"target\" name=\"parameters\">&nbsp;</a><a class=\"target\" name=\"dataflowanalyzer/escapingvalues/parameters\">&nbsp;</a><a class=\"target\" name=\"toc9.5.2\">&nbsp;</a><h3>Parameters</h3>",
                                        " <p>",
                                        " "
                                    ],
                                    [
                                        " no longer know for certain whether it gets committed is via a method",
                                        " call.",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> test) {</span></span>",
                                        "-<span class=\"line\">     <span class=\"hljs-keyword\">val</span> transaction = getFragmentManager().beginTransaction()</span>",
                                        "-<span class=\"line\">    process(transaction)</span>",
                                        "-<span class=\"line\">}</span></div></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> test) {</span>",
                                        "+<span class=\"line\"></span>     <span class=\"hljs-keyword\">val</span> transaction = getFragmentManager().beginTransaction()",
                                        "+<span class=\"line\"></span>    process(transaction)",
                                        "+<span class=\"line\"></span>}</div></code></pre><p>",
                                        " ",
                                        " Here, it's possible that the <code>process</code> method will proceed to actually",
                                        " commit the transaction."
                                    ],
                                    [
                                        " method implementation (see the \u201cNon Local Analysis\u201d section below), but",
                                        " in the general case, if a value escapes, we'll want to do something similar to a returned value. The analyzer has a callback for this, <code>argument</code>, which is invoked whenever our tracked value is passed into a method as an argument. The callback gives us both the argument and the call in case we want to handle conditional logic based on the specific method call.",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-keyword\">var</span> escapes = <span class=\"hljs-literal\">false</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">val</span> visitor = <span class=\"hljs-keyword\">object</span> : DataFlowAnalyzer(setOf(node)) {</span>",
                                        "-<span class=\"line\">    ...</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">argument</span><span class=\"hljs-params\">(call: <span class=\"hljs-type\">UCallExpression</span>, reference: <span class=\"hljs-type\">UElement</span>)</span></span> {</span>",
                                        "-<span class=\"line\">        escapes = <span class=\"hljs-literal\">true</span></span>",
                                        "-<span class=\"line\">    }</span>",
                                        "-<span class=\"line\">    ...</span>",
                                        "-<span class=\"line\">}</span></div></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-keyword\">var</span> escapes = <span class=\"hljs-literal\">false</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">val</span> visitor = <span class=\"hljs-keyword\">object</span> : DataFlowAnalyzer(setOf(node)) {",
                                        "+<span class=\"line\"></span>    ...",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">argument</span><span class=\"hljs-params\">(call: <span class=\"hljs-type\">UCallExpression</span>, reference: <span class=\"hljs-type\">UElement</span>)</span></span> {",
                                        "+<span class=\"line\"></span>        escapes = <span class=\"hljs-literal\">true</span>",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>    ...",
                                        "+<span class=\"line\"></span>}</div></code></pre><p>",
                                        " ",
                                        " (By default, the analyzer will ignore calls that look like logging calls since those are probably safe and not true escapes; you can",
                                        " customize this by overriding <code>ignoreArgument()</code>.)"
                                    ],
                                    [
                                        " Finally, a value may escape a local method context if it gets stored",
                                        " into a field:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">initialize</span><span class=\"hljs-params\">()</span></span> {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">this</span>.transaction = createTransaction()</span>",
                                        "-<span class=\"line\">}</span></div></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">initialize</span><span class=\"hljs-params\">()</span></span> {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">this</span>.transaction = createTransaction()",
                                        "+<span class=\"line\"></span>}</div></code></pre><p>",
                                        " ",
                                        " As with returns and method calls, the analyzer has a callback to make",
                                        " it easy to handle when this is the case:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"><span class=\"hljs-keyword\">var</span> escapes = <span class=\"hljs-literal\">false</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">val</span> visitor = <span class=\"hljs-keyword\">object</span> : DataFlowAnalyzer(setOf(node)) {</span>",
                                        "-<span class=\"line\">    ...</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">field</span><span class=\"hljs-params\">(field: <span class=\"hljs-type\">UElement</span>)</span></span> {</span>",
                                        "-<span class=\"line\">        escapes = <span class=\"hljs-literal\">true</span></span>",
                                        "-<span class=\"line\">    }</span>",
                                        "-<span class=\"line\">    ...</span>",
                                        "-<span class=\"line\">}</span></div></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-keyword\">var</span> escapes = <span class=\"hljs-literal\">false</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">val</span> visitor = <span class=\"hljs-keyword\">object</span> : DataFlowAnalyzer(setOf(node)) {",
                                        "+<span class=\"line\"></span>    ...",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">field</span><span class=\"hljs-params\">(field: <span class=\"hljs-type\">UElement</span>)</span></span> {",
                                        "+<span class=\"line\"></span>        escapes = <span class=\"hljs-literal\">true</span>",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>    ...",
                                        "+<span class=\"line\"></span>}</div></code></pre><p>",
                                        " ",
                                        " As you can see, it's passing in the field that is being stored to, in",
                                        " case you want to perform additional analysis to track field values; see"
                                    ],
                                    [
                                        " ",
                                        " </p><p>",
                                        " ",
                                        "-<a href=\"https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-master-dev:lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/WorkManagerDetector.kt\">Source</a>",
                                        "-<a href=\"https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-master-dev:lint/libs/lint-tests/src/test/java/com/android/tools/lint/checks/WorkManagerDetectorTest.kt\">Test</a>",
                                        "+<a href=\"https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-main:lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/WorkManagerDetector.kt\">Source</a>",
                                        "+<a href=\"https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-main:lint/libs/lint-tests/src/test/java/com/android/tools/lint/checks/WorkManagerDetectorTest.kt\">Test</a>",
                                        " ",
                                        " </p>",
                                        " <a class=\"target\" name=\"complexexample\">&nbsp;</a><a class=\"target\" name=\"dataflowanalyzer/examples/complexexample\">&nbsp;</a><a class=\"target\" name=\"toc9.7.2\">&nbsp;</a><h3>Complex Example</h3>"
                                    ],
                                    [
                                        " ",
                                        " </p><p>",
                                        " ",
                                        "-<a href=\"https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-master-dev:lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/SliceDetector.kt\">Source</a>",
                                        "-<a href=\"https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-master-dev:lint/libs/lint-tests/src/test/java/com/android/tools/lint/checks/SliceDetectorTest.kt\">Test</a>",
                                        "+<a href=\"https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-main:lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/SliceDetector.kt\">Source</a>",
                                        "+<a href=\"https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-main:lint/libs/lint-tests/src/test/java/com/android/tools/lint/checks/SliceDetectorTest.kt\">Test</a>",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+",
                                        "+",
                                        "+</p>",
                                        "+<a class=\"target\" name=\"annotations\">&nbsp;</a><a class=\"target\" name=\"annotations\">&nbsp;</a><a class=\"target\" name=\"toc10\">&nbsp;</a><h1>Annotations</h1>",
                                        "+<p>",
                                        "+",
                                        "+",
                                        "+Annotations allow API authors to express constraints that tools can",
                                        "+enforce. There are many examples of these, along with existing lint",
                                        "+checks:",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+</p><ul>",
                                        "+<li class=\"asterisk\"><code>@VisibleForTesting</code>: this private API should only be accessed",
                                        "+  from outside this package from unit tests",
                                        "+</li>",
                                        "+<li class=\"asterisk\"><code>@CheckResult</code>: anyone calling this method is expected to do",
                                        "+  something with the return value",
                                        "+</li>",
                                        "+<li class=\"asterisk\"><code>@CallSuper</code>: anyone overriding this method must also invoke <code>super</code>",
                                        "+</li>",
                                        "+<li class=\"asterisk\"><code>@UiThread</code>: anyone calling this method must be calling from the UI thread",
                                        "+</li>",
                                        "+<li class=\"asterisk\"><code>@Size</code>: the size of the annotated array or collection must be",
                                        "+    of a particular size",
                                        "+</li>",
                                        "+<li class=\"asterisk\"><code>@IntRange</code>: the annotated integer must have a value in the given range</li></ul>",
                                        "+",
                                        "+<p></p><p>",
                                        "+",
                                        "+...and so on. Lint has built-in checks to enforce these, along with",
                                        "+infrastructure to make them easy to write, and to share analysis such",
                                        "+that improvements to one helps them all. This means that you can easily",
                                        "+write your own annotations-based checks as well.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+</p><div class=\"admonition tip\">Note that the annotation support helps you write checks where you",
                                        "+   check <em class=\"asterisk\">usages</em> of annotated elements, not usages of the annotations",
                                        "+   themselves. If you simply want to look at actual annotations,",
                                        "+   override <code>getApplicableUastTypes</code> to return",
                                        "+   <code>listOf(UAnnotation::class.java)</code>, and override <code>createUastHandler</code>",
                                        "+   to return an <code>object : UElementHandler</code> which simply overrides",
                                        "+   <code>visitAnnotation</code>.</div>",
                                        "+",
                                        "+<p></p>",
                                        "+<a class=\"target\" name=\"basics\">&nbsp;</a><a class=\"target\" name=\"annotations/basics\">&nbsp;</a><a class=\"target\" name=\"toc10.1\">&nbsp;</a><h2>Basics</h2>",
                                        "+<p>",
                                        "+",
                                        "+",
                                        "+To create a basic annotation checker, there are two required steps:",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+</p><ol start=\"1\">",
                                        "+<li class=\"number\">Register the fully qualified name (or names) of the annotation",
                                        "+   classes you want to analyze, and",
                                        "+</li>",
                                        "+<li class=\"number\">Implement the <code>visitAnnotationUsage</code> callback for handling each",
                                        "+   occurrence.</li></ol>",
                                        "+",
                                        "+<p></p><p>",
                                        "+",
                                        "+Here's a basic example:",
                                        "+",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">applicableAnnotations</span><span class=\"hljs-params\">()</span></span>: List&lt;string&gt; {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">return</span> listOf(<span class=\"hljs-string\">\"my.pkg.MyAnnotation\"</span>)",
                                        "+<span class=\"line\"></span>}",
                                        "+<span class=\"line\"></span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">visitAnnotationUsage</span><span class=\"hljs-params\">(",
                                        "+<span class=\"line\"></span>    context: <span class=\"hljs-type\">JavaContext</span>,",
                                        "+<span class=\"line\"></span>    element: <span class=\"hljs-type\">UElement</span>,",
                                        "+<span class=\"line\"></span>    annotationInfo: <span class=\"hljs-type\">AnnotationInfo</span>,",
                                        "+<span class=\"line\"></span>    usageInfo: <span class=\"hljs-type\">AnnotationUsageInfo</span>",
                                        "+<span class=\"line\"></span>)</span></span> {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> name = annotationInfo.qualifiedName.substringAfterLast(<span class=\"hljs-string\">'.'</span>)",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> message = <span class=\"hljs-string\">\"`<span class=\"hljs-subst\">${usageInfo.type.name}</span>` usage associated with \"</span> +",
                                        "+<span class=\"line\"></span>                  <span class=\"hljs-string\">\"`@<span class=\"hljs-variable\">$name</span>` on <span class=\"hljs-subst\">${annotationInfo.origin}</span>\"</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> location = context.getLocation(element)",
                                        "+<span class=\"line\"></span>    context.report(TEST_ISSUE, element, location, message)",
                                        "+<span class=\"line\"></span>}</code></pre><p>",
                                        "+",
                                        "+All this simple detector does is flag any usage associated with the",
                                        "+given annotation, including some information about the usage.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+If we for example have the following annotated API:",
                                        "+",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">annotation</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyAnnotation</span></span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Book</span> </span>{",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">operator</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">contains</span><span class=\"hljs-params\">(<span class=\"hljs-meta\">@MyAnnotation</span> word: <span class=\"hljs-type\">String</span>)</span></span>: <span class=\"hljs-built_in\">Boolean</span> = TODO()",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">length</span><span class=\"hljs-params\">()</span></span>: <span class=\"hljs-built_in\">Int</span> = TODO()",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-meta\">@MyAnnotation</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">close</span><span class=\"hljs-params\">()</span></span> = TODO()",
                                        "+<span class=\"line\"></span>}",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">operator</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> Book.<span class=\"hljs-title\">get</span><span class=\"hljs-params\">(<span class=\"hljs-meta\">@MyAnnotation</span> index: <span class=\"hljs-type\">Int</span>)</span></span>: <span class=\"hljs-built_in\">Int</span> = TODO()</code></pre><p>",
                                        "+",
                                        "+...and we then run the above detector on the following test case:",
                                        "+",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">test</span><span class=\"hljs-params\">(book: <span class=\"hljs-type\">Book</span>)</span></span> {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> found = <span class=\"hljs-string\">\"lint\"</span> <span class=\"hljs-keyword\">in</span> book",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">val</span> firstWord = book[<span class=\"hljs-number\">0</span>]",
                                        "+<span class=\"line\"></span>    book.close()",
                                        "+<span class=\"line\"></span>}</code></pre><p>",
                                        "+",
                                        "+we get the following output:",
                                        "+",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>src/book.kt:14: Error: METHOD_CALL_PARAMETER usage associated with @MyAnnotation on PARAMETER",
                                        "+<span class=\"line\"></span>    val found = \"lint\" in book",
                                        "+<span class=\"line\"></span>                 ----",
                                        "+<span class=\"line\"></span>src/book.kt:15: Error: METHOD_CALL_PARAMETER usage associated with @MyAnnotation on PARAMETER",
                                        "+<span class=\"line\"></span>    val firstWord = book[0]",
                                        "+<span class=\"line\"></span>                         -",
                                        "+<span class=\"line\"></span>src/book.kt:16: Error: METHOD_CALL usage associated with @MyAnnotation on METHOD",
                                        "+<span class=\"line\"></span>    book.close()",
                                        "+<span class=\"line\"></span>         -------</code></pre><p>",
                                        "+",
                                        "+In the first case, the infix operator \u201cin\u201d will call <code>contains</code> under",
                                        "+the hood, and here we've annotated the parameter, so lint visits the",
                                        "+argument corresponding to that parameter (the literal string \u201clint\u201d).",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+The second case shows a similar situation where the array syntax will",
                                        "+end up calling our extension method, <code>get()</code>.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+And the third case shows the most common scenario: a straight forward",
                                        "+method call to an annotated method.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+In many cases, the above detector implementation is nearly all you have",
                                        "+to do to enforce an annotation constraint. For example, in the",
                                        "+<code>@CheckResult</code> detector, we want to make sure that anyone calling a",
                                        "+method annotated with <code>@CheckResult</code> will not ignore the method return",
                                        "+value. All the lint check has to do is register an interest in",
                                        "+<em class=\"asterisk\"><code>androidx.annotation.CheckResult</code></em>, and lint will invoke",
                                        "+<code>visitAnnotationUsage</code> for each method call to the annotated method.",
                                        "+Then we just check the method call to make sure that its return value",
                                        "+isn't ignored, e.g. that it's stored into a variable or passed into",
                                        "+another method call.",
                                        "+",
                                        "+</p>",
                                        "+<a class=\"target\" name=\"annotationusagetypesandisapplicableannotationusage\">&nbsp;</a><a class=\"target\" name=\"annotations/annotationusagetypesandisapplicableannotationusage\">&nbsp;</a><a class=\"target\" name=\"toc10.2\">&nbsp;</a><h2>Annotation Usage Types and isApplicableAnnotationUsage</h2>",
                                        "+",
                                        "+<a class=\"target\" name=\"methodoverride\">&nbsp;</a><a class=\"target\" name=\"annotations/annotationusagetypesandisapplicableannotationusage/methodoverride\">&nbsp;</a><a class=\"target\" name=\"toc10.2.1\">&nbsp;</a><h3>Method Override</h3>",
                                        "+<p>",
                                        "+",
                                        "+",
                                        "+In the detector above, we're including the \u201cusage type\u201d in the error",
                                        "+message. The usage type tells you something about how the annotation is",
                                        "+associated with the usage element \u2014 and in the above, the first two",
                                        "+cases have a usage type of \u201cparameter\u201d because the visited element",
                                        "+corresponds to a parameter annotation, and the third one a method",
                                        "+annotation.",
                                        " ",
                                        " </p><p>",
                                        " ",
                                        "+There are many other usage types. For example, if we add the following",
                                        "+to the API:",
                                        "+",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">open</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Paperback</span> : <span class=\"hljs-type\">Book</span></span>() {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">close</span><span class=\"hljs-params\">()</span></span> { }",
                                        "+<span class=\"line\"></span>}</code></pre><p>",
                                        " ",
                                        "+then the detector will emit the following incident since the new method",
                                        "+overrides another method that was annotated:",
                                        "+",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>src/book.kt:14: Error: METHOD_OVERRIDE usage associated with @MyAnnotation on METHOD",
                                        "+<span class=\"line\"></span>    override fun close() { }",
                                        "+<span class=\"line\"></span>                 -----",
                                        "+<span class=\"line\"></span>1 errors, 0 warnings</code></pre><p>",
                                        "+",
                                        "+Overriding an annotated element is how the <code>@CallSuper</code> detector is",
                                        "+implemented, which makes sure that any method which overrides a method",
                                        "+annotated with <code>@CallSuper</code> is invoking <code>super</code> on the overridden",
                                        "+method somewhere in the method body.",
                                        "+",
                                        "+</p>",
                                        "+<a class=\"target\" name=\"methodreturn\">&nbsp;</a><a class=\"target\" name=\"annotations/annotationusagetypesandisapplicableannotationusage/methodreturn\">&nbsp;</a><a class=\"target\" name=\"toc10.2.2\">&nbsp;</a><h3>Method Return</h3>",
                                        "+<p>",
                                        "+",
                                        "+",
                                        "+Here's another example, where we have annotated the return value",
                                        "+with @MyAnnotation:",
                                        "+",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">open</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Paperback</span> : <span class=\"hljs-type\">Book</span></span>() {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getDefaultCaption</span><span class=\"hljs-params\">()</span></span>: String = TODO()",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-meta\">@MyAnnotation</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getCaption</span><span class=\"hljs-params\">(imageId: <span class=\"hljs-type\">Int</span>)</span></span>: String {",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-keyword\">if</span> (imageId == <span class=\"hljs-number\">5</span>) {",
                                        "+<span class=\"line\"></span>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"Blah blah blah\"</span>",
                                        "+<span class=\"line\"></span>        } <span class=\"hljs-keyword\">else</span> {",
                                        "+<span class=\"line\"></span>            <span class=\"hljs-keyword\">return</span> getDefaultCaption()",
                                        "+<span class=\"line\"></span>        }",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>}</code></pre><p>",
                                        "+",
                                        "+Here, lint will flag the various exit points from the method",
                                        "+associated with the annotation:",
                                        "+",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>src/book.kt:18: Error: METHOD_RETURN usage associated with @MyAnnotation on METHOD",
                                        "+<span class=\"line\"></span>            return \"Blah blah blah\"",
                                        "+<span class=\"line\"></span>                    --------------",
                                        "+<span class=\"line\"></span>src/book.kt:20: Error: METHOD_RETURN usage associated with @MyAnnotation on METHOD",
                                        "+<span class=\"line\"></span>            return getDefaultCaption()",
                                        "+<span class=\"line\"></span>                   -------------------",
                                        "+<span class=\"line\"></span>2 errors, 0 warnings</code></pre><p>",
                                        "+",
                                        "+Note also that this would have worked if the annotation had been",
                                        "+inherited from a super method instead of being explicitly set here.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+Lint uses this mechanism for example for its resource type lint check",
                                        "+which makes sure that if a method has been annotated with say",
                                        "+<code>@DrawableRes</code>, that any return values are not of some incompatible",
                                        "+esource type (such as <code>@StringRes</code>).",
                                        " ",
                                        " </p>",
                                        "-<a class=\"target\" name=\"frequentlyaskedquestions\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions\">&nbsp;</a><a class=\"target\" name=\"toc10\">&nbsp;</a><h1>Frequently Asked Questions</h1>",
                                        "+<a class=\"target\" name=\"handlingusagetypes\">&nbsp;</a><a class=\"target\" name=\"annotations/annotationusagetypesandisapplicableannotationusage/handlingusagetypes\">&nbsp;</a><a class=\"target\" name=\"toc10.2.3\">&nbsp;</a><h3>Handling Usage Types</h3>",
                                        "+<p>",
                                        "+",
                                        "+",
                                        "+As you can see, your callback will be invoked for a wide variety of",
                                        "+usage types, and sometimes, they don't apply to the scenario that your",
                                        "+detector is interested in. Consider the <code>@CheckResult</code> detector again,",
                                        "+which makes sure that any calls to a given method will look at the",
                                        "+return value. From the \u201cmethod override\u201d section above, you can see",
                                        "+that lint would <em class=\"asterisk\">also</em> notify your detector for any method that is",
                                        "+<em class=\"asterisk\">overriding</em> (rather than calling) a method annotated with",
                                        "+<code>@CheckResult</code>. We don't want to report those.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+There are two ways to handle this. The first one is to check whether",
                                        "+the usage element is a <code>UMethod</code>, which it will be in the overriding",
                                        "+case, and return early in that case.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+The recommended approach, which <code>CheckResultDetector</code> uses, is to",
                                        "+override the <code>isApplicableAnnotationUsage</code> method:",
                                        "+",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isApplicableAnnotationUsage</span><span class=\"hljs-params\">(type: <span class=\"hljs-type\">AnnotationUsageType</span>)</span></span>: <span class=\"hljs-built_in\">Boolean</span> {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">return</span> type != AnnotationUsageType.METHOD_OVERRIDE &amp;&amp;",
                                        "+<span class=\"line\"></span>            <span class=\"hljs-keyword\">super</span>.isApplicableAnnotationUsage(type)",
                                        "+<span class=\"line\"></span>}</code></pre><p>",
                                        "+",
                                        "+",
                                        "+",
                                        "+</p><div class=\"admonition tip\">Notice how we are also calling <code>super</code> here and combining the result",
                                        "+   instead of just using a hardcoded list of expected usage types. This",
                                        "+   is because, as discussed below, lint already filters out some usage",
                                        "+   types by default in the super implementation.</div>",
                                        "+",
                                        "+<p></p>",
                                        "+<a class=\"target\" name=\"usagetypesfilteredbydefault\">&nbsp;</a><a class=\"target\" name=\"annotations/annotationusagetypesandisapplicableannotationusage/usagetypesfilteredbydefault\">&nbsp;</a><a class=\"target\" name=\"toc10.2.4\">&nbsp;</a><h3>Usage Types Filtered By Default</h3>",
                                        "+<p>",
                                        "+",
                                        "+",
                                        "+The default implementation of <code>Detector.isApplicableAnnotationUsage</code>",
                                        "+looks like this:",
                                        "+",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isApplicableAnnotationUsage</span><span class=\"hljs-params\">(type: <span class=\"hljs-type\">AnnotationUsageType</span>)</span></span>: <span class=\"hljs-built_in\">Boolean</span> {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">return</span> type != AnnotationUsageType.BINARY &amp;&amp;",
                                        "+<span class=\"line\"></span>           type != AnnotationUsageType.EQUALITY",
                                        "+<span class=\"line\"></span>}</code></pre><p>",
                                        "+",
                                        "+These usage types apply to cases where annotated elements are",
                                        "+compared for equality or using other binary operators. Initially",
                                        "+introducing this support led to a lot of noise and false positives;",
                                        "+most of the existing lint checks do not want this, so they're opt-in.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+An example of a lint check which <em class=\"asterisk\">does</em> enforce this is the",
                                        "+<code>@HalfFloat</code> lint check. In Android, a",
                                        "+<a href=\"https://developer.android.com/reference/androidx/annotation/\" halffloat=\"\">HalfFloat</a> is a representation of a floating point value (with less",
                                        "+precision than a <code>float</code>) which is stored in a <code>short</code>, normally an",
                                        "+integer primitive value. If you annotate a <code>short</code> with <code>@HalfFloat</code>,",
                                        "+including in APIs, lint can help catch cases where you are making",
                                        "+mistakes \u2014 such as accidentally widening the value to an int, and so",
                                        "+on. Here are some example error messages from lint's unit tests for the",
                                        "+half float check:",
                                        "+",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>src/test/pkg/HalfFloatTest.java:23: Error: Expected a half float here, not a resource id [HalfFloat]",
                                        "+<span class=\"line\"></span>        method1(getDimension1()); // ERROR",
                                        "+<span class=\"line\"></span>                ---------------",
                                        "+<span class=\"line\"></span>src/test/pkg/HalfFloatTest.java:43: Error: Half-float type in expression widened to int [HalfFloat]",
                                        "+<span class=\"line\"></span>        int result3 = float1 + 1; // error: widening",
                                        "+<span class=\"line\"></span>                      ------",
                                        "+<span class=\"line\"></span>src/test/pkg/HalfFloatTest.java:50: Error: Half-float type in expression widened to int [HalfFloat]",
                                        "+<span class=\"line\"></span>        Math.round(float1); // Error: should use Half.round",
                                        "+<span class=\"line\"></span>                   ------</code></pre>",
                                        "+<a class=\"target\" name=\"scopes\">&nbsp;</a><a class=\"target\" name=\"annotations/annotationusagetypesandisapplicableannotationusage/scopes\">&nbsp;</a><a class=\"target\" name=\"toc10.2.5\">&nbsp;</a><h3>Scopes</h3>",
                                        "+<p>",
                                        "+",
                                        "+",
                                        "+Many annotations apply not just to methods or fields but to classes and",
                                        "+even packages, with the idea that the annotation applies to everything",
                                        "+within the package.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+For example, if we have this annotated API:",
                                        "+",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-keyword\">annotation</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ThreadSafe</span></span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">annotation</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">NotThreadSafe</span></span>",
                                        "+<span class=\"line\"></span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-meta\">@ThreadSafe</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Stack</span>&lt;<span class=\"hljs-type\">t</span>&gt; </span>{",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">size</span><span class=\"hljs-params\">()</span></span>: <span class=\"hljs-built_in\">Int</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">push</span><span class=\"hljs-params\">(item: <span class=\"hljs-type\">T</span>)</span></span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">pop</span><span class=\"hljs-params\">()</span></span>: String",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-meta\">@NotThreadSafe</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">save</span><span class=\"hljs-params\">()</span></span> { }",
                                        "+<span class=\"line\"></span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-meta\">@NotThreadSafe</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FileStack</span>&lt;<span class=\"hljs-type\">t</span>&gt; : <span class=\"hljs-type\">Stack</span>&lt;<span class=\"hljs-type\">t</span>&gt;</span>() {",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">pop</span><span class=\"hljs-params\">()</span></span>: String",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>}</div></code></pre><p>",
                                        "+",
                                        "+And the following test case:",
                                        "+",
                                        "+</p><pre class=\"listing tilde\"><code><div class=\" linenumbers\"><span class=\"line\"></span><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">test</span><span class=\"hljs-params\">(stack: <span class=\"hljs-type\">Stack</span>&lt;<span class=\"hljs-type\">string</span>&gt;, fileStack: <span class=\"hljs-type\">Stack</span>&lt;<span class=\"hljs-type\">string</span>&gt;)</span></span> {",
                                        "+<span class=\"line\"></span>    stack.push(<span class=\"hljs-string\">\"Hello\"</span>)",
                                        "+<span class=\"line\"></span>    stack.pop()",
                                        "+<span class=\"line\"></span>    fileStack.push(<span class=\"hljs-string\">\"Hello\"</span>)",
                                        "+<span class=\"line\"></span>    fileStack.pop()",
                                        "+<span class=\"line\"></span>}</div></code></pre><p>",
                                        "+",
                                        "+Here, <code>stack.push</code> call on line 2 resolves to the API method on line 7.",
                                        "+That method is not annotated, but it's inside a class that is annotated",
                                        "+with <code>@ThreadSafe</code>. Similarly for the <code>pop()</code> call on line 3.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+The <code>fileStack.push</code> call on line 4 also resolves to the same method",
                                        "+as the call on line 2 (even though the concrete type is a <code>FileStack</code>",
                                        "+instead of a `Stack), so like on line 2, this call is taken to be",
                                        "+thread safe.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+However, the <code>fileStack.pop</code> call on line 6 resolves to the API method",
                                        "+on line 14. That method is not annotated, but it's inside a class",
                                        "+annotated with <code>@NotThreadSafe</code>, which in turn is inside an outer class",
                                        "+annotated with <code>@ThreadSafe</code>. The intent here is clearly that that",
                                        "+method should be considered not thread safe.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+To help with scenarios like this, lint will provide <em class=\"asterisk\">all</em> the",
                                        "+annotations (well, all annotations that any lint checks have registered",
                                        "+interest in via <code>getApplicableAnnotations</code>; it will not include",
                                        "+annotations like <code>java.lang.SuppressWarnings</code> and so on unless a lint",
                                        "+check asks for it).",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+This is provided in the <code>AnnotationUsageInfo</code> passed to the",
                                        "+<code>visitAnnotationUsage</code> parameters. The <code>annotations</code> list will include",
                                        "+all relevant annotations, <strong class=\"asterisk\">in scope order</strong>. That means that for the",
                                        "+above <code>pop</code> call on line 5, it will point to first the annotations on",
                                        "+the <code>pop</code> method (and here there are none), then the <code>@NotThreadSafe</code>",
                                        "+annotation on the surrounding class, and then the <code>@ThreadSafe</code>",
                                        "+annotation on the outer class, and then annotations on the file itself",
                                        "+and the package.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+The <code>index</code> points to the annotation we're analyzing. If for example",
                                        "+our detector had registered an interest in <code>@ThreadSafe</code>, it would be",
                                        "+called for the second <code>pop</code> call as well, since it calls a method",
                                        "+inside a <code>@ThreadSafe</code> annotation (on the outer class), but the <code>index</code>",
                                        "+would be 1. The lint check can check all the annotations earlier than",
                                        "+the one at the index to see if they \u201ccounteract\u201d the annotation, which",
                                        "+of course the <code>@NotThreadSafe</code> annotation does.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+Lint uses this mechanism for example for the <code>@CheckResult</code> annotation,",
                                        "+since some APIs are annotated with <code>@CheckResult</code> for whole packages",
                                        "+(as an API convention), and then there are explicit exceptions carved",
                                        "+out using <code>@CanIgnoreReturnValue</code>. There is a method on the",
                                        "+<code>AnnotationUsageInfo</code>, <code>anyCloser</code>, which makes this check easy:",
                                        "+",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">if</span> (usageInfo.anyCloser { it.qualifiedName ==",
                                        "+<span class=\"line\"></span>     <span class=\"hljs-string\">\"com.google.errorprone.annotations.CanIgnoreReturnValue\"</span> }) {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-comment\">// There's a closer @CanIgnoreReturnValue which cancels the</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-comment\">// outer @CheckReturnValue annotation we're analyzing here</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">return</span>",
                                        "+<span class=\"line\"></span>}</code></pre><p>",
                                        "+",
                                        "+",
                                        "+",
                                        "+</p><div class=\"admonition tip\">You only have to worry about this when there are different",
                                        "+   annotations that interact with each other. If the same annotation is",
                                        "+   found in multiple nested contexts, lint <em class=\"asterisk\">will</em> include all the",
                                        "+   annotations in the <code>AnnotationUsageInfo</code>, but it will not invoke",
                                        "+   your callback for any outer occurrences; only the closest one. This",
                                        "+   is usually what detectors expect: the innermost one \u201coverrides\u201d the",
                                        "+   outer ones, so lint omits these to help avoid false positives where",
                                        "+   a lint check author forgot to handle and test this scenario. A good",
                                        "+   example of this situation is with the <code>@RequiresApi</code> annotation; a",
                                        "+   class may be annotated as requiring a particular API level, but a",
                                        "+   specific inner class or method within the class can have a more",
                                        "+   specific <code>@RequiresApi</code> annotation, and we only want the detector to",
                                        "+   be invoked for the innermost one. If for some reason your detector",
                                        "+   <em class=\"asterisk\">does need</em> to handle all of the repeated outer occurrences, note",
                                        "+   that they're all there in the <code>annotations</code> list for the",
                                        "+   <code>AnnotationUsageInfo</code> so you can look for them and handle them when",
                                        "+   you are invoked for the innermost one.</div>",
                                        "+",
                                        "+<p></p>",
                                        "+<a class=\"target\" name=\"inheritedannotations\">&nbsp;</a><a class=\"target\" name=\"annotations/annotationusagetypesandisapplicableannotationusage/inheritedannotations\">&nbsp;</a><a class=\"target\" name=\"toc10.2.6\">&nbsp;</a><h3>Inherited Annotations</h3>",
                                        "+<p>",
                                        "+",
                                        "+",
                                        "+As we saw in the method overrides section, lint will include",
                                        "+annotations in the hierarchy: annotations specified not just on a",
                                        "+specific method but super implementations and so on.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+This is normally what you want \u2014 for example, if a method is annotated",
                                        "+with <code>@CheckResult</code> (such as <code>String.trim()</code>, where it's important to",
                                        "+understand that you're not changing the string in place, there's a new",
                                        "+string returned so it's probably a mistake to not use it), you probably",
                                        "+want any overriding implementations to have the same semantics.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+However, there are exceptions to this. For example,",
                                        "+<code>@VisibleForTesting</code>. Perhaps a super class made a method public only",
                                        "+for testing purposes, but you have a concrete subclass where you are",
                                        "+deliberately supporting the operation, not just from tests. If",
                                        "+annotations were always inherited, you would have to create some sort",
                                        "+of annotation to \u201crevert\u201d the semantics, e.g.",
                                        "+<code>@VisibleNotJustForTesting</code>, which would be ... anoying.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+Lint let's you choose what the semantics are for each annotation. For",
                                        "+example, the lint check which enforces the <code>@VisibleForTesting</code> and",
                                        "+<code>@RestrictTo</code> annotations handles it like this:",
                                        "+",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">inheritAnnotation</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">annotation</span>: <span class=\"hljs-type\">String</span>)</span></span>: <span class=\"hljs-built_in\">Boolean</span> {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-comment\">// Require restriction annotations to be annotated everywhere</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>",
                                        "+<span class=\"line\"></span>}</code></pre><p>",
                                        "+",
                                        "+(Note that the API passes in the fully qualified name of the annotation",
                                        "+in question so you can control this behavior individually for each",
                                        "+annotation when your detector applies to multiple annotations.)",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+",
                                        "+",
                                        "+</p>",
                                        "+<a class=\"target\" name=\"frequentlyaskedquestions\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions\">&nbsp;</a><a class=\"target\" name=\"toc11\">&nbsp;</a><h1>Frequently Asked Questions</h1>",
                                        " <p>",
                                        " ",
                                        " "
                                    ],
                                    [
                                        " have asked in the past.",
                                        " ",
                                        " </p>",
                                        "-<a class=\"target\" name=\"mydetectorcallbacksaren'tinvoked\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//mydetectorcallbacksaren'tinvoked\">&nbsp;</a><a class=\"target\" name=\"toc10.0.1\">&nbsp;</a><h3>My detector callbacks aren't invoked</h3>",
                                        "+<a class=\"target\" name=\"mydetectorcallbacksaren'tinvoked\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//mydetectorcallbacksaren'tinvoked\">&nbsp;</a><a class=\"target\" name=\"toc11.0.1\">&nbsp;</a><h3>My detector callbacks aren't invoked</h3>",
                                        " <p>",
                                        " ",
                                        " "
                                    ],
                                    [
                                        " method calls, <code>visitMethodCall</code>, notice how the third parameter is a",
                                        " <code>PsiMethod</code>, and that it is not nullable:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">    <span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">visitMethodCall</span><span class=\"hljs-params\">(</span>",
                                        "-<span class=\"line\">        context: <span class=\"hljs-type\">JavaContext</span>,</span>",
                                        "-<span class=\"line\">        node: <span class=\"hljs-type\">UCallExpression</span>,</span>",
                                        "-<span class=\"line\">        method: <span class=\"hljs-type\">PsiMethod</span></span>",
                                        "-<span class=\"line\">    )</span></span> {</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>    <span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">visitMethodCall</span><span class=\"hljs-params\">(",
                                        "+<span class=\"line\"></span>        context: <span class=\"hljs-type\">JavaContext</span>,",
                                        "+<span class=\"line\"></span>        node: <span class=\"hljs-type\">UCallExpression</span>,",
                                        "+<span class=\"line\"></span>        method: <span class=\"hljs-type\">PsiMethod</span>",
                                        "+<span class=\"line\"></span>    )</span></span> {</code></pre><p>",
                                        " ",
                                        " This passes in the method that has been called. When lint is visiting",
                                        " the AST, it will resolve calls, and if the called method cannot be"
                                    ],
                                    [
                                        " detail in the <a href=\"#lintcheckunittesting\">unit testing</a> chapter.",
                                        " ",
                                        " </p>",
                                        "-<a class=\"target\" name=\"mylintcheckworksfromtheunittestbutnotintheide\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//mylintcheckworksfromtheunittestbutnotintheide\">&nbsp;</a><a class=\"target\" name=\"toc10.0.2\">&nbsp;</a><h3>My lint check works from the unit test but not in the IDE</h3>",
                                        "+<a class=\"target\" name=\"mylintcheckworksfromtheunittestbutnotintheide\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//mylintcheckworksfromtheunittestbutnotintheide\">&nbsp;</a><a class=\"target\" name=\"toc11.0.2\">&nbsp;</a><h3>My lint check works from the unit test but not in the IDE</h3>",
                                        " <p>",
                                        " ",
                                        " "
                                    ],
                                    [
                                        "    information about this.</li></ol>",
                                        " ",
                                        " <p></p>",
                                        "-<a class=\"target\" name=\"visitannotationusageisn'tcalledforannotations\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//visitannotationusageisn'tcalledforannotations\">&nbsp;</a><a class=\"target\" name=\"toc10.0.3\">&nbsp;</a><h3><code>visitAnnotationUsage</code> isn't called for annotations</h3>",
                                        "+<a class=\"target\" name=\"visitannotationusageisn'tcalledforannotations\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//visitannotationusageisn'tcalledforannotations\">&nbsp;</a><a class=\"target\" name=\"toc11.0.3\">&nbsp;</a><h3><code>visitAnnotationUsage</code> isn't called for annotations</h3>",
                                        " <p>",
                                        " ",
                                        " "
                                    ],
                                    [
                                        " <code>visitAnnotation</code>.",
                                        " ",
                                        " </p>",
                                        "-<a class=\"target\" name=\"howdoicheckifauastorpsielementisforjavaorkotlin?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//howdoicheckifauastorpsielementisforjavaorkotlin?\">&nbsp;</a><a class=\"target\" name=\"toc10.0.4\">&nbsp;</a><h3>How do I check if a UAST or PSI element is for Java or Kotlin?</h3>",
                                        "+<a class=\"target\" name=\"howdoicheckifauastorpsielementisforjavaorkotlin?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//howdoicheckifauastorpsielementisforjavaorkotlin?\">&nbsp;</a><a class=\"target\" name=\"toc11.0.4\">&nbsp;</a><h3>How do I check if a UAST or PSI element is for Java or Kotlin?</h3>",
                                        " <p>",
                                        " ",
                                        " "
                                    ],
                                    [
                                        " Java, you can access them as utility methods on the \u201cLint\u201d",
                                        " class) :",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\"><span class=\"hljs-keyword\">package</span> com.android.tools.lint.detector.api</span>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">package</span> com.android.tools.lint.detector.api",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-comment\">/** Returns true if the given element is written in Java. */</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isJava</span><span class=\"hljs-params\">(element: <span class=\"hljs-type\">PsiElement</span>?)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span> }</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-comment\">/** Returns true if the given element is written in Java. */</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isJava</span><span class=\"hljs-params\">(element: <span class=\"hljs-type\">PsiElement</span>?)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span> }",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-comment\">/** Returns true if the given language is Kotlin. */</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isKotlin</span><span class=\"hljs-params\">(language: <span class=\"hljs-type\">Language</span>?)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span> }</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-comment\">/** Returns true if the given language is Kotlin. */</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isKotlin</span><span class=\"hljs-params\">(language: <span class=\"hljs-type\">Language</span>?)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span> }",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-comment\">/** Returns true if the given language is Java. */</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isJava</span><span class=\"hljs-params\">(language: <span class=\"hljs-type\">Language</span>?)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span> }</span></code></pre><p>",
                                        "+<span class=\"line\"></span><span class=\"hljs-comment\">/** Returns true if the given language is Java. */</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isJava</span><span class=\"hljs-params\">(language: <span class=\"hljs-type\">Language</span>?)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span> }</code></pre><p>",
                                        " ",
                                        " If you have a <code>UElement</code> and need a <code>PsiElement</code> for the above method,",
                                        " see the next question.",
                                        " ",
                                        " </p>",
                                        "-<a class=\"target\" name=\"whatifineedapsielementandihaveauelement?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//whatifineedapsielementandihaveauelement?\">&nbsp;</a><a class=\"target\" name=\"toc10.0.5\">&nbsp;</a><h3>What if I need a <code>PsiElement</code> and I have a <code>UElement</code> ?</h3>",
                                        "+<a class=\"target\" name=\"whatifineedapsielementandihaveauelement?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//whatifineedapsielementandihaveauelement?\">&nbsp;</a><a class=\"target\" name=\"toc11.0.5\">&nbsp;</a><h3>What if I need a <code>PsiElement</code> and I have a <code>UElement</code> ?</h3>",
                                        " <p>",
                                        " ",
                                        " "
                                    ],
                                    [
                                        " by calling <code>element.sourcePsi</code>.",
                                        " ",
                                        " </p>",
                                        "-<a class=\"target\" name=\"howdoigettheumethodforapsimethod?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//howdoigettheumethodforapsimethod?\">&nbsp;</a><a class=\"target\" name=\"toc10.0.6\">&nbsp;</a><h3>How do I get the <code>UMethod</code> for a <code>PsiMethod</code> ?</h3>",
                                        "+<a class=\"target\" name=\"howdoigettheumethodforapsimethod?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//howdoigettheumethodforapsimethod?\">&nbsp;</a><a class=\"target\" name=\"toc11.0.6\">&nbsp;</a><h3>How do I get the <code>UMethod</code> for a <code>PsiMethod</code> ?</h3>",
                                        " <p>",
                                        " ",
                                        " "
                                    ],
                                    [
                                        " <code>toUElementOfType</code> type arguments.",
                                        " ",
                                        " </p>",
                                        "-<a class=\"target\" name=\"howdogetajavaevaluator?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//howdogetajavaevaluator?\">&nbsp;</a><a class=\"target\" name=\"toc10.0.7\">&nbsp;</a><h3>How do get a <code>JavaEvaluator</code> ?</h3>",
                                        "+<a class=\"target\" name=\"howdogetajavaevaluator?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//howdogetajavaevaluator?\">&nbsp;</a><a class=\"target\" name=\"toc11.0.7\">&nbsp;</a><h3>How do get a <code>JavaEvaluator</code> ?</h3>",
                                        " <p>",
                                        " ",
                                        " "
                                    ],
                                    [
                                        " of operations on the evaluator.",
                                        " ",
                                        " </p>",
                                        "-<a class=\"target\" name=\"howdoicheckwhetheranelementisinternal?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//howdoicheckwhetheranelementisinternal?\">&nbsp;</a><a class=\"target\" name=\"toc10.0.8\">&nbsp;</a><h3>How do I check whether an element is internal?</h3>",
                                        "+<a class=\"target\" name=\"howdoicheckwhetheranelementisinternal?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//howdoicheckwhetheranelementisinternal?\">&nbsp;</a><a class=\"target\" name=\"toc11.0.8\">&nbsp;</a><h3>How do I check whether an element is internal?</h3>",
                                        " <p>",
                                        " ",
                                        " ",
                                        " First get a <code>JavaEvaluator</code> as explained above, then call",
                                        " this evaluator method:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\"><span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isInternal</span><span class=\"hljs-params\">(owner: <span class=\"hljs-type\">PsiModifierListOwner</span>?)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span></span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isInternal</span><span class=\"hljs-params\">(owner: <span class=\"hljs-type\">PsiModifierListOwner</span>?)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span></code></pre><p>",
                                        " ",
                                        " (Note that a <code>PsiModifierListOwner</code> is an interface which includes",
                                        " <code>PsiMethod</code>, <code>PsiClass</code>, <code>PsiField</code>, <code>PsiMember</code>, <code>PsiVariable</code>, etc.)",
                                        " ",
                                        " </p>",
                                        "-<a class=\"target\" name=\"iselementinline,sealed,operator,infix,suspend,data?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//iselementinline,sealed,operator,infix,suspend,data?\">&nbsp;</a><a class=\"target\" name=\"toc10.0.9\">&nbsp;</a><h3>Is element inline, sealed, operator, infix, suspend, data?</h3>",
                                        "+<a class=\"target\" name=\"iselementinline,sealed,operator,infix,suspend,data?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//iselementinline,sealed,operator,infix,suspend,data?\">&nbsp;</a><a class=\"target\" name=\"toc11.0.9\">&nbsp;</a><h3>Is element inline, sealed, operator, infix, suspend, data?</h3>",
                                        " <p>",
                                        " ",
                                        " ",
                                        " Get the <code>JavaEvaluator</code> as explained above, and then call one of these",
                                        " evaluator method:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\"><span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isData</span><span class=\"hljs-params\">(owner: <span class=\"hljs-type\">PsiModifierListOwner</span>?)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isInline</span><span class=\"hljs-params\">(owner: <span class=\"hljs-type\">PsiModifierListOwner</span>?)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isLateInit</span><span class=\"hljs-params\">(owner: <span class=\"hljs-type\">PsiModifierListOwner</span>?)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isSealed</span><span class=\"hljs-params\">(owner: <span class=\"hljs-type\">PsiModifierListOwner</span>?)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isOperator</span><span class=\"hljs-params\">(owner: <span class=\"hljs-type\">PsiModifierListOwner</span>?)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isInfix</span><span class=\"hljs-params\">(owner: <span class=\"hljs-type\">PsiModifierListOwner</span>?)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isSuspend</span><span class=\"hljs-params\">(owner: <span class=\"hljs-type\">PsiModifierListOwner</span>?)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span></span></code></pre>",
                                        "-<a class=\"target\" name=\"howdoilookupaclassifihaveitsfullyqualifiedname?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//howdoilookupaclassifihaveitsfullyqualifiedname?\">&nbsp;</a><a class=\"target\" name=\"toc10.0.10\">&nbsp;</a><h3>How do I look up a class if I have its fully qualified name?</h3>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isData</span><span class=\"hljs-params\">(owner: <span class=\"hljs-type\">PsiModifierListOwner</span>?)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isInline</span><span class=\"hljs-params\">(owner: <span class=\"hljs-type\">PsiModifierListOwner</span>?)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isLateInit</span><span class=\"hljs-params\">(owner: <span class=\"hljs-type\">PsiModifierListOwner</span>?)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isSealed</span><span class=\"hljs-params\">(owner: <span class=\"hljs-type\">PsiModifierListOwner</span>?)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isOperator</span><span class=\"hljs-params\">(owner: <span class=\"hljs-type\">PsiModifierListOwner</span>?)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isInfix</span><span class=\"hljs-params\">(owner: <span class=\"hljs-type\">PsiModifierListOwner</span>?)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isSuspend</span><span class=\"hljs-params\">(owner: <span class=\"hljs-type\">PsiModifierListOwner</span>?)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span></code></pre>",
                                        "+<a class=\"target\" name=\"howdoilookupaclassifihaveitsfullyqualifiedname?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//howdoilookupaclassifihaveitsfullyqualifiedname?\">&nbsp;</a><a class=\"target\" name=\"toc11.0.10\">&nbsp;</a><h3>How do I look up a class if I have its fully qualified name?</h3>",
                                        " <p>",
                                        " ",
                                        " "
                                    ],
                                    [
                                        " nullable.",
                                        " ",
                                        " </p>",
                                        "-<a class=\"target\" name=\"howdoilookupaclassifihaveapsitype?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//howdoilookupaclassifihaveapsitype?\">&nbsp;</a><a class=\"target\" name=\"toc10.0.11\">&nbsp;</a><h3>How do I look up a class if I have a PsiType?</h3>",
                                        "+<a class=\"target\" name=\"howdoilookupaclassifihaveapsitype?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//howdoilookupaclassifihaveapsitype?\">&nbsp;</a><a class=\"target\" name=\"toc11.0.11\">&nbsp;</a><h3>How do I look up a class if I have a PsiType?</h3>",
                                        " <p>",
                                        " ",
                                        " "
                                    ],
                                    [
                                        " <code>evaluator.getTypeClass</code>. To go from a class to its type,",
                                        " use <code>getClassType</code>.",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">    <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getClassType</span><span class=\"hljs-params\">(psiClass: <span class=\"hljs-type\">PsiClass</span>?)</span></span>: PsiClassType?</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getTypeClass</span><span class=\"hljs-params\">(psiType: <span class=\"hljs-type\">PsiType</span>?)</span></span>: PsiClass?</span></code></pre>",
                                        "-<a class=\"target\" name=\"howdoilookuphierarhcyannotationsforanelement?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//howdoilookuphierarhcyannotationsforanelement?\">&nbsp;</a><a class=\"target\" name=\"toc10.0.12\">&nbsp;</a><h3>How do I look up hierarhcy annotations for an element?</h3>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>    <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getClassType</span><span class=\"hljs-params\">(psiClass: <span class=\"hljs-type\">PsiClass</span>?)</span></span>: PsiClassType?",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getTypeClass</span><span class=\"hljs-params\">(psiType: <span class=\"hljs-type\">PsiType</span>?)</span></span>: PsiClass?</code></pre>",
                                        "+<a class=\"target\" name=\"howdoilookuphierarhcyannotationsforanelement?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//howdoilookuphierarhcyannotationsforanelement?\">&nbsp;</a><a class=\"target\" name=\"toc11.0.12\">&nbsp;</a><h3>How do I look up hierarhcy annotations for an element?</h3>",
                                        " <p>",
                                        " ",
                                        " "
                                    ],
                                    [
                                        " any annotations specified on super implementations), use",
                                        " one of these two evaluator methods:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">    <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getAllAnnotations</span><span class=\"hljs-params\">(</span>",
                                        "-<span class=\"line\">        owner: <span class=\"hljs-type\">UAnnotated</span>,</span>",
                                        "-<span class=\"line\">        inHierarchy: <span class=\"hljs-type\">Boolean</span></span>",
                                        "-<span class=\"line\">    )</span></span>: List&lt;uannotation&gt;</span>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>    <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getAllAnnotations</span><span class=\"hljs-params\">(",
                                        "+<span class=\"line\"></span>        owner: <span class=\"hljs-type\">UAnnotated</span>,",
                                        "+<span class=\"line\"></span>        inHierarchy: <span class=\"hljs-type\">Boolean</span>",
                                        "+<span class=\"line\"></span>    )</span></span>: List&lt;uannotation&gt;",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getAllAnnotations</span><span class=\"hljs-params\">(</span>",
                                        "-<span class=\"line\">        owner: <span class=\"hljs-type\">PsiModifierListOwner</span>,</span>",
                                        "-<span class=\"line\">        inHierarchy: <span class=\"hljs-type\">Boolean</span></span>",
                                        "-<span class=\"line\">    )</span></span>: Array&lt;psiannotation&gt;</span></code></pre>",
                                        "-<a class=\"target\" name=\"howdoilookupifaclassisasubclassofanother?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//howdoilookupifaclassisasubclassofanother?\">&nbsp;</a><a class=\"target\" name=\"toc10.0.13\">&nbsp;</a><h3>How do I look up if a class is a subclass of another?</h3>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getAllAnnotations</span><span class=\"hljs-params\">(",
                                        "+<span class=\"line\"></span>        owner: <span class=\"hljs-type\">PsiModifierListOwner</span>,",
                                        "+<span class=\"line\"></span>        inHierarchy: <span class=\"hljs-type\">Boolean</span>",
                                        "+<span class=\"line\"></span>    )</span></span>: Array&lt;psiannotation&gt;</code></pre>",
                                        "+<a class=\"target\" name=\"howdoilookupifaclassisasubclassofanother?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//howdoilookupifaclassisasubclassofanother?\">&nbsp;</a><a class=\"target\" name=\"toc11.0.13\">&nbsp;</a><h3>How do I look up if a class is a subclass of another?</h3>",
                                        " <p>",
                                        " ",
                                        " ",
                                        " To see if a method is a direct member of a particular",
                                        " named class, use the following method in <code>JavaEvaluator</code>:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isMemberInClass</span><span class=\"hljs-params\">(member: <span class=\"hljs-type\">PsiMember</span>?, className: <span class=\"hljs-type\">String</span>)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { }</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isMemberInClass</span><span class=\"hljs-params\">(member: <span class=\"hljs-type\">PsiMember</span>?, className: <span class=\"hljs-type\">String</span>)</span></span>: <span class=\"hljs-built_in\">Boolean</span> { }</code></pre><p>",
                                        " ",
                                        " To see if a method is a member in any <em class=\"asterisk\">subclass</em> of a named class, use",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">    <span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isMemberInSubClassOf</span><span class=\"hljs-params\">(</span>",
                                        "-<span class=\"line\">        member: <span class=\"hljs-type\">PsiMember</span>,</span>",
                                        "-<span class=\"line\">        className: <span class=\"hljs-type\">String</span>,</span>",
                                        "-<span class=\"line\">        strict: <span class=\"hljs-type\">Boolean</span> = <span class=\"hljs-literal\">false</span></span>",
                                        "-<span class=\"line\">    )</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span> }</span>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>    <span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isMemberInSubClassOf</span><span class=\"hljs-params\">(",
                                        "+<span class=\"line\"></span>        member: <span class=\"hljs-type\">PsiMember</span>,",
                                        "+<span class=\"line\"></span>        className: <span class=\"hljs-type\">String</span>,",
                                        "+<span class=\"line\"></span>        strict: <span class=\"hljs-type\">Boolean</span> = <span class=\"hljs-literal\">false</span>",
                                        "+<span class=\"line\"></span>    )</span></span>: <span class=\"hljs-built_in\">Boolean</span> { <span class=\"hljs-comment\">/* ... */</span> }",
                                        " <span class=\"line\"></span></code></pre><p>",
                                        " ",
                                        " Here, use <code>strict = true</code> if you don't want to include members in the"
                                    ],
                                    [
                                        " of these methods. Again, <code>strict</code> controls whether we include the super",
                                        " class or super interface itself as a match.",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">    <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">extendsClass</span><span class=\"hljs-params\">(</span>",
                                        "-<span class=\"line\">        cls: <span class=\"hljs-type\">PsiClass</span>?,</span>",
                                        "-<span class=\"line\">        className: <span class=\"hljs-type\">String</span>,</span>",
                                        "-<span class=\"line\">        strict: <span class=\"hljs-type\">Boolean</span> = <span class=\"hljs-literal\">false</span></span>",
                                        "-<span class=\"line\">    )</span></span>: <span class=\"hljs-built_in\">Boolean</span></span>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>    <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">extendsClass</span><span class=\"hljs-params\">(",
                                        "+<span class=\"line\"></span>        cls: <span class=\"hljs-type\">PsiClass</span>?,",
                                        "+<span class=\"line\"></span>        className: <span class=\"hljs-type\">String</span>,",
                                        "+<span class=\"line\"></span>        strict: <span class=\"hljs-type\">Boolean</span> = <span class=\"hljs-literal\">false</span>",
                                        "+<span class=\"line\"></span>    )</span></span>: <span class=\"hljs-built_in\">Boolean</span>",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">implementsInterface</span><span class=\"hljs-params\">(</span>",
                                        "-<span class=\"line\">        cls: <span class=\"hljs-type\">PsiClass</span>,</span>",
                                        "-<span class=\"line\">        interfaceName: <span class=\"hljs-type\">String</span>,</span>",
                                        "-<span class=\"line\">        strict: <span class=\"hljs-type\">Boolean</span> = <span class=\"hljs-literal\">false</span></span>",
                                        "-<span class=\"line\">    )</span></span>: <span class=\"hljs-built_in\">Boolean</span></span></code></pre>",
                                        "-<a class=\"target\" name=\"howdoiknowwhichparameteracallargumentcorrespondsto?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//howdoiknowwhichparameteracallargumentcorrespondsto?\">&nbsp;</a><a class=\"target\" name=\"toc10.0.14\">&nbsp;</a><h3>How do I know which parameter a call argument corresponds to?</h3>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">implementsInterface</span><span class=\"hljs-params\">(",
                                        "+<span class=\"line\"></span>        cls: <span class=\"hljs-type\">PsiClass</span>,",
                                        "+<span class=\"line\"></span>        interfaceName: <span class=\"hljs-type\">String</span>,",
                                        "+<span class=\"line\"></span>        strict: <span class=\"hljs-type\">Boolean</span> = <span class=\"hljs-literal\">false</span>",
                                        "+<span class=\"line\"></span>    )</span></span>: <span class=\"hljs-built_in\">Boolean</span></code></pre>",
                                        "+<a class=\"target\" name=\"howdoiknowwhichparameteracallargumentcorrespondsto?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//howdoiknowwhichparameteracallargumentcorrespondsto?\">&nbsp;</a><a class=\"target\" name=\"toc11.0.14\">&nbsp;</a><h3>How do I know which parameter a call argument corresponds to?</h3>",
                                        " <p>",
                                        " ",
                                        " "
                                    ],
                                    [
                                        " ",
                                        " Lint has a utility method to help with this on the <code>JavaEvaluator</code>:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">    <span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">computeArgumentMapping</span><span class=\"hljs-params\">(</span>",
                                        "-<span class=\"line\">        call: <span class=\"hljs-type\">UCallExpression</span>,</span>",
                                        "-<span class=\"line\">        method: <span class=\"hljs-type\">PsiMethod</span></span>",
                                        "-<span class=\"line\">    )</span></span>: Map&lt;uexpression, psiparameter=<span class=\"hljs-string\">\"\"</span>&gt; { <span class=\"hljs-comment\">/* ... */</span></span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>    <span class=\"hljs-keyword\">open</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">computeArgumentMapping</span><span class=\"hljs-params\">(",
                                        "+<span class=\"line\"></span>        call: <span class=\"hljs-type\">UCallExpression</span>,",
                                        "+<span class=\"line\"></span>        method: <span class=\"hljs-type\">PsiMethod</span>",
                                        "+<span class=\"line\"></span>    )</span></span>: Map&lt;uexpression, psiparameter=<span class=\"hljs-string\">\"\"</span>&gt; { <span class=\"hljs-comment\">/* ... */</span></code></pre><p>",
                                        " ",
                                        " This returns a map from UAST expressions (each argument to a UAST call",
                                        " is a <code>UExpression</code>, and these are the <code>valueArguments</code> property on the"
                                    ],
                                    [
                                        " <code>PsiMethod</code> that the method calls.",
                                        " ",
                                        " </p>",
                                        "-<a class=\"target\" name=\"howcanmylintcheckstargettwodifferentversionsoflint?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//howcanmylintcheckstargettwodifferentversionsoflint?\">&nbsp;</a><a class=\"target\" name=\"toc10.0.15\">&nbsp;</a><h3>How can my lint checks target two different versions of lint?</h3>",
                                        "+<a class=\"target\" name=\"howcanmylintcheckstargettwodifferentversionsoflint?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//howcanmylintcheckstargettwodifferentversionsoflint?\">&nbsp;</a><a class=\"target\" name=\"toc11.0.15\">&nbsp;</a><h3>How can my lint checks target two different versions of lint?</h3>",
                                        " <p>",
                                        " ",
                                        " "
                                    ],
                                    [
                                        " outside of the current API level.",
                                        " ",
                                        " </p>",
                                        "-<a class=\"target\" name=\"canimakemylintcheck%E2%80%9Cnotsuppressible?%E2%80%9D\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//canimakemylintcheck%E2%80%9Cnotsuppressible?%E2%80%9D\">&nbsp;</a><a class=\"target\" name=\"toc10.0.16\">&nbsp;</a><h3>Can I make my lint check \u201cnot suppressible?\u201d</h3>",
                                        "+<a class=\"target\" name=\"canimakemylintcheck%E2%80%9Cnotsuppressible?%E2%80%9D\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//canimakemylintcheck%E2%80%9Cnotsuppressible?%E2%80%9D\">&nbsp;</a><a class=\"target\" name=\"toc11.0.16\">&nbsp;</a><h3>Can I make my lint check \u201cnot suppressible?\u201d</h3>",
                                        " <p>",
                                        " ",
                                        " "
                                    ],
                                    [
                                        " <code>Issue</code>, set the <code>suppressNames</code> property to an <strong class=\"asterisk\">empty</strong> collection.",
                                        " ",
                                        " </p>",
                                        "-<a class=\"target\" name=\"howdoicheckoutthecurrentlintsourcecode?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//howdoicheckoutthecurrentlintsourcecode?\">&nbsp;</a><a class=\"target\" name=\"toc10.0.17\">&nbsp;</a><h3>How do I check out the current lint source code?</h3>",
                                        "-<pre class=\"listing backtick\"><code><span class=\"line\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> git <span class=\"hljs-built_in\">clone</span> --branch=mirror-goog-studio-master-dev --single-branch \\</span>",
                                        "-<span class=\"line\">   https://android.googlesource.com/platform/tools/base</span></span>",
                                        "-<span class=\"line\">Cloning into 'base'...</span>",
                                        "-<span class=\"line\">remote: Total 648820 (delta 325442), reused 635137 (delta 325442)</span>",
                                        "-<span class=\"line\">Receiving objects: 100% (648820/648820), 1.26 GiB | 15.52 MiB/s, done.</span>",
                                        "-<span class=\"line\">Resolving deltas: 100% (325442/325442), done.</span>",
                                        "-<span class=\"line\">Updating files: 100% (14416/14416), done.</span>",
                                        "-<span class=\"line\"><span class=\"hljs-meta\"></span>",
                                        "-<span class=\"line\">$</span><span class=\"bash\"> du -sh base</span></span>",
                                        "-<span class=\"line\">1.8G    base</span>",
                                        "-<span class=\"line\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> <span class=\"hljs-built_in\">cd</span> base/lint</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> ls</span></span>",
                                        "-<span class=\"line\">.editorconfig           BUILD                   build.gradle            libs/</span>",
                                        "-<span class=\"line\">.gitignore              MODULE_LICENSE_APACHE2  cli/</span>",
                                        "-<span class=\"line\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> ls libs/</span></span>",
                                        "-<span class=\"line\">intellij-core/   kotlin-compiler/ lint-api/        lint-checks/     lint-gradle/     lint-model/      lint-tests/      uast/</span></code></pre>",
                                        "-<a class=\"target\" name=\"wheredoifindexamplesoflintchecks?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//wheredoifindexamplesoflintchecks?\">&nbsp;</a><a class=\"target\" name=\"toc10.0.18\">&nbsp;</a><h3>Where do I find examples of lint checks?</h3>",
                                        "+<a class=\"target\" name=\"whyareoverloadedoperatorsnothandled?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//whyareoverloadedoperatorsnothandled?\">&nbsp;</a><a class=\"target\" name=\"toc11.0.17\">&nbsp;</a><h3>Why are overloaded operators not handled?</h3>",
                                        "+<p>",
                                        "+",
                                        "+",
                                        "+Kotlin supports overloaded operators, but these are not handled as",
                                        "+calls in the AST - instead, an implicit <code>get</code> or <code>set</code> method from an",
                                        "+array access will show up as a <code>UArrayAccessExpression</code>. Lint has",
                                        "+specific support to help handling these scenarios; see the \u201cImplicit",
                                        "+Calls\u201d section in the <a href=\"#writingalintcheck:basics\"></a><a href=\"#basics\">basics</a> chapter.",
                                        "+",
                                        "+</p>",
                                        "+<a class=\"target\" name=\"howdoicheckoutthecurrentlintsourcecode?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//howdoicheckoutthecurrentlintsourcecode?\">&nbsp;</a><a class=\"target\" name=\"toc11.0.18\">&nbsp;</a><h3>How do I check out the current lint source code?</h3>",
                                        "+<pre class=\"listing backtick\"><code><span class=\"line\"></span><span class=\"hljs-meta\">$</span><span class=\"bash\"> git <span class=\"hljs-built_in\">clone</span> --branch=mirror-goog-studio-main --single-branch \\",
                                        "+<span class=\"line\"></span>   https://android.googlesource.com/platform/tools/base</span>",
                                        "+<span class=\"line\"></span>Cloning into 'base'...",
                                        "+<span class=\"line\"></span>remote: Total 648820 (delta 325442), reused 635137 (delta 325442)",
                                        "+<span class=\"line\"></span>Receiving objects: 100% (648820/648820), 1.26 GiB | 15.52 MiB/s, done.",
                                        "+<span class=\"line\"></span>Resolving deltas: 100% (325442/325442), done.",
                                        "+<span class=\"line\"></span>Updating files: 100% (14416/14416), done.",
                                        "+<span class=\"line\"></span><span class=\"hljs-meta\">",
                                        "+<span class=\"line\"></span>$</span><span class=\"bash\"> du -sh base</span>",
                                        "+<span class=\"line\"></span>1.8G    base",
                                        "+<span class=\"line\"></span><span class=\"hljs-meta\">$</span><span class=\"bash\"> <span class=\"hljs-built_in\">cd</span> base/lint</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-meta\">$</span><span class=\"bash\"> ls</span>",
                                        "+<span class=\"line\"></span>.editorconfig           BUILD                   build.gradle            libs/",
                                        "+<span class=\"line\"></span>.gitignore              MODULE_LICENSE_APACHE2  cli/",
                                        "+<span class=\"line\"></span><span class=\"hljs-meta\">$</span><span class=\"bash\"> ls libs/</span>",
                                        "+<span class=\"line\"></span>intellij-core/   kotlin-compiler/ lint-api/        lint-checks/     lint-gradle/     lint-model/      lint-tests/      uast/</code></pre>",
                                        "+<a class=\"target\" name=\"wheredoifindexamplesoflintchecks?\">&nbsp;</a><a class=\"target\" name=\"frequentlyaskedquestions//wheredoifindexamplesoflintchecks?\">&nbsp;</a><a class=\"target\" name=\"toc11.0.19\">&nbsp;</a><h3>Where do I find examples of lint checks?</h3>",
                                        " <p>",
                                        " ",
                                        " "
                                    ],
                                    [
                                        " as shown above and look in",
                                        " <code>lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/</code> or",
                                        " browse sources online:",
                                        "-<a href=\"https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-master-dev:lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/\"></a><a href=\"https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-master-dev:lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/\" class=\"url\">https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-master-dev:lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/</a>",
                                        "+<a href=\"https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-main:lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/\"></a><a href=\"https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-main:lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/\" class=\"url\">https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-main:lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/</a>",
                                        " ",
                                        " </p><p>",
                                        " ",
                                        " ",
                                        " ",
                                        " </p>",
                                        "-<a class=\"target\" name=\"appendix:recentchanges\">&nbsp;</a><a class=\"target\" name=\"appendix:recentchanges\">&nbsp;</a><a class=\"target\" name=\"toc11\">&nbsp;</a><h1>Appendix: Recent Changes</h1>",
                                        "+<a class=\"target\" name=\"appendix:recentchanges\">&nbsp;</a><a class=\"target\" name=\"appendix:recentchanges\">&nbsp;</a><a class=\"target\" name=\"toc12\">&nbsp;</a><h1>Appendix: Recent Changes</h1>",
                                        " <p>",
                                        " ",
                                        "            "
                                    ],
                                    [
                                        " </p><p>",
                                        " ",
                                        " </p><ul>",
                                        "+<li class=\"asterisk\">The default behaviour of ResourceXmlDetector will change.",
                                        "+  It will skip res/raw folder and you have to override appliesTo method",
                                        "+  if you want your Lint checks to run there.",
                                        "+",
                                        "+<p></p><p>",
                                        "+",
                                        "+</p></li>",
                                        "+<li class=\"asterisk\">The computation of checksums for binary test files (e.g. <code>compiled</code>",
                                        "+  and <code>bytecode</code>) unfortunately had to change; the old mechamism was",
                                        "+  not stable. This means that after updating some of the test files",
                                        "+  will show as having wrong checksums (e.g. \u201cThe checksum does not",
                                        "+  match for test.kt; expected 0\u00d726e3997d but was 0xb76b5946\u201d). In these",
                                        "+  cases, just drop in the new checksum.",
                                        "+",
                                        "+<p></p><p>",
                                        "+",
                                        "+</p></li>",
                                        " <li class=\"asterisk\">Source-modifying test modes. Lint's testing library now runs your",
                                        "   unit tests through a number of additional paces: it will try",
                                        "   inserting unnecessary parentheses, it will try replacing all",
                                        "   imported symbols with fully qualified names, it will try adding",
                                        "   argument names and reordering arguments to Kotlin calls, etc, and",
                                        "   making sure the same results are reported. More information about",
                                        "-  this is available in <a href=\"#testmodes\"></a><a href=\"#testmodes\" class=\"url\">api-guide/test-modes.md.html</a>.</li></ul>",
                                        "+  this is available in <a href=\"#testmodes\"></a><a href=\"#testmodes\" class=\"url\">api-guide/test-modes.md.html</a>.",
                                        "+",
                                        "+<p></p><p>",
                                        "+",
                                        "+</p></li>",
                                        "+<li class=\"asterisk\">The support for Kotlin's overloaded operators is significantly",
                                        "+  improved. While these are method calls, in the AST they do not show",
                                        "+  up as <code>UCallExpressions</code> (instead, you'll find them as",
                                        "+  <code>UBinaryExpression</code>, <code>UPrefixExpression</code>, <code>UArrayAccessExpression</code>",
                                        "+  and so on), which meant various call-specific checks ignored them.",
                                        "+",
                                        "+<p></p><p>",
                                        "+",
                                        "+  Now, in addition to the built-in checks all applying to these",
                                        "+  implicit calls as well, lint can present these expressions as call",
                                        "+  expressions. This means that the <code>getApplicableMethodNames</code> machinery",
                                        "+  for call callbacks will now also work for overloaded functions, and",
                                        "+  code which is iterating through calls can use the new",
                                        "+  <code>UastCallVisitor</code> (or directly construct <code>UImplicitCallExpression</code>",
                                        "+  wrappers) to simplify processing of all these types of calls.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+  Finally, lint now provides a way to resolve operators for array",
                                        "+  access expressions (which is missing in UAST) via the",
                                        "+  UArrayAccessExpression.resolveOperator extension method, which is",
                                        "+  also used by the above machinery.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+</p></li>",
                                        "+<li class=\"asterisk\">The annotation support (where a detector callback is invoked when",
                                        "+  elements are combined with annotated elements) has been significantly",
                                        "+  reworked (and the detector API changed). It now supports visiting",
                                        "+  the following additional scenarios:",
                                        "+",
                                        "+<p></p><p>",
                                        "+",
                                        "+</p><ul>",
                                        "+  <li class=\"asterisk\">Fields in annotated classes and packages",
                                        "+</li>",
                                        "+  <li class=\"asterisk\">Fields and methods in annotated outerclasses",
                                        "+</li>",
                                        "+  <li class=\"asterisk\">Class and object literals",
                                        "+</li>",
                                        "+  <li class=\"asterisk\">Overridden methods",
                                        "+</li>",
                                        "+  <li class=\"asterisk\">File level annotations (from Kotlin)",
                                        "+",
                                        "+<p></p><p>",
                                        "+",
                                        "+</p></li></ul>",
                                        "+</li><li class=\"number\">It also offers better control for handling scopes \u2014 providing all",
                                        "+  relevant annotations in the hierarchy at the same time such that a",
                                        "+  lint check for example can easily determine whether an outer",
                                        "+  annotation like <code>@Immutable</code> is canceled by a closer @Mutable`",
                                        "+  annotation.",
                                        "+",
                                        "+<p></p><p>",
                                        "+",
                                        "+  There are some new annotation usage type enum constants which let",
                                        "+  your lint checks treat these differently. For example, the lint check",
                                        "+  which makes sure that calls to methods annotated with <code>@CheckResult</code>",
                                        "+  started flagging overrides of these methods. The fix was to add the",
                                        "+  following override to the <code>CheckResultDetector</code>:",
                                        "+",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isApplicableAnnotationUsage</span><span class=\"hljs-params\">(type: <span class=\"hljs-type\">AnnotationUsageType</span>)</span></span>: <span class=\"hljs-built_in\">Boolean</span> {",
                                        "+<span class=\"line\"></span>  <span class=\"hljs-keyword\">return</span> type != AnnotationUsageType.METHOD_OVERRIDE &amp;&amp;",
                                        "+<span class=\"line\"></span>      <span class=\"hljs-keyword\">super</span>.isApplicableAnnotationUsage(type)",
                                        "+<span class=\"line\"></span>}</code></pre><p>",
                                        "+",
                                        "+  (Using this new API constant will make your lint check only work with",
                                        "+  the new version of lint. An alternative fix is to check that the",
                                        "+  <code>usage</code> parameter is not a <code>UMethod</code>.)",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+  For more, see the <a href=\"#annotations\">new documentation</a> for",
                                        "+  how to handle annotations from detectors.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+</p></li>",
                                        "+<li class=\"asterisk\">The lint testing library now contains a new test file type, <code>rClass</code>,",
                                        "+  which lets you easily construct Android <code>R</code> classes with resource",
                                        "+  declarations (which are needed in tests that reference the R fields",
                                        "+  to ensure that symbol resolution works.)",
                                        "+",
                                        "+<p></p><p>",
                                        "+",
                                        "+</p></li>",
                                        "+<li class=\"asterisk\">When you call <code>context.getLocation(UMethod)</code>, lint will now default",
                                        "+  this method to be equivalent to <code>context.getNameLocation(UMethod)</code>",
                                        "+  instead, which will highlight the method name. This might surface",
                                        "+  itself as unit test failures where the location range moves from a",
                                        "+  single <code>^</code> into a <code>~~~~~</code> range. This is because the location printer",
                                        "+  uses <code>^</code> to just indicate the start offset when a range is multi-line.</li></ul>",
                                        " ",
                                        " <p></p><p>",
                                        " "
                                    ],
                                    [
                                        "   significantly improved, particularly around Kotlin scoping functions.</li></ul>",
                                        " ",
                                        " <p></p>",
                                        "-<a class=\"target\" name=\"appendix:environmentvariablesandsystemproperties\">&nbsp;</a><a class=\"target\" name=\"appendix:environmentvariablesandsystemproperties\">&nbsp;</a><a class=\"target\" name=\"toc12\">&nbsp;</a><h1>Appendix: Environment Variables and System Properties</h1>",
                                        "+<a class=\"target\" name=\"appendix:environmentvariablesandsystemproperties\">&nbsp;</a><a class=\"target\" name=\"appendix:environmentvariablesandsystemproperties\">&nbsp;</a><a class=\"target\" name=\"toc13\">&nbsp;</a><h1>Appendix: Environment Variables and System Properties</h1>",
                                        " <p>",
                                        " ",
                                        " "
                                    ],
                                    [
                                        " what they are seems useful.",
                                        " ",
                                        " </p>",
                                        "-<a class=\"target\" name=\"environmentvariables\">&nbsp;</a><a class=\"target\" name=\"appendix:environmentvariablesandsystemproperties/environmentvariables\">&nbsp;</a><a class=\"target\" name=\"toc12.1\">&nbsp;</a><h2>Environment Variables</h2>",
                                        "+<a class=\"target\" name=\"environmentvariables\">&nbsp;</a><a class=\"target\" name=\"appendix:environmentvariablesandsystemproperties/environmentvariables\">&nbsp;</a><a class=\"target\" name=\"toc13.1\">&nbsp;</a><h2>Environment Variables</h2>",
                                        " ",
                                        "-<a class=\"target\" name=\"detectorconfigurationvariables\">&nbsp;</a><a class=\"target\" name=\"appendix:environmentvariablesandsystemproperties/environmentvariables/detectorconfigurationvariables\">&nbsp;</a><a class=\"target\" name=\"toc12.1.1\">&nbsp;</a><h3>Detector Configuration Variables</h3>",
                                        "+<a class=\"target\" name=\"detectorconfigurationvariables\">&nbsp;</a><a class=\"target\" name=\"appendix:environmentvariablesandsystemproperties/environmentvariables/detectorconfigurationvariables\">&nbsp;</a><a class=\"target\" name=\"toc13.1.1\">&nbsp;</a><h3>Detector Configuration Variables</h3>",
                                        " <p>",
                                        " ",
                                        " "
                                    ],
                                    [
                                        "   Corresponding system property: <code>lint.nullness.ignore-deprecated</code>",
                                        " ",
                                        " </p></dd></dl><p></p>",
                                        "-<a class=\"target\" name=\"lintconfigurationvariables\">&nbsp;</a><a class=\"target\" name=\"appendix:environmentvariablesandsystemproperties/environmentvariables/lintconfigurationvariables\">&nbsp;</a><a class=\"target\" name=\"toc12.1.2\">&nbsp;</a><h3>Lint Configuration Variables</h3>",
                                        "+<a class=\"target\" name=\"lintconfigurationvariables\">&nbsp;</a><a class=\"target\" name=\"appendix:environmentvariablesandsystemproperties/environmentvariables/lintconfigurationvariables\">&nbsp;</a><a class=\"target\" name=\"toc13.1.2\">&nbsp;</a><h3>Lint Configuration Variables</h3>",
                                        " <p>",
                                        " ",
                                        " "
                                    ],
                                    [
                                        "   normally used <code>$SDK/platforms/android-?/data/api-versions.xml</code> file.",
                                        " ",
                                        " </p></dd></dl><p></p>",
                                        "-<a class=\"target\" name=\"lintdevelopmentvariables\">&nbsp;</a><a class=\"target\" name=\"appendix:environmentvariablesandsystemproperties/environmentvariables/lintdevelopmentvariables\">&nbsp;</a><a class=\"target\" name=\"toc12.1.3\">&nbsp;</a><h3>Lint Development Variables</h3>",
                                        "+<a class=\"target\" name=\"lintdevelopmentvariables\">&nbsp;</a><a class=\"target\" name=\"appendix:environmentvariablesandsystemproperties/environmentvariables/lintdevelopmentvariables\">&nbsp;</a><a class=\"target\" name=\"toc13.1.3\">&nbsp;</a><h3>Lint Development Variables</h3>",
                                        " <p>",
                                        " ",
                                        " "
                                    ],
                                    [
                                        "   server or by the rest of the development team.",
                                        " ",
                                        " </p></dd></dl><p></p>",
                                        "-<a class=\"target\" name=\"systemproperties\">&nbsp;</a><a class=\"target\" name=\"appendix:environmentvariablesandsystemproperties/systemproperties\">&nbsp;</a><a class=\"target\" name=\"toc12.2\">&nbsp;</a><h2>System Properties</h2>",
                                        "+<a class=\"target\" name=\"systemproperties\">&nbsp;</a><a class=\"target\" name=\"appendix:environmentvariablesandsystemproperties/systemproperties\">&nbsp;</a><a class=\"target\" name=\"toc13.2\">&nbsp;</a><h2>System Properties</h2>",
                                        " <p>",
                                        " ",
                                        " "
                                    ],
                                    [
                                        "   loading problems. By default, true.",
                                        " ",
                                        " </p></dd></td></tr></tbody></table></dl><script>window.alreadyProcessedMarkdeep||(document.body.style.visibility=&ldquo;visible&rdquo;)</script>",
                                        "-<p></p></span><div id=\"mdContextMenu\" style=\"visibility:hidden\"></div><div class=\"markdeepFooter\"><i>formatted by <a href=\"https://casual-effects.com/markdeep\" style=\"color:#999\">Markdeep&nbsp;1.13&nbsp;&nbsp;</a></i><div style=\"display:inline-block;font-size:13px;font-family:'Times New Roman',serif;vertical-align:middle;transform:translate(-3px,-1px)rotate(135deg);\">\u2712</div></div></body></html>",
                                        "\\ No newline at end of file",
                                        "+<p></p></span><div id=\"mdContextMenu\" style=\"visibility:hidden\"></div><div class=\"markdeepFooter\"><i>formatted by <a href=\"https://casual-effects.com/markdeep\" style=\"color:#999\">Markdeep&nbsp;1.13&nbsp;&nbsp;</a></i><div style=\"display:inline-block;font-size:13px;font-family:'Times New Roman',serif;vertical-align:middle;transform:translate(-3px,-1px)rotate(135deg);\">\u2712</div></div><script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.6/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"></script></body></html>",
                                        "\\ No newline at end of file",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "docs/api-guide.md.html",
                            "content": {
                                "current": "<meta charset=\"utf-8\" lang=\"kotlin\">\n\n**Android Lint API Guide**\n\nThis chapter inlines all the API documentation into a single\nlong book, suitable for printing or reading on a tablet.\n\n            (insert api-guide/terminology.md.html here)\n            (insert api-guide/basics.md.html here)\n            (insert api-guide/example.md.html here)\n            (insert api-guide/publishing.md.html here)\n            (insert api-guide/unit-testing.md.html here)\n            (insert api-guide/test-modes.md.html here)\n            (insert api-guide/quickfixes.md.html here)\n            (insert api-guide/partial-analysis.md.html here)\n            (insert api-guide/dataflow-analyzer.md.html here)\n            (insert api-guide/annotations.md.html here)\n            (insert api-guide/faq.md.html here)\n\n            # Appendix: Recent Changes\n            (insert api-guide/changes.md.html here)\n            (insert usage/variables.md.html here)\n\n<!-- Markdeep: --><style class=\"fallback\">body{visibility:hidden;white-space:pre;font-family:monospace}</style><script src=\"markdeep.min.js\" charset=\"utf-8\"></script><script src=\"https://morgan3d.github.io/markdeep/latest/markdeep.min.js\" charset=\"utf-8\"></script><script>window.alreadyProcessedMarkdeep||(document.body.style.visibility=\"visible\")</script>\n",
                                "diffs": [
                                    [
                                        "             (insert api-guide/quickfixes.md.html here)",
                                        "             (insert api-guide/partial-analysis.md.html here)",
                                        "             (insert api-guide/dataflow-analyzer.md.html here)",
                                        "+            (insert api-guide/annotations.md.html here)",
                                        "             (insert api-guide/faq.md.html here)",
                                        " ",
                                        "             # Appendix: Recent Changes",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "docs/api-guide/annotations.md.html",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        "+<meta charset=\"utf-8\" lang=\"kotlin\">",
                                        "+",
                                        "+# Annotations",
                                        "+",
                                        "+Annotations allow API authors to express constraints that tools can",
                                        "+enforce. There are many examples of these, along with existing lint",
                                        "+checks:",
                                        "+",
                                        "+* `@VisibleForTesting`: this private API should only be accessed",
                                        "+  from outside this package from unit tests",
                                        "+* `@CheckResult`: anyone calling this method is expected to do",
                                        "+  something with the return value",
                                        "+* `@CallSuper`: anyone overriding this method must also invoke `super`",
                                        "+* `@UiThread`: anyone calling this method must be calling from the UI thread",
                                        "+* `@Size`: the size of the annotated array or collection must be",
                                        "+    of a particular size",
                                        "+* `@IntRange`: the annotated integer must have a value in the given range",
                                        "+",
                                        "+...and so on. Lint has built-in checks to enforce these, along with",
                                        "+infrastructure to make them easy to write, and to share analysis such",
                                        "+that improvements to one helps them all. This means that you can easily",
                                        "+write your own annotations-based checks as well.",
                                        "+",
                                        "+!!! Tip",
                                        "+   Note that the annotation support helps you write checks where you",
                                        "+   check *usages* of annotated elements, not usages of the annotations",
                                        "+   themselves. If you simply want to look at actual annotations,",
                                        "+   override `getApplicableUastTypes` to return",
                                        "+   `listOf(UAnnotation::class.java)`, and override `createUastHandler`",
                                        "+   to return an `object : UElementHandler` which simply overrides",
                                        "+   `visitAnnotation`.",
                                        "+",
                                        "+## Basics",
                                        "+",
                                        "+To create a basic annotation checker, there are two required steps:",
                                        "+",
                                        "+1. Register the fully qualified name (or names) of the annotation",
                                        "+   classes you want to analyze, and",
                                        "+2. Implement the `visitAnnotationUsage` callback for handling each",
                                        "+   occurrence.",
                                        "+",
                                        "+Here's a basic example:",
                                        "+",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~kotlin",
                                        "+override fun applicableAnnotations(): List<String> {",
                                        "+    return listOf(\"my.pkg.MyAnnotation\")",
                                        "+}",
                                        "+",
                                        "+override fun visitAnnotationUsage(",
                                        "+    context: JavaContext,",
                                        "+    element: UElement,",
                                        "+    annotationInfo: AnnotationInfo,",
                                        "+    usageInfo: AnnotationUsageInfo",
                                        "+) {",
                                        "+    val name = annotationInfo.qualifiedName.substringAfterLast('.')",
                                        "+    val message = \"`${usageInfo.type.name}` usage associated with \" +",
                                        "+                  \"`@$name` on ${annotationInfo.origin}\"",
                                        "+    val location = context.getLocation(element)",
                                        "+    context.report(TEST_ISSUE, element, location, message)",
                                        "+}",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                        "+",
                                        "+All this simple detector does is flag any usage associated with the",
                                        "+given annotation, including some information about the usage.",
                                        "+",
                                        "+If we for example have the following annotated API:",
                                        "+",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~kotlin",
                                        "+annotation class MyAnnotation",
                                        "+abstract class Book {",
                                        "+    operator fun contains(@MyAnnotation word: String): Boolean = TODO()",
                                        "+    fun length(): Int = TODO()",
                                        "+    @MyAnnotation fun close() = TODO()",
                                        "+}",
                                        "+operator fun Book.get(@MyAnnotation index: Int): Int = TODO()",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                        "+",
                                        "+...and we then run the above detector on the following test case:",
                                        "+",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~kotlin",
                                        "+fun test(book: Book) {",
                                        "+    val found = \"lint\" in book",
                                        "+    val firstWord = book[0]",
                                        "+    book.close()",
                                        "+}",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                        "+",
                                        "+we get the following output:",
                                        "+",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~text",
                                        "+src/book.kt:14: Error: METHOD_CALL_PARAMETER usage associated with @MyAnnotation on PARAMETER",
                                        "+    val found = \"lint\" in book",
                                        "+                 ----",
                                        "+src/book.kt:15: Error: METHOD_CALL_PARAMETER usage associated with @MyAnnotation on PARAMETER",
                                        "+    val firstWord = book[0]",
                                        "+                         -",
                                        "+src/book.kt:16: Error: METHOD_CALL usage associated with @MyAnnotation on METHOD",
                                        "+    book.close()",
                                        "+         -------",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                        "+",
                                        "+In the first case, the infix operator \u201cin\u201d will call `contains` under",
                                        "+the hood, and here we've annotated the parameter, so lint visits the",
                                        "+argument corresponding to that parameter (the literal string \u201clint\u201d).",
                                        "+",
                                        "+The second case shows a similar situation where the array syntax will",
                                        "+end up calling our extension method, `get()`.",
                                        "+",
                                        "+And the third case shows the most common scenario: a straight forward",
                                        "+method call to an annotated method.",
                                        "+",
                                        "+In many cases, the above detector implementation is nearly all you have",
                                        "+to do to enforce an annotation constraint. For example, in the",
                                        "+`@CheckResult` detector, we want to make sure that anyone calling a",
                                        "+method annotated with `@CheckResult` will not ignore the method return",
                                        "+value. All the lint check has to do is register an interest in",
                                        "+*`androidx.annotation.CheckResult`*, and lint will invoke",
                                        "+`visitAnnotationUsage` for each method call to the annotated method.",
                                        "+Then we just check the method call to make sure that its return value",
                                        "+isn't ignored, e.g. that it's stored into a variable or passed into",
                                        "+another method call.",
                                        "+",
                                        "+## Annotation Usage Types and isApplicableAnnotationUsage",
                                        "+",
                                        "+### Method Override",
                                        "+",
                                        "+In the detector above, we're including the \u201cusage type\u201d in the error",
                                        "+message. The usage type tells you something about how the annotation is",
                                        "+associated with the usage element -- and in the above, the first two",
                                        "+cases have a usage type of \u201cparameter\u201d because the visited element",
                                        "+corresponds to a parameter annotation, and the third one a method",
                                        "+annotation.",
                                        "+",
                                        "+There are many other usage types. For example, if we add the following",
                                        "+to the API:",
                                        "+",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~kotlin",
                                        "+open class Paperback : Book() {",
                                        "+    override fun close() { }",
                                        "+}",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                        "+",
                                        "+then the detector will emit the following incident since the new method",
                                        "+overrides another method that was annotated:",
                                        "+",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~text",
                                        "+src/book.kt:14: Error: METHOD_OVERRIDE usage associated with @MyAnnotation on METHOD",
                                        "+    override fun close() { }",
                                        "+                 -----",
                                        "+1 errors, 0 warnings",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                        "+",
                                        "+Overriding an annotated element is how the `@CallSuper` detector is",
                                        "+implemented, which makes sure that any method which overrides a method",
                                        "+annotated with `@CallSuper` is invoking `super` on the overridden",
                                        "+method somewhere in the method body.",
                                        "+",
                                        "+### Method Return",
                                        "+",
                                        "+Here's another example, where we have annotated the return value",
                                        "+with @MyAnnotation:",
                                        "+",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~kotlin",
                                        "+open class Paperback : Book() {",
                                        "+    fun getDefaultCaption(): String = TODO()",
                                        "+    @MyAnnotation",
                                        "+    fun getCaption(imageId: Int): String {",
                                        "+        if (imageId == 5) {",
                                        "+            return \"Blah blah blah\"",
                                        "+        } else {",
                                        "+            return getDefaultCaption()",
                                        "+        }",
                                        "+    }",
                                        "+}",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                        "+",
                                        "+Here, lint will flag the various exit points from the method",
                                        "+associated with the annotation:",
                                        "+",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~text",
                                        "+src/book.kt:18: Error: METHOD_RETURN usage associated with @MyAnnotation on METHOD",
                                        "+            return \"Blah blah blah\"",
                                        "+                    --------------",
                                        "+src/book.kt:20: Error: METHOD_RETURN usage associated with @MyAnnotation on METHOD",
                                        "+            return getDefaultCaption()",
                                        "+                   -------------------",
                                        "+2 errors, 0 warnings",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                        "+",
                                        "+Note also that this would have worked if the annotation had been",
                                        "+inherited from a super method instead of being explicitly set here.",
                                        "+",
                                        "+Lint uses this mechanism for example for its resource type lint check",
                                        "+which makes sure that if a method has been annotated with say",
                                        "+`@DrawableRes`, that any return values are not of some incompatible",
                                        "+esource type (such as `@StringRes`).",
                                        "+",
                                        "+### Handling Usage Types",
                                        "+",
                                        "+As you can see, your callback will be invoked for a wide variety of",
                                        "+usage types, and sometimes, they don't apply to the scenario that your",
                                        "+detector is interested in. Consider the `@CheckResult` detector again,",
                                        "+which makes sure that any calls to a given method will look at the",
                                        "+return value. From the \u201cmethod override\u201d section above, you can see",
                                        "+that lint would *also* notify your detector for any method that is",
                                        "+*overriding* (rather than calling) a method annotated with",
                                        "+`@CheckResult`. We don't want to report those.",
                                        "+",
                                        "+There are two ways to handle this. The first one is to check whether",
                                        "+the usage element is a `UMethod`, which it will be in the overriding",
                                        "+case, and return early in that case.",
                                        "+",
                                        "+The recommended approach, which `CheckResultDetector` uses, is to",
                                        "+override the `isApplicableAnnotationUsage` method:",
                                        "+",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~kotlin",
                                        "+override fun isApplicableAnnotationUsage(type: AnnotationUsageType): Boolean {",
                                        "+    return type != AnnotationUsageType.METHOD_OVERRIDE &&",
                                        "+            super.isApplicableAnnotationUsage(type)",
                                        "+}",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                        "+",
                                        "+!!! Tip",
                                        "+   Notice how we are also calling `super` here and combining the result",
                                        "+   instead of just using a hardcoded list of expected usage types. This",
                                        "+   is because, as discussed below, lint already filters out some usage",
                                        "+   types by default in the super implementation.",
                                        "+",
                                        "+### Usage Types Filtered By Default",
                                        "+",
                                        "+The default implementation of `Detector.isApplicableAnnotationUsage`",
                                        "+looks like this:",
                                        "+",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~kotlin",
                                        "+open fun isApplicableAnnotationUsage(type: AnnotationUsageType): Boolean {",
                                        "+    return type != AnnotationUsageType.BINARY &&",
                                        "+           type != AnnotationUsageType.EQUALITY",
                                        "+}",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                        "+",
                                        "+These usage types apply to cases where annotated elements are",
                                        "+compared for equality or using other binary operators. Initially",
                                        "+introducing this support led to a lot of noise and false positives;",
                                        "+most of the existing lint checks do not want this, so they're opt-in.",
                                        "+",
                                        "+An example of a lint check which *does* enforce this is the",
                                        "+`@HalfFloat` lint check. In Android, a",
                                        "+[HalfFloat](https://developer.android.com/reference/androidx/annotation/",
                                        "+ HalfFloat) is a representation of a floating point value (with less",
                                        "+precision than a `float`) which is stored in a `short`, normally an",
                                        "+integer primitive value. If you annotate a `short` with `@HalfFloat`,",
                                        "+including in APIs, lint can help catch cases where you are making",
                                        "+mistakes -- such as accidentally widening the value to an int, and so",
                                        "+on. Here are some example error messages from lint's unit tests for the",
                                        "+half float check:",
                                        "+",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~text",
                                        "+src/test/pkg/HalfFloatTest.java:23: Error: Expected a half float here, not a resource id [HalfFloat]",
                                        "+        method1(getDimension1()); // ERROR",
                                        "+                ---------------",
                                        "+src/test/pkg/HalfFloatTest.java:43: Error: Half-float type in expression widened to int [HalfFloat]",
                                        "+        int result3 = float1 + 1; // error: widening",
                                        "+                      ------",
                                        "+src/test/pkg/HalfFloatTest.java:50: Error: Half-float type in expression widened to int [HalfFloat]",
                                        "+        Math.round(float1); // Error: should use Half.round",
                                        "+                   ------",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                        "+",
                                        "+### Scopes",
                                        "+",
                                        "+Many annotations apply not just to methods or fields but to classes and",
                                        "+even packages, with the idea that the annotation applies to everything",
                                        "+within the package.",
                                        "+",
                                        "+For example, if we have this annotated API:",
                                        "+",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~kotlin linenumbers",
                                        "+annotation class ThreadSafe",
                                        "+annotation class NotThreadSafe",
                                        "+",
                                        "+@ThreadSafe",
                                        "+abstract class Stack<T> {",
                                        "+    abstract fun size(): Int",
                                        "+    abstract fun push(item: T)",
                                        "+    abstract fun pop(): String",
                                        "+    @NotThreadSafe fun save() { }",
                                        "+",
                                        "+    @NotThreadSafe",
                                        "+    abstract class FileStack<T> : Stack<T>() {",
                                        "+        abstract override fun pop(): String",
                                        "+    }",
                                        "+}",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                        "+",
                                        "+And the following test case:",
                                        "+",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~kotlin linenumbers",
                                        "+fun test(stack: Stack<String>, fileStack: Stack<String>) {",
                                        "+    stack.push(\"Hello\")",
                                        "+    stack.pop()",
                                        "+    fileStack.push(\"Hello\")",
                                        "+    fileStack.pop()",
                                        "+}",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                        "+",
                                        "+Here, `stack.push` call on line 2 resolves to the API method on line 7.",
                                        "+That method is not annotated, but it's inside a class that is annotated",
                                        "+with `@ThreadSafe`. Similarly for the `pop()` call on line 3.",
                                        "+",
                                        "+The `fileStack.push` call on line 4 also resolves to the same method",
                                        "+as the call on line 2 (even though the concrete type is a `FileStack`",
                                        "+instead of a `Stack), so like on line 2, this call is taken to be",
                                        "+thread safe.",
                                        "+",
                                        "+However, the `fileStack.pop` call on line 6 resolves to the API method",
                                        "+on line 14. That method is not annotated, but it's inside a class",
                                        "+annotated with `@NotThreadSafe`, which in turn is inside an outer class",
                                        "+annotated with `@ThreadSafe`. The intent here is clearly that that",
                                        "+method should be considered not thread safe.",
                                        "+",
                                        "+To help with scenarios like this, lint will provide *all* the",
                                        "+annotations (well, all annotations that any lint checks have registered",
                                        "+interest in via `getApplicableAnnotations`; it will not include",
                                        "+annotations like `java.lang.SuppressWarnings` and so on unless a lint",
                                        "+check asks for it).",
                                        "+",
                                        "+This is provided in the `AnnotationUsageInfo` passed to the",
                                        "+`visitAnnotationUsage` parameters. The `annotations` list will include",
                                        "+all relevant annotations, **in scope order**. That means that for the",
                                        "+above `pop` call on line 5, it will point to first the annotations on",
                                        "+the `pop` method (and here there are none), then the `@NotThreadSafe`",
                                        "+annotation on the surrounding class, and then the `@ThreadSafe`",
                                        "+annotation on the outer class, and then annotations on the file itself",
                                        "+and the package.",
                                        "+",
                                        "+The `index` points to the annotation we're analyzing. If for example",
                                        "+our detector had registered an interest in `@ThreadSafe`, it would be",
                                        "+called for the second `pop` call as well, since it calls a method",
                                        "+inside a `@ThreadSafe` annotation (on the outer class), but the `index`",
                                        "+would be 1. The lint check can check all the annotations earlier than",
                                        "+the one at the index to see if they \"counteract\" the annotation, which",
                                        "+of course the `@NotThreadSafe` annotation does.",
                                        "+",
                                        "+Lint uses this mechanism for example for the `@CheckResult` annotation,",
                                        "+since some APIs are annotated with `@CheckResult` for whole packages",
                                        "+(as an API convention), and then there are explicit exceptions carved",
                                        "+out using `@CanIgnoreReturnValue`. There is a method on the",
                                        "+`AnnotationUsageInfo`, `anyCloser`, which makes this check easy:",
                                        "+",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~kotlin",
                                        "+if (usageInfo.anyCloser { it.qualifiedName ==",
                                        "+     \"com.google.errorprone.annotations.CanIgnoreReturnValue\" }) {",
                                        "+    // There's a closer @CanIgnoreReturnValue which cancels the",
                                        "+    // outer @CheckReturnValue annotation we're analyzing here",
                                        "+    return",
                                        "+}",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                        "+",
                                        "+!!! Tip",
                                        "+   You only have to worry about this when there are different",
                                        "+   annotations that interact with each other. If the same annotation is",
                                        "+   found in multiple nested contexts, lint *will* include all the",
                                        "+   annotations in the `AnnotationUsageInfo`, but it will not invoke",
                                        "+   your callback for any outer occurrences; only the closest one. This",
                                        "+   is usually what detectors expect: the innermost one \"overrides\" the",
                                        "+   outer ones, so lint omits these to help avoid false positives where",
                                        "+   a lint check author forgot to handle and test this scenario. A good",
                                        "+   example of this situation is with the `@RequiresApi` annotation; a",
                                        "+   class may be annotated as requiring a particular API level, but a",
                                        "+   specific inner class or method within the class can have a more",
                                        "+   specific `@RequiresApi` annotation, and we only want the detector to",
                                        "+   be invoked for the innermost one. If for some reason your detector",
                                        "+   *does need* to handle all of the repeated outer occurrences, note",
                                        "+   that they're all there in the `annotations` list for the",
                                        "+   `AnnotationUsageInfo` so you can look for them and handle them when",
                                        "+   you are invoked for the innermost one.",
                                        "+",
                                        "+### Inherited Annotations",
                                        "+",
                                        "+As we saw in the method overrides section, lint will include",
                                        "+annotations in the hierarchy: annotations specified not just on a",
                                        "+specific method but super implementations and so on.",
                                        "+",
                                        "+This is normally what you want -- for example, if a method is annotated",
                                        "+with `@CheckResult` (such as `String.trim()`, where it's important to",
                                        "+understand that you're not changing the string in place, there's a new",
                                        "+string returned so it's probably a mistake to not use it), you probably",
                                        "+want any overriding implementations to have the same semantics.",
                                        "+",
                                        "+However, there are exceptions to this. For example,",
                                        "+`@VisibleForTesting`. Perhaps a super class made a method public only",
                                        "+for testing purposes, but you have a concrete subclass where you are",
                                        "+deliberately supporting the operation, not just from tests. If",
                                        "+annotations were always inherited, you would have to create some sort",
                                        "+of annotation to \"revert\" the semantics, e.g.",
                                        "+`@VisibleNotJustForTesting`, which would be ... anoying.",
                                        "+",
                                        "+Lint let's you choose what the semantics are for each annotation. For",
                                        "+example, the lint check which enforces the `@VisibleForTesting` and",
                                        "+`@RestrictTo` annotations handles it like this:",
                                        "+",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~kotlin",
                                        "+override fun inheritAnnotation(annotation: String): Boolean {",
                                        "+    // Require restriction annotations to be annotated everywhere",
                                        "+    return false",
                                        "+}",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                        "+",
                                        "+(Note that the API passes in the fully qualified name of the annotation",
                                        "+in question so you can control this behavior individually for each",
                                        "+annotation when your detector applies to multiple annotations.)",
                                        "+",
                                        "+<!-- Markdeep: --><style class=\"fallback\">body{visibility:hidden;white-space:pre;font-family:monospace}</style><script src=\"markdeep.min.js\" charset=\"utf-8\"></script><script src=\"https://morgan3d.github.io/markdeep/latest/markdeep.min.js\" charset=\"utf-8\"></script><script>window.alreadyProcessedMarkdeep||(document.body.style.visibility=\"visible\")</script>",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "docs/api-guide/basics.md.html",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        "    local stubs. See the [unit testing](unit-testing.md.html) chapter",
                                        "    for more details about this.",
                                        " ",
                                        "+### Implicit Calls",
                                        "+",
                                        "+Kotlin supports operator overloading for a number of built-in",
                                        "+operators. For example, if you have the following code,",
                                        "+",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                        "+fun test(n1: BigDecimal, n2: BigDecimal) {",
                                        "+    // Here, this is really an infix call to BigDecimal#compareTo",
                                        "+    if (n1 < n2) {",
                                        "+        ...",
                                        "+    }",
                                        "+}",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                        "+",
                                        "+the `<` here is actually a function call (which you can verify by",
                                        "+invoking Go To Declaration over the symbol in the IDE). This is not",
                                        "+something that is built specially for the `BigDecimal` class; this",
                                        "+works on any of your Java classes as well, and Kotlin if you put the",
                                        "+`operator` modifier as part of the function declaration.",
                                        "+",
                                        "+However, note that in the abstract syntax tree, this is **not**",
                                        "+represented as a `UCallExpression`; here we'll have a",
                                        "+`UBinaryExpression` with left operand `n1`, right operand `n2` and",
                                        "+operator `UastBinaryOperator.LESS`. This means that if your lint check",
                                        "+is specifically looking at `compareTo` calls, you can't just visit",
                                        "+every `UCallExpression`; you *also* have to visit every",
                                        "+`UBinaryExpression`, and check whether it's invoking a `compareTo`",
                                        "+method.",
                                        "+",
                                        "+This is not just specific to binary operators; it also applies to unary",
                                        "+operators (such as `!`, `-`, `++`, and so on), as well as even array",
                                        "+accesses; an array access can map to a `get` call or a `set` call",
                                        "+depending on how it's used.",
                                        "+",
                                        "+Lint has some special support to help handle these situations.",
                                        "+",
                                        "+First, the built-in support for call callbacks (where you register an",
                                        "+interest in call names by returning names from the",
                                        "+`getApplicableMethodNames` and then responding in the `visitMethodCall`",
                                        "+callback) already handles this automatically. If you register for",
                                        "+example an interest in method calls to `compareTo`, it will invoke your",
                                        "+callback for the binary operator scenario shown above as well, passing",
                                        "+you a call which has the right value arguments, method name, and so on.",
                                        "+",
                                        "+The way this works is that lint can create a \u201dwrapper\u201c class which",
                                        "+presents the underlying `UBinaryExpression` (or",
                                        "+`UArrayAccessExpression` and so on) as a `UCallExpression`. In the case",
                                        "+of a binary operator, the value parameter list will be the left and",
                                        "+right operands. This means that your code can just process this as if",
                                        "+the code had written as an explicit call instead of using the operator",
                                        "+syntax. You can also directly look for this wrapper class,",
                                        "+`UImplicitCallExpression`, which has an accessor method for looking up",
                                        "+the original or underlying element. And you can construct these",
                                        "+wrappers yourself, via `UBinaryExpression.asCall()`,",
                                        "+`UUnaryExpression.asCall()`, and `UArrayAccessExpression.asCall()`.",
                                        "+",
                                        "+There is also a visitor you can use to visit call calls --",
                                        "+`UastCallVisitor`, which will visit all calls, including those from",
                                        "+array accesses and unary operators and binary operators.",
                                        "+",
                                        "+This support is particularly useful for array accesses, since unlike",
                                        "+the operator expression, there is no `resolveOperator` method on",
                                        "+`UArrayExpression`. There is an open request for that in the UAST issue",
                                        "+tracker (KTIJ-18765), but for now, lint has a workaround to handle the",
                                        "+resolve on its own.",
                                        "+",
                                        " ### PSI",
                                        " ",
                                        " PSI is short for \u201dProgram Structure Interface\u201c, and is IntelliJ's AST",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "docs/api-guide/changes.md.html",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " ",
                                        " **7.1**",
                                        " ",
                                        "+* The default behaviour of ResourceXmlDetector will change.",
                                        "+  It will skip res/raw folder and you have to override appliesTo method",
                                        "+  if you want your Lint checks to run there.",
                                        "+",
                                        "+* The computation of checksums for binary test files (e.g. `compiled`",
                                        "+  and `bytecode`) unfortunately had to change; the old mechamism was",
                                        "+  not stable. This means that after updating some of the test files",
                                        "+  will show as having wrong checksums (e.g. \u201cThe checksum does not",
                                        "+  match for test.kt; expected 0x26e3997d but was 0xb76b5946\u201d). In these",
                                        "+  cases, just drop in the new checksum.",
                                        "+",
                                        " * Source-modifying test modes. Lint's testing library now runs your",
                                        "   unit tests through a number of additional paces: it will try",
                                        "   inserting unnecessary parentheses, it will try replacing all"
                                    ],
                                    [
                                        "   making sure the same results are reported. More information about",
                                        "   this is available in [](test-modes.md.html).",
                                        " ",
                                        "+* The support for Kotlin's overloaded operators is significantly",
                                        "+  improved. While these are method calls, in the AST they do not show",
                                        "+  up as `UCallExpressions` (instead, you'll find them as",
                                        "+  `UBinaryExpression`, `UPrefixExpression`, `UArrayAccessExpression`",
                                        "+  and so on), which meant various call-specific checks ignored them.",
                                        "+",
                                        "+  Now, in addition to the built-in checks all applying to these",
                                        "+  implicit calls as well, lint can present these expressions as call",
                                        "+  expressions. This means that the `getApplicableMethodNames` machinery",
                                        "+  for call callbacks will now also work for overloaded functions, and",
                                        "+  code which is iterating through calls can use the new",
                                        "+  `UastCallVisitor` (or directly construct `UImplicitCallExpression`",
                                        "+  wrappers) to simplify processing of all these types of calls.",
                                        "+",
                                        "+  Finally, lint now provides a way to resolve operators for array",
                                        "+  access expressions (which is missing in UAST) via the",
                                        "+  UArrayAccessExpression.resolveOperator extension method, which is",
                                        "+  also used by the above machinery.",
                                        "+",
                                        "+* The annotation support (where a detector callback is invoked when",
                                        "+  elements are combined with annotated elements) has been significantly",
                                        "+  reworked (and the detector API changed). It now supports visiting",
                                        "+  the following additional scenarios:",
                                        "+",
                                        "+  * Fields in annotated classes and packages",
                                        "+  * Fields and methods in annotated outerclasses",
                                        "+  * Class and object literals",
                                        "+  * Overridden methods",
                                        "+  * File level annotations (from Kotlin)",
                                        "+",
                                        "+  It also offers better control for handling scopes -- providing all",
                                        "+  relevant annotations in the hierarchy at the same time such that a",
                                        "+  lint check for example can easily determine whether an outer",
                                        "+  annotation like `@Immutable` is canceled by a closer @Mutable`",
                                        "+  annotation.",
                                        "+",
                                        "+  There are some new annotation usage type enum constants which let",
                                        "+  your lint checks treat these differently. For example, the lint check",
                                        "+  which makes sure that calls to methods annotated with `@CheckResult`",
                                        "+  started flagging overrides of these methods. The fix was to add the",
                                        "+  following override to the `CheckResultDetector`:",
                                        "+",
                                        "+  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~kotlin",
                                        "+  override fun isApplicableAnnotationUsage(type: AnnotationUsageType): Boolean {",
                                        "+    return type != AnnotationUsageType.METHOD_OVERRIDE &&",
                                        "+        super.isApplicableAnnotationUsage(type)",
                                        "+  }",
                                        "+  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                        "+",
                                        "+  (Using this new API constant will make your lint check only work with",
                                        "+  the new version of lint. An alternative fix is to check that the",
                                        "+  `usage` parameter is not a `UMethod`.)",
                                        "+",
                                        "+  For more, see the [new documentation](annotations.md.html) for",
                                        "+  how to handle annotations from detectors.",
                                        "+",
                                        "+* The lint testing library now contains a new test file type, `rClass`,",
                                        "+  which lets you easily construct Android `R` classes with resource",
                                        "+  declarations (which are needed in tests that reference the R fields",
                                        "+  to ensure that symbol resolution works.)",
                                        "+",
                                        "+* When you call `context.getLocation(UMethod)`, lint will now default",
                                        "+  this method to be equivalent to `context.getNameLocation(UMethod)`",
                                        "+  instead, which will highlight the method name. This might surface",
                                        "+  itself as unit test failures where the location range moves from a",
                                        "+  single `^` into a `~~~~~` range. This is because the location printer",
                                        "+  uses `^` to just indicate the start offset when a range is multi-line.",
                                        "+",
                                        " **7.0**",
                                        " ",
                                        " * The API level has bumped to 10.",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "docs/api-guide/dataflow-analyzer.md.html",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " For WorkManager, ensure that newly created work tasks eventually",
                                        " get enqueued:",
                                        " ",
                                        "-[Source](https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-master-dev:lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/WorkManagerDetector.kt)",
                                        "-[Test](https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-master-dev:lint/libs/lint-tests/src/test/java/com/android/tools/lint/checks/WorkManagerDetectorTest.kt)",
                                        "+[Source](https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-main:lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/WorkManagerDetector.kt)",
                                        "+[Test](https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-main:lint/libs/lint-tests/src/test/java/com/android/tools/lint/checks/WorkManagerDetectorTest.kt)",
                                        " ",
                                        " ### Complex Example",
                                        " ",
                                        " For the Slices API, apply a number of checks on chained calls constructing slices, checking that you only specify a single timestamp, that you don't mix icons and actions, etc etc.",
                                        " ",
                                        "-[Source](https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-master-dev:lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/SliceDetector.kt)",
                                        "-[Test](https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-master-dev:lint/libs/lint-tests/src/test/java/com/android/tools/lint/checks/SliceDetectorTest.kt)",
                                        "+[Source](https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-main:lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/SliceDetector.kt)",
                                        "+[Test](https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-main:lint/libs/lint-tests/src/test/java/com/android/tools/lint/checks/SliceDetectorTest.kt)",
                                        " ",
                                        " <!-- Markdeep: --><style class=\"fallback\">body{visibility:hidden;white-space:pre;font-family:monospace}</style><script src=\"markdeep.min.js\" charset=\"utf-8\"></script><script src=\"https://morgan3d.github.io/markdeep/latest/markdeep.min.js\" charset=\"utf-8\"></script><script>window.alreadyProcessedMarkdeep||(document.body.style.visibility=\"visible\")</script>",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "docs/api-guide/example.md.html",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        "         @JvmField",
                                        "         val ISSUE: Issue = Issue.create(",
                                        "             // ID: used in @SuppressLint warnings etc",
                                        "-            id = \"ShortUniqueId\",",
                                        "+            id = \"SampleId\",",
                                        "             // Title -- shown in the IDE's preference dialog, as category headers in the",
                                        "             // Analysis results window, etc",
                                        "             briefDescription = \"Lint Mentions\","
                                    ],
                                    [
                                        "         .run()",
                                        "         .expect(",
                                        "             \"\"\"",
                                        "-            src/test/pkg/TestClass1.java:5: Warning: This code mentions lint: Congratulations [ShortUniqueId]",
                                        "+            src/test/pkg/TestClass1.java:5: Warning: This code mentions lint: Congratulations [SampleId]",
                                        "                 private static String s2 = \"Let's say it: lint\";",
                                        "                                            \u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c",
                                        "             0 errors, 1 warnings",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "docs/api-guide/faq.md.html",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " This is possible as part of the issue registration. After creating your",
                                        " `Issue`, set the `suppressNames` property to an **empty** collection.",
                                        " ",
                                        "+### Why are overloaded operators not handled?",
                                        "+",
                                        "+Kotlin supports overloaded operators, but these are not handled as",
                                        "+calls in the AST - instead, an implicit `get` or `set` method from an",
                                        "+array access will show up as a `UArrayAccessExpression`. Lint has",
                                        "+specific support to help handling these scenarios; see the \u201cImplicit",
                                        "+Calls\u201d section in the [basics chapter](basics.md.html).",
                                        "+",
                                        " ### How do I check out the current lint source code?",
                                        " ",
                                        " ```shell",
                                        "-$ git clone --branch=mirror-goog-studio-master-dev --single-branch \\",
                                        "+$ git clone --branch=mirror-goog-studio-main --single-branch \\",
                                        "    https://android.googlesource.com/platform/tools/base",
                                        " Cloning into 'base'...",
                                        " remote: Total 648820 (delta 325442), reused 635137 (delta 325442)"
                                    ],
                                    [
                                        " as shown above and look in",
                                        " `lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/` or",
                                        " browse sources online:",
                                        "-[](https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-master-dev:lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/)",
                                        "+[](https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-main:lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/)",
                                        " ",
                                        " <!-- Markdeep: --><style class=\"fallback\">body{visibility:hidden;white-space:pre;font-family:monospace}</style><script src=\"markdeep.min.js\" charset=\"utf-8\"></script><script src=\"https://morgan3d.github.io/markdeep/latest/markdeep.min.js\" charset=\"utf-8\"></script><script>window.alreadyProcessedMarkdeep||(document.body.style.visibility=\"visible\")</script>",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "docs/api-guide/partial-analysis.md.html",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " you cannot just create incidents and filter or customize them later.",
                                        " ",
                                        " The most complicated example of this is lint's built-in",
                                        "-[UnusedResourceDetector](https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-master-dev:lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/UnusedResourceDetector.java), which locates unused resources. This \u201crequires\u201d",
                                        "+[UnusedResourceDetector](https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-main:lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/UnusedResourceDetector.java), which locates unused resources. This \u201crequires\u201d",
                                        " global analysis, since we want to include all resources in the entire",
                                        " project. We also cannot just store lists of \u201cresources declared\u201d and",
                                        " \"resources referenced\u201c since we really want to treat this as a graph.",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "docs/api-guide/test-modes.md.html",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " and that's fine; as usual we'll deliberately turn off the check in this",
                                        " detector:",
                                        " ",
                                        "-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~java @Override",
                                        "-protected TestLintTask lint() {",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~java",
                                        "+@Override protected TestLintTask lint() {",
                                        "     // This lint check deliberately treats fully qualified imports",
                                        "     // differently (they are interpreted as a deliberate usage of",
                                        "     // the discouraged API) so the fully qualified equivalence test"
                                    ],
                                    [
                                        " making sure that detectors are properly handling the presence of",
                                        " absence of `UBlockExpression` around the child nodes.",
                                        " ",
                                        "+### If to When Replacement",
                                        "+",
                                        "+In Kotlin, you can replace a series of `if`/`else` statements with a",
                                        "+single `when` block. These two alternative do not look the same in the",
                                        "+AST; `if` expressions show up as `UIfExpression`, and `when`",
                                        "+expressions show up as `USwitchExpression`.",
                                        "+",
                                        "+The if-to-when test mode will change all the `if` statements in Kotlin",
                                        "+lint tests with the corresponding when statement, and makes sure that",
                                        "+the test results remain the same. This ensures that detectors are",
                                        "+properly looking for both `UIfExpression` and `USwitchExpression` and",
                                        "+handling each. When this test mode was introduced, around 12 unit tests",
                                        "+in lint's built-in checks (spread across 5 detectors) needed some",
                                        "+tweaks.",
                                        "+",
                                        "+### Whitespace Mode",
                                        "+",
                                        "+This test mode inserts a number of \"unnecessary\" whitespace characters",
                                        "+in valid places in the source code.",
                                        "+",
                                        "+This helps catch bugs where lint checks are improperly making",
                                        "+assumptions about whitespace in the source file, particularly in",
                                        "+quickfix implementations, or when for example looking up a qualified",
                                        "+expression and just taking the `asSourceString()` or `text` property of",
                                        "+a PSI element or PSI type and checking it for equality with something",
                                        "+like `java.util.List<String>`.",
                                        "+",
                                        "+For example, some of the built-in checks which performed quickfix",
                                        "+string replacements based on regular expression matching had to be",
                                        "+updated to be prepared for whitespace characters:",
                                        "+",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~diff",
                                        "++++ b/lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/WakelockDetector.java",
                                        "+@@ -454,7 +454,7 @@ public class WakelockDetector extends Detector implements ClassScanner, SourceCo",
                                        "+     LintFix fix =",
                                        "+             fix().name(\"Set timeout to 10 minutes\")",
                                        "+                     .replace()",
                                        "+-                    .pattern(\"acquire\\\\(()\\\\)\")",
                                        "++                    .pattern(\"acquire\\\\s*\\\\(()\\\\s*\\\\)\")",
                                        "+                     .with(\"10*60*1000L /*10 minutes*/\")",
                                        "+                     .build();",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                        "+",
                                        " <!-- Markdeep: --><style class=\"fallback\">body{visibility:hidden;white-space:pre;font-family:monospace}</style><script src=\"markdeep.min.js\" charset=\"utf-8\"></script><script src=\"https://morgan3d.github.io/markdeep/latest/markdeep.min.js\" charset=\"utf-8\"></script><script>window.alreadyProcessedMarkdeep||(document.body.style.visibility=\"visible\")</script>",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "docs/api-guide/unit-testing.md.html",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        "         .run()",
                                        "         .expect(",
                                        "             \"\"\"",
                                        "-            src/test/pkg/TestClass1.java:5: Warning: This code mentions lint: Congratulations [ShortUniqueId]",
                                        "+            src/test/pkg/TestClass1.java:5: Warning: This code mentions lint: Congratulations [SampleId]",
                                        "                 private static String s2 = \"Let's say it: lint\";",
                                        "                                            \u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c\u223c",
                                        "             0 errors, 1 warnings"
                                    ],
                                    [
                                        " ",
                                        " And now, all the other unit tests simply include `recyclerViewStub`",
                                        " as one of the test files. For a larger example, see",
                                        "-[this test](https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-master-dev:lint/libs/lint-tests/src/test/java/com/android/tools/lint/checks/SliceDetectorTest.kt).",
                                        "+[this test](https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-main:lint/libs/lint-tests/src/test/java/com/android/tools/lint/checks/SliceDetectorTest.kt).",
                                        " ",
                                        " !!! Tip",
                                        "    In recent versions of lint, the unit testing library will do some"
                                    ],
                                    [
                                        " leave references to the class in the code.)",
                                        " ",
                                        " For more information, see the \"Library Dependencies and Stubs\" section in",
                                        "-https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-master-dev:lint/docs/api-guide/unit-testing.md.html",
                                        "+https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-main:lint/docs/api-guide/unit-testing.md.html",
                                        " ```",
                                        " ",
                                        " ## Binary and Compiled Source Files",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "docs/index.html",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        "   <li class=\"minus\"><a href=\"api-guide/unit-testing.md.html\">Unit Testing</a>",
                                        " </li>",
                                        "   <li class=\"minus\"><a href=\"api-guide/test-modes.md.html\">Test Modes</a>",
                                        "+</li>",
                                        "+  <li class=\"minus\"><a href=\"api-guide/annotations.md.html\">Annotations</a>",
                                        " </li>",
                                        "   <li class=\"minus\"><a href=\"api-guide/quickfixes.md.html\">Adding Quick Fixes</a>",
                                        " </li>"
                                    ],
                                    [
                                        " <ul>",
                                        "   <li class=\"minus\"><a href=\"internal/guidelines.md.html\">Guidelines</a>",
                                        " </li>",
                                        "-  <li class=\"minus\"><a href=\"internal/document-checks.md.html\">Generating Issue Documentation</a></li></ul></li></ul>",
                                        "+  <li class=\"minus\"><a href=\"internal/document-checks.md.html\">Generating Issue Documentation</a>",
                                        "+</li>",
                                        "+  <li class=\"minus\"><a href=\"internal/verify.md.html\">Testing dev builds</a></li></ul></li></ul>",
                                        " ",
                                        " <p></p><p>",
                                        " "
                                    ],
                                    [
                                        " </p><p>",
                                        " ",
                                        " </p><ul>",
                                        "+<li class=\"asterisk\">September 2021: Added documentation for <a href=\"annotations.md.html\">annotation",
                                        "+  handling</a>",
                                        "+</li>",
                                        " <li class=\"asterisk\">July 2021: Added documentation for",
                                        "   <a href=\"api-guide/test-modes.md.html\">test modes</a>",
                                        " </li>",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "docs/internal/document-checks.md.html",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " the lint source code).",
                                        " ",
                                        " ```shell",
                                        "-$ export LINT_URI_PREFIX=https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-master-dev:lint/",
                                        "+$ export LINT_URI_PREFIX=https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-main:lint/",
                                        " ",
                                        " $ lint \\",
                                        "     --generate-docs \\",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "docs/internal/guidelines.md.html",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " ",
                                        " # Debugging lint in the IDE",
                                        " ",
                                        "-When debugging lint running in the IDE, machinery the IDE has",
                                        "-to avoid UI freezes involves throwing exceptions if read operations",
                                        "-are taking too long -- and then the editor restarting highlighting",
                                        "-at a later time. This makes debugging tricky. There are probably",
                                        "-better ways to do this (I remember an IntelliJ registry key to set",
                                        "-that I can't find now), but what I do is open `LintIdeClient` and",
                                        "-in the `runReadAction` method, I change",
                                        "-",
                                        "-```",
                                        "-if (application.isUnitTestMode()) {",
                                        "+By default the IDE cancels certain operations if they take too long,",
                                        "+including Lint. This makes debugging tricky. To disable this behavior,",
                                        "+start the IDE with",
                                        " ```",
                                        "+-Didea.ProcessCanceledException=disabled",
                                        "+````",
                                        " ",
                                        "-to",
                                        "-",
                                        "+Alternatively, you can use the internal action",
                                        "+\"Disable ProcessCanceledException\". Note, to use internal actions",
                                        "+you must first go to `Help > Edit Custom Properties` and add",
                                        " ```",
                                        "-if (true || application.isUnitTestMode()) {",
                                        "+idea.is.internal=true",
                                        " ```",
                                        " ",
                                        " # Updating Baselines"
                                    ],
                                    [
                                        " place, either set `$ADT_SOURCE_TREE` or edit the test first to point",
                                        " the `sourceTree` var to point to your checkout.",
                                        " ",
                                        "+# Deprecating and Removing APIs",
                                        "+",
                                        "+If we have to remove methods (such as `UastContext`, which is slated",
                                        "+for removal from UAST in the next version of IntelliJ), just",
                                        "+deprecating doesn't seem to be enough; a lot of existing lint checks",
                                        "+will use APIs if the code continues to compile and run. We are guilty",
                                        "+of this ourselves; lint itself is still referencing a lot of deprecated",
                                        "+APIs.",
                                        "+",
                                        "+However, if we just delete APIs, that will break existing lint checks",
                                        "+in the field. Therefore, to deprecate APIs, we should be using Kotlin's",
                                        "+special support for marking deprecated methods hidden (the",
                                        "+`DeprecationLevel` attribute in a `Deprecated` annotation). This will",
                                        "+keep the method in the runtime jar file, and older lint checks will be",
                                        "+able to invoke it -- but it's removed from compilation, therefore",
                                        "+forcing lint checks to update before we actually remove the API for",
                                        "+good. (This support is one of the reasons why we want all new APIs in",
                                        "+lint to be implemented in Kotlin.)",
                                        "+",
                                        " # Issue Granularity",
                                        " ",
                                        " We regularly get requests for a new lint check to highlight or"
                                    ],
                                    [
                                        "    https://source.corp.google.com/android/tools/base/lint/studio-checks/src/main/java/com/android/tools/lint/checks/studio/ForbiddenStudioCallDetector.kt",
                                        " ",
                                        "    In lint itself, there is a similar check, dedicated to deprecations:",
                                        "-   https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-master-dev:lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/DeprecationDetector.kt;l=1?q=DeprecationDetector.kt",
                                        "+   https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-main:lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/DeprecationDetector.kt;l=1?q=DeprecationDetector.kt",
                                        " ",
                                        "    The DeprecationDetector is used to flag APIs that are discouraged.",
                                        "    It was initially written to let us deprecate things in XML files",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "docs/internal/verify.md.html",
                            "content": {
                                "current": "<meta charset=\"utf-8\">\n\n**Testing Development Builds**\n\nThis document describes how to run your development version of lint\nagainst some large projects to look for false positives, false\nnegatives and other issues after making nontrivial changes.\n\n## Conventions\n\nIn the following, `$SRC` refers to your checkout of the lint\ndevelopment branch, normally `studio-main`, and the lint source code is\nfound in `$SRC/tools/base/lint/`.\n\n## Testing against AndroidX\n\nTo run a development version of lint against the AndroidX tree, first\ncheck out AndroidX into `$ANDROIDX`. For checkout instructions, see\n[their\nREADME](https://android.googlesource.com/platform/frameworks/support/+/a\nndroidx-main/README.md).\n\nThen, build lint into AGP:\n\n```ksh\ncd $SRC/tools\n./gradlew pL\n```\n\n(`pL` is short for publishLocal; Gradle allows abbreviations. After\nmaking changes to lint only, you can run just `./gradlew pAGL` which is\nquite a bit faster because it skips some targets that have to be built\nonce but aren't affected by lint-only changes.)\n\nWe'll need to know the version number of AGP that was built; as of\nthis writing it's 7.1.0-dev, but that will change multiple times a year so you can consult the actual version with something like this:\n\n```ksh\n$ grep buildVersion $SRC/tools/buildSrc/base/version.properties\nbuildVersion = 7.1.0-dev\n```\n\nWe'll need to supply a number of override properties, so it's helpful\nto place this into a shell function:\n\n```ksh\nrunGradleForAndroidX() {\n    CUSTOM_REPO=$ADT_SOURCE_TREE/out/repo \\\n    GRADLE_PLUGIN_VERSION=7.1.0-dev \\\n    GRADLE_PLUGIN_REPO=$ADT_SOURCE_TREE/out/repo:$ADT_SOURCE_TREE/prebuilts/tools/common/m2/repository \\\n    $ADT_SOURCE_TREE/tools/gradlew --parallel ${@}\n}\nalias gwx=runGradleForAndroidX\n```\n\nNow you can go to `$ANDROIDX` and run all the lint targets (one for\neach library):\n\n```ksh\ngwx lint\n```\n\nIf you want to debug a particular scenario, replace the `--parallel`\nflag with `--no-daemon -Dorg.gradle.debug=true`, run the build, and\ncreate a Remote configuration in IntelliJ and use it to attach.\n\n## Testing against Android Platform\n\nLint is run as part of the Android platform builds, including a number of custom lint checks specific to the platform.\n\nThe following will refer to the directory containing the Android\nplatform source code as `$ANDROID_SRC`.\n\nFirst, checkout the AOSP platform into `$ANDROID_SRC`:\n\n```ksh\nmkdir $ANDROID_SRC && cd $ANDROID_SRC\nrepo init -u https://android.googlesource.com/platform/manifest -b master\n```\n\nThen create a new branch for testing:\n\n```ksh\nrepo start testing123 .\n```\n\nNext, build a development version of lint packaged into a commandline\ntools component:\n\n```ksh\ncd $SRC/tools/base\nexport DIST_DIR=/tmp/dist && mkdir -p $DIST_DIR\n../buildSrc/servers/build_tools.sh\n```\n\nAfter this step, we'll have `/tmp/dist/commandlinetools_linux.zip`\nwhich we now need to insert into the Android platform, with some tweaks:\n\n```ksh\ncd $ANDROID_SRC/prebuilts/cmdline-tools/\ngit rm -rf tools\nunzip /tmp/dist/commandlinetools_linux.zip\nmv cmdline-tools tools\ngit add tools\n```\n\nThere is one deliberate change to the tools for platform usage that we need to preserve, so back out any changes to `tools/bin/lint`:\n\n```ksh\ngit reset tools/bin/lint && git restore tools/bin/lint\n```\n\nThat's it. If you don't have a full Android build environment up and\nrunning (or enough diskspace!) you can upload this to gerrit and have\nthe presubmit machinery do a test run: git commit, repo upload, and\nthen mark the CL Presubmit-Ready.\n\nHere's an example of a trial balloon CL:\n [](https://android-review.googlesource.com/c/platform/prebuilts/cmdline-tools/+/1769725)\n\nAnd here's a sample CL of a real lint upgrade which shows some of the\nother CLs in the topic that were necessary -- updating baselines etc:\n\n[](https://android-review.googlesource.com/c/platform/prebuilts/cmdline-tools/+/1746780)\n\nIf you **do** have an Android build environment, which is helpful if\nyou actually need to debug to figure out why something is going on, run\nthe following target to check lint:\n\n```ksh\nm lint-check\n```\n\nAs usual you'll want to run `. build/envsetup.sh` and `lunch sdk-eng`\nfirst.\n\nIf there's a failure, you can look at `out/error.log` where you'll find\nsomething like this:\n\n```\n...\nThe failing command was run inside an sbox sandbox in temporary directory\nout/soong/.temp/sbox/aaa65d9ed8eca15675a35eeb74818d9864690068\nThe failing command line was:\nrm -rf ./out/srcjars && mkdir -p ./out/srcjars && ./tools/out/bin/zipsync -d ./out/srcjars -l ./out/srcjars/list -f \"*.java\" ./out/.intermediates/packages/modules/Permission/PermissionController/PermissionController/android_common_GooglePermissionController_apex30/gen/proto/proto0.srcjar ./out/.intermediates/packages/modules/Permission/PermissionController/PermissionController/android_common_GooglePermissionController_apex30/gen/android/R.srcjar ./out/.intermediates/packages/modules/Permission/PermissionController/PermissionController/android_common_GooglePermissionController_apex30/kapt/kapt-sources.jar\n...truncated...\n```\n\nNote that the real lint command is prefixed by a few other commands on\nthe same line so search forwards through `&&` until you get to the line\nwhich starts with `JAVA_OPTS=` (and lop off the rest after the next\n`&&` or '||').\n\nHere's a typical invocation that we're left with:\n\n```\nJAVA_OPTS=\"-Xmx3072m --add-opens java.base/java.util=ALL-UNNAMED\"\nANDROID_SDK_HOME=out/soong/.intermediates/packages/modules/Permission/Pe\nrmissionController/PermissionController/android_common/lint/home\nSDK_ANNOTATIONS=./out/lint/annotations.zip\nLINT_OPTS=-DLINT_API_DATABASE=./out/lint/api_versions.xml\n./tools/out/bin/lint --quiet --project ./out/project.xml --config\n./out/lint.xml --html ./out/lint-report.html --text\n./out/lint-report.txt --xml ./out/lint-report.xml --compile-sdk-version\nT --java-language-level 1.9 --kotlin-language-level 1.3 --url\n.=.,out/soong=out --exitcode\n```\n\nThis means that you can `cd` to the sandbox directory and rerun the\ngiven command to repeat just the failing lint invocation, adding some\ndebugging flags and attaching with a debugger as necessary.\n\nYou can also convert this to a runconfig in IntelliJ for running the\nlint Main class with the right pwd, environment variables and arguments\ninside the IDE.\n\n### New Check Fails\n\nThe platform obviously isn't a real Android app, and some of the checks\nwhich apply for apps (such as flagging an import of `android.R` as\nsuspicious) do not apply in platform code.\n\nIf you've added a new lint check and it's finding false positives in\nthe platform, you may consider just adding it to the exclude list in\n`build/soong/java/lint_defaults.txt`.\n\n## Other Projects\n\nFor other projects built with Gradle, you can add a property in your\nroot `gradle.properties` to redirect AGP to use your custom version of\nlint instead. This is described in more detail in\n[](../usage/newer-lint.md.html).\n\n<!-- Markdeep: --><style class=\"fallback\">body{visibility:hidden;white-space:pre;font-family:monospace}</style><script src=\"markdeep.min.js\" charset=\"utf-8\"></script><script src=\"https://morgan3d.github.io/markdeep/latest/markdeep.min.js\" charset=\"utf-8\"></script><script>window.alreadyProcessedMarkdeep||(document.body.style.visibility=\"visible\")</script>\n",
                                "diffs": [
                                    [
                                        "+<meta charset=\"utf-8\">",
                                        "+",
                                        "+**Testing Development Builds**",
                                        "+",
                                        "+This document describes how to run your development version of lint",
                                        "+against some large projects to look for false positives, false",
                                        "+negatives and other issues after making nontrivial changes.",
                                        "+",
                                        "+## Conventions",
                                        "+",
                                        "+In the following, `$SRC` refers to your checkout of the lint",
                                        "+development branch, normally `studio-main`, and the lint source code is",
                                        "+found in `$SRC/tools/base/lint/`.",
                                        "+",
                                        "+## Testing against AndroidX",
                                        "+",
                                        "+To run a development version of lint against the AndroidX tree, first",
                                        "+check out AndroidX into `$ANDROIDX`. For checkout instructions, see",
                                        "+[their",
                                        "+README](https://android.googlesource.com/platform/frameworks/support/+/a",
                                        "+ndroidx-main/README.md).",
                                        "+",
                                        "+Then, build lint into AGP:",
                                        "+",
                                        "+```ksh",
                                        "+cd $SRC/tools",
                                        "+./gradlew pL",
                                        "+```",
                                        "+",
                                        "+(`pL` is short for publishLocal; Gradle allows abbreviations. After",
                                        "+making changes to lint only, you can run just `./gradlew pAGL` which is",
                                        "+quite a bit faster because it skips some targets that have to be built",
                                        "+once but aren't affected by lint-only changes.)",
                                        "+",
                                        "+We'll need to know the version number of AGP that was built; as of",
                                        "+this writing it's 7.1.0-dev, but that will change multiple times a year so you can consult the actual version with something like this:",
                                        "+",
                                        "+```ksh",
                                        "+$ grep buildVersion $SRC/tools/buildSrc/base/version.properties",
                                        "+buildVersion = 7.1.0-dev",
                                        "+```",
                                        "+",
                                        "+We'll need to supply a number of override properties, so it's helpful",
                                        "+to place this into a shell function:",
                                        "+",
                                        "+```ksh",
                                        "+runGradleForAndroidX() {",
                                        "+    CUSTOM_REPO=$ADT_SOURCE_TREE/out/repo \\",
                                        "+    GRADLE_PLUGIN_VERSION=7.1.0-dev \\",
                                        "+    GRADLE_PLUGIN_REPO=$ADT_SOURCE_TREE/out/repo:$ADT_SOURCE_TREE/prebuilts/tools/common/m2/repository \\",
                                        "+    $ADT_SOURCE_TREE/tools/gradlew --parallel ${@}",
                                        "+}",
                                        "+alias gwx=runGradleForAndroidX",
                                        "+```",
                                        "+",
                                        "+Now you can go to `$ANDROIDX` and run all the lint targets (one for",
                                        "+each library):",
                                        "+",
                                        "+```ksh",
                                        "+gwx lint",
                                        "+```",
                                        "+",
                                        "+If you want to debug a particular scenario, replace the `--parallel`",
                                        "+flag with `--no-daemon -Dorg.gradle.debug=true`, run the build, and",
                                        "+create a Remote configuration in IntelliJ and use it to attach.",
                                        "+",
                                        "+## Testing against Android Platform",
                                        "+",
                                        "+Lint is run as part of the Android platform builds, including a number of custom lint checks specific to the platform.",
                                        "+",
                                        "+The following will refer to the directory containing the Android",
                                        "+platform source code as `$ANDROID_SRC`.",
                                        "+",
                                        "+First, checkout the AOSP platform into `$ANDROID_SRC`:",
                                        "+",
                                        "+```ksh",
                                        "+mkdir $ANDROID_SRC && cd $ANDROID_SRC",
                                        "+repo init -u https://android.googlesource.com/platform/manifest -b master",
                                        "+```",
                                        "+",
                                        "+Then create a new branch for testing:",
                                        "+",
                                        "+```ksh",
                                        "+repo start testing123 .",
                                        "+```",
                                        "+",
                                        "+Next, build a development version of lint packaged into a commandline",
                                        "+tools component:",
                                        "+",
                                        "+```ksh",
                                        "+cd $SRC/tools/base",
                                        "+export DIST_DIR=/tmp/dist && mkdir -p $DIST_DIR",
                                        "+../buildSrc/servers/build_tools.sh",
                                        "+```",
                                        "+",
                                        "+After this step, we'll have `/tmp/dist/commandlinetools_linux.zip`",
                                        "+which we now need to insert into the Android platform, with some tweaks:",
                                        "+",
                                        "+```ksh",
                                        "+cd $ANDROID_SRC/prebuilts/cmdline-tools/",
                                        "+git rm -rf tools",
                                        "+unzip /tmp/dist/commandlinetools_linux.zip",
                                        "+mv cmdline-tools tools",
                                        "+git add tools",
                                        "+```",
                                        "+",
                                        "+There is one deliberate change to the tools for platform usage that we need to preserve, so back out any changes to `tools/bin/lint`:",
                                        "+",
                                        "+```ksh",
                                        "+git reset tools/bin/lint && git restore tools/bin/lint",
                                        "+```",
                                        "+",
                                        "+That's it. If you don't have a full Android build environment up and",
                                        "+running (or enough diskspace!) you can upload this to gerrit and have",
                                        "+the presubmit machinery do a test run: git commit, repo upload, and",
                                        "+then mark the CL Presubmit-Ready.",
                                        "+",
                                        "+Here's an example of a trial balloon CL:",
                                        "+ [](https://android-review.googlesource.com/c/platform/prebuilts/cmdline-tools/+/1769725)",
                                        "+",
                                        "+And here's a sample CL of a real lint upgrade which shows some of the",
                                        "+other CLs in the topic that were necessary -- updating baselines etc:",
                                        "+",
                                        "+[](https://android-review.googlesource.com/c/platform/prebuilts/cmdline-tools/+/1746780)",
                                        "+",
                                        "+If you **do** have an Android build environment, which is helpful if",
                                        "+you actually need to debug to figure out why something is going on, run",
                                        "+the following target to check lint:",
                                        "+",
                                        "+```ksh",
                                        "+m lint-check",
                                        "+```",
                                        "+",
                                        "+As usual you'll want to run `. build/envsetup.sh` and `lunch sdk-eng`",
                                        "+first.",
                                        "+",
                                        "+If there's a failure, you can look at `out/error.log` where you'll find",
                                        "+something like this:",
                                        "+",
                                        "+```",
                                        "+...",
                                        "+The failing command was run inside an sbox sandbox in temporary directory",
                                        "+out/soong/.temp/sbox/aaa65d9ed8eca15675a35eeb74818d9864690068",
                                        "+The failing command line was:",
                                        "+rm -rf ./out/srcjars && mkdir -p ./out/srcjars && ./tools/out/bin/zipsync -d ./out/srcjars -l ./out/srcjars/list -f \"*.java\" ./out/.intermediates/packages/modules/Permission/PermissionController/PermissionController/android_common_GooglePermissionController_apex30/gen/proto/proto0.srcjar ./out/.intermediates/packages/modules/Permission/PermissionController/PermissionController/android_common_GooglePermissionController_apex30/gen/android/R.srcjar ./out/.intermediates/packages/modules/Permission/PermissionController/PermissionController/android_common_GooglePermissionController_apex30/kapt/kapt-sources.jar",
                                        "+...truncated...",
                                        "+```",
                                        "+",
                                        "+Note that the real lint command is prefixed by a few other commands on",
                                        "+the same line so search forwards through `&&` until you get to the line",
                                        "+which starts with `JAVA_OPTS=` (and lop off the rest after the next",
                                        "+`&&` or '||').",
                                        "+",
                                        "+Here's a typical invocation that we're left with:",
                                        "+",
                                        "+```",
                                        "+JAVA_OPTS=\"-Xmx3072m --add-opens java.base/java.util=ALL-UNNAMED\"",
                                        "+ANDROID_SDK_HOME=out/soong/.intermediates/packages/modules/Permission/Pe",
                                        "+rmissionController/PermissionController/android_common/lint/home",
                                        "+SDK_ANNOTATIONS=./out/lint/annotations.zip",
                                        "+LINT_OPTS=-DLINT_API_DATABASE=./out/lint/api_versions.xml",
                                        "+./tools/out/bin/lint --quiet --project ./out/project.xml --config",
                                        "+./out/lint.xml --html ./out/lint-report.html --text",
                                        "+./out/lint-report.txt --xml ./out/lint-report.xml --compile-sdk-version",
                                        "+T --java-language-level 1.9 --kotlin-language-level 1.3 --url",
                                        "+.=.,out/soong=out --exitcode",
                                        "+```",
                                        "+",
                                        "+This means that you can `cd` to the sandbox directory and rerun the",
                                        "+given command to repeat just the failing lint invocation, adding some",
                                        "+debugging flags and attaching with a debugger as necessary.",
                                        "+",
                                        "+You can also convert this to a runconfig in IntelliJ for running the",
                                        "+lint Main class with the right pwd, environment variables and arguments",
                                        "+inside the IDE.",
                                        "+",
                                        "+### New Check Fails",
                                        "+",
                                        "+The platform obviously isn't a real Android app, and some of the checks",
                                        "+which apply for apps (such as flagging an import of `android.R` as",
                                        "+suspicious) do not apply in platform code.",
                                        "+",
                                        "+If you've added a new lint check and it's finding false positives in",
                                        "+the platform, you may consider just adding it to the exclude list in",
                                        "+`build/soong/java/lint_defaults.txt`.",
                                        "+",
                                        "+## Other Projects",
                                        "+",
                                        "+For other projects built with Gradle, you can add a property in your",
                                        "+root `gradle.properties` to redirect AGP to use your custom version of",
                                        "+lint instead. This is described in more detail in",
                                        "+[](../usage/newer-lint.md.html).",
                                        "+",
                                        "+<!-- Markdeep: --><style class=\"fallback\">body{visibility:hidden;white-space:pre;font-family:monospace}</style><script src=\"markdeep.min.js\" charset=\"utf-8\"></script><script src=\"https://morgan3d.github.io/markdeep/latest/markdeep.min.js\" charset=\"utf-8\"></script><script>window.alreadyProcessedMarkdeep||(document.body.style.visibility=\"visible\")</script>",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "docs/usage/agp-dsl.md.html",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " ",
                                        " The `com.android.lint` plugin is the \u201cstandalone\u201d lint Gradle plugin",
                                        " which can be applied to any Kotlin or Java Gradle project. To configure",
                                        "-this project, use a `lintOptions` block to configure it, like this:",
                                        "+this project, use a `lint` block to configure it, like this:",
                                        " ",
                                        " ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~groovy",
                                        " apply plugin: 'kotlin'",
                                        " apply plugin: 'com.android.lint'",
                                        " ",
                                        "-lintOptions {",
                                        "-    htmlOutput file(\"lint-report.html\")",
                                        "-    textReport true",
                                        "+lint {",
                                        "+    htmlOutput = file(\"lint-report.html\")",
                                        "+    textReport = true",
                                        " }",
                                        " ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                        " ",
                                        "+!!! Tip",
                                        "+   The lint options block was called `lintOptions` until 7.0. You can",
                                        "+   still refer to it as `lintOptions`, but this was cleaned up as part",
                                        "+   of the Android Gradle Plugin's overhaul of its DSL in 7.0. Another",
                                        "+   7.0 change is that the `lint` task no longer runs lint on all",
                                        "+   variants, but just the default variant -- so you no longer have to",
                                        "+   run `:app:lintDebug` for example -- you can simply run `:app:lint`.",
                                        "+",
                                        " The `com.android.library` and `com.android.application` plugins for",
                                        " Android development bundles in the lint support. They register a lint",
                                        " task for each variant, as well as a task named `lint` which runs the",
                                        " default variant's lint task.",
                                        " ",
                                        "-To configure lint for Android, place the `lintOptions` block within the",
                                        "+To configure lint for Android, place the `lint` block within the",
                                        " `android` block:",
                                        " ",
                                        " ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~groovy",
                                        " android {",
                                        "-    lintOptions {",
                                        "-        htmlOutput file(\"lint-report.html\")",
                                        "-        textReport true",
                                        "+    lint {",
                                        "+        htmlOutput = file(\"lint-report.html\")",
                                        "+        textReport = true",
                                        "     }",
                                        " }",
                                        " ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
                                    ],
                                    [
                                        "   in isolation would not be able to identify this problem. It also",
                                        "   gives you a single cumulative report for the entire project, which is",
                                        "   easier to digest. However, in older versions of lint this led to",
                                        "-  performance problems. *True by default for application modules",
                                        "-  since AGP 7.1.0-alpha04; false by default otherwise.*",
                                        "+  performance problems. *False by default, but will soon switch to true",
                                        "+  by default.*",
                                        " ",
                                        " ## Other",
                                        " ",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "docs/usage/changes.md.html",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " ",
                                        " **7.1**",
                                        " ",
                                        "+* The various annotation-based checks now perform additional checks for",
                                        "+  overloaded Kotlin operators, as well as additional scenarios where",
                                        "+  the annotation is inherited from outer classes, super methods, and in",
                                        "+  the case of fields, containing classes and packages (this was already",
                                        "+  the case for methods). This may show up as new violations in your",
                                        "+  codebase, such as the `VisibleForTests` check flagging additional",
                                        "+  usages of test-only APIs outside of tests.",
                                        "+",
                                        " * New built-in lint checks:",
                                        " ",
                                        "   Issue ID                         | Summary",
                                        "   ---------------------------------|-----------------------------------",
                                        "   `FileEndsWithExt`                | Flags suspicious usages of File.endsWith(extension)",
                                        "+  `DataExtractionRules`            | Missing data extraction rules",
                                        " ",
                                        " * Updated lint checks:",
                                        " "
                                    ],
                                    [
                                        "   ---------------------|--------------------------",
                                        "   `MissingTranslation` | Now checks for missing translations of plurals",
                                        "   `WrongConstant`      | Now has quickfixes to replace with constants",
                                        "-",
                                        "-* The `com.android.application` Gradle plugin now sets",
                                        "-  `checkDependencies` to true by default. This means that when lint",
                                        "-  runs on an app module, the report will include not only the issues",
                                        "-  found in that module but also the issues found in its library",
                                        "-  dependencies. This means that you can run `./gradlew :app:lint` and",
                                        "-  see a single report instead of having to navigate to the individual",
                                        "-  reports for each of the included libraries. It also makes the",
                                        "-  analysis more accurate; for example, unused resources only make",
                                        "-  sense with checkDependencies on, such that lint can consider",
                                        "-  resource declarations and usages across module boundaries.",
                                        "-",
                                        "-  With this change, if your project consists of a number of libraries",
                                        "-  and a consuming app module, consider running just",
                                        "-  `./gradle :app:lint` instead of `./gradlew lint`.",
                                        "+  `CheckResult`        | Now also runs in unit tests",
                                        " ",
                                        " **7.0**",
                                        " "
                                    ],
                                    [
                                        "   lint task instead of running it across all variants and accumulating",
                                        "   results. This is much faster, is usually what you want, and now the",
                                        "   target name will not change based on whether the project has product",
                                        "-  flavors, so you can start just running `./gradlew :app:lint` instead",
                                        "+  flavors, so you can start just running `./gradlew:app:lint` instead",
                                        "   of `./gradlew :app:lintDebug` or `:app:lintProDebug` etc.",
                                        "+  Furthermore, the `lintOptions` block is now just named `lint`",
                                        "+  instead.",
                                        " ",
                                        " * Lint \u201cpartial analysis\u201d mode is now integrated in lint. It is",
                                        "   enabled by default, but you can disable it by modifying",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "docs/usage/performance-tuning.md.html",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " memory given to the Gradle daemon significantly to see if it helps",
                                        " bring down the overall analysis time.",
                                        " ",
                                        "-This is *especially* important if your build happens to run many lint",
                                        "-jobs in parallel! I've seen various thread dumps from users asking",
                                        "+This is *especially* important if you happen to run many lint jobs in",
                                        "+parallel! If you follow the advice above (where you're running a single",
                                        "+lint job with recursive dependencies on the app module) this is less",
                                        "+likely to happen, but I've seen various thread dumps from users asking",
                                        " about performance where there was 16-20 concurrent separate lint jobs",
                                        " running in the Gradle daemon, and each one requires a lot of memory;",
                                        " these separate lint job threads are not sharing data."
                                    ],
                                    [
                                        "    The main use for this tool is to find extreme or unusual performance",
                                        "    behaviors.",
                                        " ",
                                        "-<!-- Markdeep: --><style class=\"fallback\">body{visibility:hidden;white-space:pre;font-family:monospace}</style><script src=\"markdeep.min.js\" charset=\"utf-8\"></script><script src=\"https://morgan3d.github.io/markdeep/latest/markdeep.min.js\" charset=\"utf-8\"></script><script>window.alreadyProcessedMarkdeep||(document.body.style.visibility=\"visible\")</script>",
                                        "+<!-- Markdeep: --><style class=\"fallback\">body{visibility:hidden;white-space:pre;font-family:monospace}</style><script src=\"markdeep.min.js\" charset=\"utf-8\"></script><script src=\"https://morgan3d.github.io/markdeep/latest/markdeep.min.js\" charset=\"utf-8\"></script><script>window.alreadyProcessedMarkdeep||(document.body.style.visibility=\"visible\")</script>",
                                        "\\ No newline at end of file",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "docs/user-guide.html",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " </p><p>",
                                        " ",
                                        " </p><ul>",
                                        "+<li class=\"asterisk\">The various annotation-based checks now perform additional checks for",
                                        "+  overloaded Kotlin operators, as well as additional scenarios where",
                                        "+  the annotation is inherited from outer classes, super methods, and in",
                                        "+  the case of fields, containing classes and packages (this was already",
                                        "+  the case for methods). This may show up as new violations in your",
                                        "+  codebase, such as the <code>VisibleForTests</code> check flagging additional",
                                        "+  usages of test-only APIs outside of tests.",
                                        "+",
                                        "+<p></p><p>",
                                        "+",
                                        "+</p></li>",
                                        " <li class=\"asterisk\">New built-in lint checks:</li></ul>",
                                        " ",
                                        " <p></p><p>",
                                        " ",
                                        " </p><div class=\"table\"><table class=\"table\"><tbody><tr><th style=\"text-align:left\"> Issue ID </th><th style=\"text-align:left\"> Summary </th></tr>",
                                        " <tr><td style=\"text-align:left\"> <code>FileEndsWithExt</code> </td><td style=\"text-align:left\"> Flags suspicious usages of File.endsWith(extension) </td></tr>",
                                        "+<tr><td style=\"text-align:left\"> <code>DataExtractionRules</code> </td><td style=\"text-align:left\"> Missing data extraction rules </td></tr>",
                                        " </tbody></table></div>",
                                        " ",
                                        " <p></p><p>"
                                    ],
                                    [
                                        " </p><div class=\"table\"><table class=\"table\"><tbody><tr><th style=\"text-align:left\"> Issue ID </th><th style=\"text-align:left\"> Summary </th></tr>",
                                        " <tr><td style=\"text-align:left\"> <code>MissingTranslation</code> </td><td style=\"text-align:left\"> Now checks for missing translations of plurals </td></tr>",
                                        " <tr><td style=\"text-align:left\"> <code>WrongConstant</code> </td><td style=\"text-align:left\"> Now has quickfixes to replace with constants </td></tr>",
                                        "+<tr><td style=\"text-align:left\"> <code>CheckResult</code> </td><td style=\"text-align:left\"> Now also runs in unit tests </td></tr>",
                                        " </tbody></table></div>",
                                        " ",
                                        " <p></p><p>",
                                        " ",
                                        "-</p><ul>",
                                        "-<li class=\"asterisk\">The <code>com.android.application</code> Gradle plugin now sets",
                                        "-  <code>checkDependencies</code> to true by default. This means that when lint",
                                        "-  runs on an app module, the report will include not only the issues",
                                        "-  found in that module but also the issues found in its library",
                                        "-  dependencies. This means that you can run <code>./gradlew :app:lint</code> and",
                                        "-  see a single report instead of having to navigate to the individual",
                                        "-  reports for each of the included libraries. It also makes the",
                                        "-  analysis more accurate; for example, unused resources only make",
                                        "-  sense with checkDependencies on, such that lint can consider",
                                        "-  resource declarations and usages across module boundaries.",
                                        "-",
                                        "-<p></p><p>",
                                        "-",
                                        "-  With this change, if your project consists of a number of libraries",
                                        "-  and a consuming app module, consider running just",
                                        "-  <code>./gradle :app:lint</code> instead of <code>./gradlew lint</code>.</p></li></ul>",
                                        "-",
                                        "-<p></p><p>",
                                        "-",
                                        " <strong class=\"asterisk\">7.0</strong>",
                                        " ",
                                        " </p><p>"
                                    ],
                                    [
                                        "   lint task instead of running it across all variants and accumulating",
                                        "   results. This is much faster, is usually what you want, and now the",
                                        "   target name will not change based on whether the project has product",
                                        "-  flavors, so you can start just running <code>./gradlew :app:lint</code> instead",
                                        "+  flavors, so you can start just running <code>./gradlew:app:lint</code> instead",
                                        "   of <code>./gradlew :app:lintDebug</code> or <code>:app:lintProDebug</code> etc.",
                                        "+  Furthermore, the <code>lintOptions</code> block is now just named <code>lint</code>",
                                        "+  instead.",
                                        " ",
                                        " <p></p><p>",
                                        " "
                                    ],
                                    [
                                        " ",
                                        " The <code>com.android.lint</code> plugin is the \u201cstandalone\u201d lint Gradle plugin",
                                        " which can be applied to any Kotlin or Java Gradle project. To configure",
                                        "-this project, use a <code>lintOptions</code> block to configure it, like this:",
                                        "+this project, use a <code>lint</code> block to configure it, like this:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">apply plugin: 'kotlin'</span>",
                                        "-<span class=\"line\">apply plugin: 'com.android.lint'</span>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>apply plugin: 'kotlin'",
                                        "+<span class=\"line\"></span>apply plugin: 'com.android.lint'",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\">lintOptions {</span>",
                                        "-<span class=\"line\">    htmlOutput file(\"lint-report.html\")</span>",
                                        "-<span class=\"line\">    textReport true</span>",
                                        "-<span class=\"line\">}</span></code></pre><p>",
                                        "+<span class=\"line\"></span>lint {",
                                        "+<span class=\"line\"></span>    htmlOutput = file(\"lint-report.html\")",
                                        "+<span class=\"line\"></span>    textReport = true",
                                        "+<span class=\"line\"></span>}</code></pre><p>",
                                        "+",
                                        "+",
                                        "+",
                                        "+</p><div class=\"admonition tip\">The lint options block was called <code>lintOptions</code> until 7.0. You can",
                                        "+   still refer to it as <code>lintOptions</code>, but this was cleaned up as part",
                                        "+   of the Android Gradle Plugin's overhaul of its DSL in 7.0. Another",
                                        "+   7.0 change is that the <code>lint</code> task no longer runs lint on all",
                                        "+   variants, but just the default variant \u2014 so you no longer have to",
                                        "+   run <code>:app:lintDebug</code> for example \u2014 you can simply run <code>:app:lint</code>.</div>",
                                        "+",
                                        "+<p></p><p>",
                                        " ",
                                        " The <code>com.android.library</code> and <code>com.android.application</code> plugins for",
                                        " Android development bundles in the lint support. They register a lint"
                                    ],
                                    [
                                        " ",
                                        " </p><p>",
                                        " ",
                                        "-To configure lint for Android, place the <code>lintOptions</code> block within the",
                                        "+To configure lint for Android, place the <code>lint</code> block within the",
                                        " <code>android</code> block:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">android {</span>",
                                        "-<span class=\"line\">    lintOptions {</span>",
                                        "-<span class=\"line\">        htmlOutput file(\"lint-report.html\")</span>",
                                        "-<span class=\"line\">        textReport true</span>",
                                        "-<span class=\"line\">    }</span>",
                                        "-<span class=\"line\">}</span></code></pre>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>android {",
                                        "+<span class=\"line\"></span>    lint {",
                                        "+<span class=\"line\"></span>        htmlOutput = file(\"lint-report.html\")",
                                        "+<span class=\"line\"></span>        textReport = true",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>}</code></pre>",
                                        " <a class=\"target\" name=\"configuringissuesandseverity\">&nbsp;</a><a class=\"target\" name=\"lintgradleplugindsl/configuringissuesandseverity\">&nbsp;</a><a class=\"target\" name=\"toc2.1\">&nbsp;</a><h2>Configuring Issues and Severity</h2>",
                                        " <p>",
                                        " "
                                    ],
                                    [
                                        "   in isolation would not be able to identify this problem. It also",
                                        "   gives you a single cumulative report for the entire project, which is",
                                        "   easier to digest. However, in older versions of lint this led to",
                                        "-  performance problems. <em class=\"asterisk\">True by default for application modules",
                                        "-  since AGP 7.1.0-alpha04; false by default otherwise.</em>",
                                        "+  performance problems. <em class=\"asterisk\">False by default, but will soon switch to true",
                                        "+  by default.</em>",
                                        " ",
                                        " </p></dd></dl><p></p>",
                                        " <a class=\"target\" name=\"other\">&nbsp;</a><a class=\"target\" name=\"lintgradleplugindsl/other\">&nbsp;</a><a class=\"target\" name=\"toc2.4\">&nbsp;</a><h2>Other</h2>"
                                    ],
                                    [
                                        " ",
                                        " In <code>gradle.properties</code>, add a property declaration like this:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">android.experimental.lint.version = 7.1.0-beta01</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>android.experimental.lint.version = 7.1.0-beta01</code></pre><p>",
                                        " ",
                                        " ",
                                        " "
                                    ],
                                    [
                                        " <code>gradle.properties</code> file and warn you if there is a newer version of",
                                        " lint available than the one you're pointing to:",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\">gradle.properties:2: Warning: Newer version of lint available: 7.1.0-alpha04 [GradleDependency]</span>",
                                        "-<span class=\"line\">android.experimental.lint.version = 7.0.0-rc01</span>",
                                        "-<span class=\"line\">                                    ~~~~~~~~~~~~~</span>",
                                        "-<span class=\"line\">0 errors, 1 warnings</span></code></pre><p>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span>gradle.properties:2: Warning: Newer version of lint available: 7.1.0-alpha04 [GradleDependency]",
                                        "+<span class=\"line\"></span>android.experimental.lint.version = 7.0.0-rc01",
                                        "+<span class=\"line\"></span>                                    ~~~~~~~~~~~~~",
                                        "+<span class=\"line\"></span>0 errors, 1 warnings</code></pre><p>",
                                        " ",
                                        " There is also a quickfix in the IDE to perform this update.",
                                        " "
                                    ],
                                    [
                                        " yourself to stable versions, such as 8.0.0 while still building with",
                                        " 7.0.0, you can suppress the warning like this:",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">#noinspection GradleDependency</span>",
                                        "-<span class=\"line\">android.experimental.lint.version=8.0.0</span></code></pre>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>#noinspection GradleDependency",
                                        "+<span class=\"line\"></span>android.experimental.lint.version=8.0.0</code></pre>",
                                        " <a class=\"target\" name=\"baselines\">&nbsp;</a><a class=\"target\" name=\"baselines\">&nbsp;</a><a class=\"target\" name=\"toc4\">&nbsp;</a><h1>Baselines</h1>",
                                        " ",
                                        " <a class=\"target\" name=\"creatingabaseline\">&nbsp;</a><a class=\"target\" name=\"creatingabaseline\">&nbsp;</a><a class=\"target\" name=\"toc5\">&nbsp;</a><h1>Creating a Baseline</h1>"
                                    ],
                                    [
                                        " To create a baseline snapshot, modify your project's <code>build.gradle</code>``",
                                        " file as follows.",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">android {</span>",
                                        "-<span class=\"line\">  lintOptions {</span>",
                                        "-<span class=\"line\">    baseline file(<span class=\"hljs-string\">\"lint-baseline.xml\"</span>)</span>",
                                        "-<span class=\"line\">  }</span>",
                                        "-<span class=\"line\">}</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>android {",
                                        "+<span class=\"line\"></span>  lintOptions {",
                                        "+<span class=\"line\"></span>    baseline file(<span class=\"hljs-string\">\"lint-baseline.xml\"</span>)",
                                        "+<span class=\"line\"></span>  }",
                                        "+<span class=\"line\"></span>}</code></pre><p>",
                                        " ",
                                        " When you first add this line, the <code>lint-baseline.xml</code> file is",
                                        " created to establish your baseline. From then on, the tools only"
                                    ],
                                    [
                                        " lint-baseline.xml file. The file location for your setup might be",
                                        " different from what is shown here.",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\">    $ ./gradlew lintDebug</span>",
                                        "-<span class=\"line\">    ...</span>",
                                        "-<span class=\"line\">    Wrote XML report to file:///app/lint-baseline.xml</span>",
                                        "-<span class=\"line\">    Created baseline file /app/lint-baseline.xml</span></code></pre><p>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span>    $ ./gradlew lintDebug",
                                        "+<span class=\"line\"></span>    ...",
                                        "+<span class=\"line\"></span>    Wrote XML report to file:///app/lint-baseline.xml",
                                        "+<span class=\"line\"></span>    Created baseline file /app/lint-baseline.xml</code></pre><p>",
                                        " ",
                                        " Running lint records all of the current issues in the",
                                        " <code>lint-baseline.xml</code> file. The set of current issues is called the"
                                    ],
                                    [
                                        " them, you can specify the issues to add by editing your project's",
                                        " build.gradle, as follows.",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\">android {</span>",
                                        "-<span class=\"line\">  lintOptions {</span>",
                                        "-<span class=\"line\">    check <span class=\"hljs-string\">'NewApi'</span>, <span class=\"hljs-string\">'HandlerLeak'</span></span>",
                                        "-<span class=\"line\">    baseline file(<span class=\"hljs-string\">\"lint-baseline.xml\"</span>)</span>",
                                        "-<span class=\"line\">  }</span>",
                                        "-<span class=\"line\">}</span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span>android {",
                                        "+<span class=\"line\"></span>  lintOptions {",
                                        "+<span class=\"line\"></span>    check <span class=\"hljs-string\">'NewApi'</span>, <span class=\"hljs-string\">'HandlerLeak'</span>",
                                        "+<span class=\"line\"></span>    baseline file(<span class=\"hljs-string\">\"lint-baseline.xml\"</span>)",
                                        "+<span class=\"line\"></span>  }",
                                        "+<span class=\"line\"></span>}</code></pre><p>",
                                        " ",
                                        " After you create the baseline, if you add any new warnings to the",
                                        " codebase, lint lists only the newly introduced bugs."
                                    ],
                                    [
                                        " ",
                                        " To do this, first add this to your app module's build.gradle file:",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\"><span class=\"hljs-string\">android</span> {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-string\">...</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-string\">lintOptions</span> {</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-string\">...</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-string\">checkDependencies</span> <span class=\"hljs-literal\">true</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-string\">...</span></span>",
                                        "-<span class=\"line\">    }</span>",
                                        "-<span class=\"line\">}</span></code></pre><p>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span><span class=\"hljs-string\">android</span> {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-string\">...</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-string\">lintOptions</span> {",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-string\">...</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-string\">checkDependencies</span> <span class=\"hljs-literal\">true</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-string\">...</span>",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>}</code></pre><p>",
                                        " ",
                                        " Then instead of running <code>./gradlew lintDebug</code>, run <code>./gradlew",
                                        " :app:lintDebug</code>."
                                    ],
                                    [
                                        " faster since (for well tested code) this can help skip a lot of code",
                                        " analysis and type resolution:",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\"><span class=\"hljs-string\">android</span> {</span>",
                                        "-<span class=\"line\">    <span class=\"hljs-string\">...</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-string\">lintOptions</span> {</span>",
                                        "-<span class=\"line\">        <span class=\"hljs-string\">...</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-string\">ignoreTestSources</span> <span class=\"hljs-literal\">true</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-string\">...</span></span>",
                                        "-<span class=\"line\">    }</span>",
                                        "-<span class=\"line\">}</span></code></pre>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span><span class=\"hljs-string\">android</span> {",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-string\">...</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-string\">lintOptions</span> {",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-string\">...</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-string\">ignoreTestSources</span> <span class=\"hljs-literal\">true</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-string\">...</span>",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>}</code></pre>",
                                        " <a class=\"target\" name=\"don'tusecheckallwarnings\">&nbsp;</a><a class=\"target\" name=\"performancetuning/don'tusecheckallwarnings\">&nbsp;</a><a class=\"target\" name=\"toc6.5\">&nbsp;</a><h2>Don't use checkAllWarnings</h2>",
                                        " <p>",
                                        " "
                                    ],
                                    [
                                        " ",
                                        " </p><p>",
                                        " ",
                                        "-This is <em class=\"asterisk\">especially</em> important if your build happens to run many lint",
                                        "-jobs in parallel! I've seen various thread dumps from users asking",
                                        "+This is <em class=\"asterisk\">especially</em> important if you happen to run many lint jobs in",
                                        "+parallel! If you follow the advice above (where you're running a single",
                                        "+lint job with recursive dependencies on the app module) this is less",
                                        "+likely to happen, but I've seen various thread dumps from users asking",
                                        " about performance where there was 16-20 concurrent separate lint jobs",
                                        " running in the Gradle daemon, and each one requires a lot of memory;",
                                        " these separate lint job threads are not sharing data."
                                    ],
                                    [
                                        " than expected, we run this tool to see if any of the lint checks",
                                        " are misbehaving. Here's some sample output:",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\"><span class=\"hljs-string\">$</span> <span class=\"hljs-string\">./gradlew</span> <span class=\"hljs-string\">lintDebug</span> <span class=\"hljs-string\">-no-daemon</span> <span class=\"hljs-string\">-Dorg.gradle.jvmargs=\"...\"</span></span>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span><span class=\"hljs-string\">$</span> <span class=\"hljs-string\">./gradlew</span> <span class=\"hljs-string\">lintDebug</span> <span class=\"hljs-string\">-no-daemon</span> <span class=\"hljs-string\">-Dorg.gradle.jvmargs=\"...\"</span>",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-string\">BUILD</span> <span class=\"hljs-string\">SUCCESSFUL</span> <span class=\"hljs-string\">in</span> <span class=\"hljs-string\">10s</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-attr\">15 actionable tasks:</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-string\">executed,</span> <span class=\"hljs-number\">14</span> <span class=\"hljs-string\">up-to-date</span></span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-string\">BUILD</span> <span class=\"hljs-string\">SUCCESSFUL</span> <span class=\"hljs-string\">in</span> <span class=\"hljs-string\">10s</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-attr\">15 actionable tasks:</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-string\">executed,</span> <span class=\"hljs-number\">14</span> <span class=\"hljs-string\">up-to-date</span>",
                                        " <span class=\"line\"></span>",
                                        "-<span class=\"line\"><span class=\"hljs-attr\">Lint detector performance stats:</span></span>",
                                        "-<span class=\"line\">                                     <span class=\"hljs-string\">total</span>           <span class=\"hljs-string\">self</span>          <span class=\"hljs-string\">calls</span></span>",
                                        "-<span class=\"line\">                 <span class=\"hljs-string\">LintDriver</span>        <span class=\"hljs-number\">3709 </span><span class=\"hljs-string\">ms</span>        <span class=\"hljs-number\">1302 </span><span class=\"hljs-string\">ms</span>           <span class=\"hljs-number\">2821</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-string\">TopDownAnalyzerFacadeForJVM</span>        <span class=\"hljs-number\">2121 </span><span class=\"hljs-string\">ms</span>        <span class=\"hljs-number\">2121 </span><span class=\"hljs-string\">ms</span>              <span class=\"hljs-number\">6</span></span>",
                                        "-<span class=\"line\">               <span class=\"hljs-string\">IconDetector</span>          <span class=\"hljs-number\">81</span> <span class=\"hljs-string\">ms</span>          <span class=\"hljs-number\">81</span> <span class=\"hljs-string\">ms</span>            <span class=\"hljs-number\">257</span></span>",
                                        "-<span class=\"line\">           <span class=\"hljs-string\">OverdrawDetector</span>          <span class=\"hljs-number\">51</span> <span class=\"hljs-string\">ms</span>          <span class=\"hljs-number\">51</span> <span class=\"hljs-string\">ms</span>             <span class=\"hljs-number\">36</span></span>",
                                        "-<span class=\"line\">     <span class=\"hljs-string\">InvalidPackageDetector</span>          <span class=\"hljs-number\">34</span> <span class=\"hljs-string\">ms</span>          <span class=\"hljs-number\">34</span> <span class=\"hljs-string\">ms</span>          <span class=\"hljs-number\">51744</span></span>",
                                        "-<span class=\"line\">             <span class=\"hljs-string\">GradleDetector</span>          <span class=\"hljs-number\">20</span> <span class=\"hljs-string\">ms</span>          <span class=\"hljs-number\">20</span> <span class=\"hljs-string\">ms</span>             <span class=\"hljs-number\">94</span></span>",
                                        "-<span class=\"line\">       <span class=\"hljs-string\">LocaleFolderDetector</span>          <span class=\"hljs-number\">11</span> <span class=\"hljs-string\">ms</span>          <span class=\"hljs-number\">11</span> <span class=\"hljs-string\">ms</span>            <span class=\"hljs-number\">986</span></span>",
                                        "-<span class=\"line\">         <span class=\"hljs-string\">RestrictToDetector</span>          <span class=\"hljs-number\">11</span> <span class=\"hljs-string\">ms</span>          <span class=\"hljs-number\">11</span> <span class=\"hljs-string\">ms</span>             <span class=\"hljs-number\">19</span></span>",
                                        "-<span class=\"line\">                <span class=\"hljs-string\">ApiDetector</span>          <span class=\"hljs-number\">11</span> <span class=\"hljs-string\">ms</span>          <span class=\"hljs-number\">11</span> <span class=\"hljs-string\">ms</span>           <span class=\"hljs-number\">1255</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-string\">PrivateResourceDetector</span>          <span class=\"hljs-number\">10</span> <span class=\"hljs-string\">ms</span>          <span class=\"hljs-number\">10</span> <span class=\"hljs-string\">ms</span>            <span class=\"hljs-number\">422</span></span>",
                                        "-<span class=\"line\">                      [<span class=\"hljs-string\">...</span>]</span></code></pre><p>",
                                        "+<span class=\"line\"></span><span class=\"hljs-attr\">Lint detector performance stats:</span>",
                                        "+<span class=\"line\"></span>                                     <span class=\"hljs-string\">total</span>           <span class=\"hljs-string\">self</span>          <span class=\"hljs-string\">calls</span>",
                                        "+<span class=\"line\"></span>                 <span class=\"hljs-string\">LintDriver</span>        <span class=\"hljs-number\">3709 </span><span class=\"hljs-string\">ms</span>        <span class=\"hljs-number\">1302 </span><span class=\"hljs-string\">ms</span>           <span class=\"hljs-number\">2821</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-string\">TopDownAnalyzerFacadeForJVM</span>        <span class=\"hljs-number\">2121 </span><span class=\"hljs-string\">ms</span>        <span class=\"hljs-number\">2121 </span><span class=\"hljs-string\">ms</span>              <span class=\"hljs-number\">6</span>",
                                        "+<span class=\"line\"></span>               <span class=\"hljs-string\">IconDetector</span>          <span class=\"hljs-number\">81</span> <span class=\"hljs-string\">ms</span>          <span class=\"hljs-number\">81</span> <span class=\"hljs-string\">ms</span>            <span class=\"hljs-number\">257</span>",
                                        "+<span class=\"line\"></span>           <span class=\"hljs-string\">OverdrawDetector</span>          <span class=\"hljs-number\">51</span> <span class=\"hljs-string\">ms</span>          <span class=\"hljs-number\">51</span> <span class=\"hljs-string\">ms</span>             <span class=\"hljs-number\">36</span>",
                                        "+<span class=\"line\"></span>     <span class=\"hljs-string\">InvalidPackageDetector</span>          <span class=\"hljs-number\">34</span> <span class=\"hljs-string\">ms</span>          <span class=\"hljs-number\">34</span> <span class=\"hljs-string\">ms</span>          <span class=\"hljs-number\">51744</span>",
                                        "+<span class=\"line\"></span>             <span class=\"hljs-string\">GradleDetector</span>          <span class=\"hljs-number\">20</span> <span class=\"hljs-string\">ms</span>          <span class=\"hljs-number\">20</span> <span class=\"hljs-string\">ms</span>             <span class=\"hljs-number\">94</span>",
                                        "+<span class=\"line\"></span>       <span class=\"hljs-string\">LocaleFolderDetector</span>          <span class=\"hljs-number\">11</span> <span class=\"hljs-string\">ms</span>          <span class=\"hljs-number\">11</span> <span class=\"hljs-string\">ms</span>            <span class=\"hljs-number\">986</span>",
                                        "+<span class=\"line\"></span>         <span class=\"hljs-string\">RestrictToDetector</span>          <span class=\"hljs-number\">11</span> <span class=\"hljs-string\">ms</span>          <span class=\"hljs-number\">11</span> <span class=\"hljs-string\">ms</span>             <span class=\"hljs-number\">19</span>",
                                        "+<span class=\"line\"></span>                <span class=\"hljs-string\">ApiDetector</span>          <span class=\"hljs-number\">11</span> <span class=\"hljs-string\">ms</span>          <span class=\"hljs-number\">11</span> <span class=\"hljs-string\">ms</span>           <span class=\"hljs-number\">1255</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-string\">PrivateResourceDetector</span>          <span class=\"hljs-number\">10</span> <span class=\"hljs-string\">ms</span>          <span class=\"hljs-number\">10</span> <span class=\"hljs-string\">ms</span>            <span class=\"hljs-number\">422</span>",
                                        "+<span class=\"line\"></span>                      [<span class=\"hljs-string\">...</span>]</code></pre><p>",
                                        " Here you can see that <code>InvalidPackageDetector</code> is taking up an",
                                        " unreasonable amount of time. And this is actually real output from an",
                                        " earlier version of lint where we tracked down a real problem in that"
                                    ],
                                    [
                                        " To suppress a lint warning in a <code>build.gradle</code> file, add a",
                                        " section like this:",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\">android {</span>",
                                        "-<span class=\"line\">    lintOptions {</span>",
                                        "-<span class=\"line\">        disable 'TypographyFractions','TypographyQuotes'</span>",
                                        "-<span class=\"line\">    }</span>",
                                        "-<span class=\"line\">}</span></code></pre><p>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span>android {",
                                        "+<span class=\"line\"></span>    lintOptions {",
                                        "+<span class=\"line\"></span>        disable 'TypographyFractions','TypographyQuotes'",
                                        "+<span class=\"line\"></span>    }",
                                        "+<span class=\"line\"></span>}</code></pre><p>",
                                        " ",
                                        " Here we specify a comma separated list of issue id's after the",
                                        " disable command. You can also use <code>warning</code> or <code>error</code> instead"
                                    ],
                                    [
                                        " To suppress lint checks from the command line, pass the",
                                        " <code>--ignore</code> flag with a comma separated list of ids to be suppressed, such as:",
                                        " ",
                                        "-</p><pre class=\"listing backtick\"><code><span class=\"line\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> lint --ignore UnusedResources,UselessLeaf /my/project/path</span></span></code></pre><p>",
                                        "+</p><pre class=\"listing backtick\"><code><span class=\"line\"></span><span class=\"hljs-meta\">$</span><span class=\"bash\"> lint --ignore UnusedResources,UselessLeaf /my/project/path</span></code></pre><p>",
                                        " ",
                                        " For more information, see",
                                        " <a href=\"https://developer.android.com/studio/write/lint.html#config\" class=\"url\">https://developer.android.com/studio/write/lint.html#config</a>"
                                    ],
                                    [
                                        " HTML version of this isn't properly handling empty elements,",
                                        " so if you're going to copy/paste go to the source file.)",
                                        " ",
                                        "-</p><pre class=\"listing tilde\"><code><span class=\"line\"><span class=\"hljs-meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">lint</span> <span class=\"hljs-attr\">lintJars</span>=<span class=\"hljs-string\">\"../checks/local.jar;../checks/custom.jar\"</span>&gt;</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-comment\">&lt;!-- The special id \"all\" matches all issues but is only consulted</span>",
                                        "-<span class=\"line\">         if there is no specific match --&gt;</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">issue</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"all\"</span> <span class=\"hljs-attr\">severity</span>=<span class=\"hljs-string\">\"ignore\"</span> /&gt;</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-comment\">&lt;!-- Possible severities: ignore, information, warning, error, fatal --&gt;</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">issue</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"ValidActionsXml\"</span> <span class=\"hljs-attr\">severity</span>=<span class=\"hljs-string\">\"error\"</span> /&gt;</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">issue</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"ObsoleteLayoutParam\"</span>&gt;</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-comment\">&lt;!-- The &lt;ignore&gt; tag has two possible attributes: path and regexp (see below) --&gt;</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ignore</span> <span class=\"hljs-attr\">path</span>=<span class=\"hljs-string\">\"res/layout-xlarge/activation.xml\"</span> /&gt;</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-comment\">&lt;!-- You can use globbing patterns in the path strings --&gt;</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ignore</span> <span class=\"hljs-attr\">path</span>=<span class=\"hljs-string\">\"**/layout-x*/onclick.xml\"</span> /&gt;</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ignore</span> <span class=\"hljs-attr\">path</span>=<span class=\"hljs-string\">\"res/**/activation.xml\"</span> /&gt;</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">issue</span>&gt;</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">issue</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"NewApi\"</span>&gt;</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-comment\">&lt;!-- You can also ignore via a regular expression, this is not only</span>",
                                        "-<span class=\"line\">            matched against the path but also the error message --&gt;</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ignore</span> <span class=\"hljs-attr\">regexp</span>=<span class=\"hljs-string\">\"st.*gs\"</span> /&gt;</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">issue</span>&gt;</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-comment\">&lt;!-- The \"in\" attribute lets you specify that the element only</span>",
                                        "-<span class=\"line\">         applies in a particular tools, such as gradle, studio, etc; this</span>",
                                        "-<span class=\"line\">         can be a comma separated list --&gt;</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">issue</span> <span class=\"hljs-attr\">in</span>=<span class=\"hljs-string\">\"studio\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"NewerVersionAvailable\"</span> <span class=\"hljs-attr\">severity</span>=<span class=\"hljs-string\">\"error\"</span> /&gt;</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-comment\">&lt;!-- You can also use ! to specify that it does not apply in a tool  --&gt;</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">issue</span> <span class=\"hljs-attr\">in</span>=<span class=\"hljs-string\">\"!gradle\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"TrulyRandom\"</span> <span class=\"hljs-attr\">severity</span>=<span class=\"hljs-string\">\"error\"</span> /&gt;</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">issue</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"UnknownNullness\"</span>&gt;</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-comment\">&lt;!-- For detectors that support it, you can also specify option values --&gt;</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"ignore-deprecated\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"true\"</span> /&gt;</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">issue</span>&gt;</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">issue</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"TooManyViews\"</span>&gt;</span></span>",
                                        "-<span class=\"line\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"maxCount\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"20\"</span> /&gt;</span></span>",
                                        "-<span class=\"line\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">issue</span>&gt;</span></span>",
                                        "-<span class=\"line\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">lint</span>&gt;</span></span></code></pre><p>",
                                        "+</p><pre class=\"listing tilde\"><code><span class=\"line\"></span><span class=\"hljs-meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">lint</span> <span class=\"hljs-attr\">lintJars</span>=<span class=\"hljs-string\">\"../checks/local.jar;../checks/custom.jar\"</span>&gt;</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-comment\">&lt;!-- The special id \"all\" matches all issues but is only consulted",
                                        "+<span class=\"line\"></span>         if there is no specific match --&gt;</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">issue</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"all\"</span> <span class=\"hljs-attr\">severity</span>=<span class=\"hljs-string\">\"ignore\"</span> /&gt;</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-comment\">&lt;!-- Possible severities: ignore, information, warning, error, fatal --&gt;</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">issue</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"ValidActionsXml\"</span> <span class=\"hljs-attr\">severity</span>=<span class=\"hljs-string\">\"error\"</span> /&gt;</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">issue</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"ObsoleteLayoutParam\"</span>&gt;</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-comment\">&lt;!-- The &lt;ignore&gt; tag has two possible attributes: path and regexp (see below) --&gt;</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ignore</span> <span class=\"hljs-attr\">path</span>=<span class=\"hljs-string\">\"res/layout-xlarge/activation.xml\"</span> /&gt;</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-comment\">&lt;!-- You can use globbing patterns in the path strings --&gt;</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ignore</span> <span class=\"hljs-attr\">path</span>=<span class=\"hljs-string\">\"**/layout-x*/onclick.xml\"</span> /&gt;</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ignore</span> <span class=\"hljs-attr\">path</span>=<span class=\"hljs-string\">\"res/**/activation.xml\"</span> /&gt;</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">issue</span>&gt;</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">issue</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"NewApi\"</span>&gt;</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-comment\">&lt;!-- You can also ignore via a regular expression, this is not only",
                                        "+<span class=\"line\"></span>            matched against the path but also the error message --&gt;</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ignore</span> <span class=\"hljs-attr\">regexp</span>=<span class=\"hljs-string\">\"st.*gs\"</span> /&gt;</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">issue</span>&gt;</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-comment\">&lt;!-- The \"in\" attribute lets you specify that the element only",
                                        "+<span class=\"line\"></span>         applies in a particular tools, such as gradle, studio, etc; this",
                                        "+<span class=\"line\"></span>         can be a comma separated list --&gt;</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">issue</span> <span class=\"hljs-attr\">in</span>=<span class=\"hljs-string\">\"studio\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"NewerVersionAvailable\"</span> <span class=\"hljs-attr\">severity</span>=<span class=\"hljs-string\">\"error\"</span> /&gt;</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-comment\">&lt;!-- You can also use ! to specify that it does not apply in a tool  --&gt;</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">issue</span> <span class=\"hljs-attr\">in</span>=<span class=\"hljs-string\">\"!gradle\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"TrulyRandom\"</span> <span class=\"hljs-attr\">severity</span>=<span class=\"hljs-string\">\"error\"</span> /&gt;</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">issue</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"UnknownNullness\"</span>&gt;</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-comment\">&lt;!-- For detectors that support it, you can also specify option values --&gt;</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"ignore-deprecated\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"true\"</span> /&gt;</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">issue</span>&gt;</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">issue</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"TooManyViews\"</span>&gt;</span>",
                                        "+<span class=\"line\"></span>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"maxCount\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"20\"</span> /&gt;</span>",
                                        "+<span class=\"line\"></span>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">issue</span>&gt;</span>",
                                        "+<span class=\"line\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">lint</span>&gt;</span></code></pre><p>",
                                        " ",
                                        " ",
                                        " "
                                    ],
                                    [
                                        " </p><p>",
                                        " ",
                                        " </p><ul>",
                                        "+<li class=\"asterisk\">The various annotation-based checks now perform additional checks for",
                                        "+  overloaded Kotlin operators, as well as additional scenarios where",
                                        "+  the annotation is inherited from outer classes, super methods, and in",
                                        "+  the case of fields, containing classes and packages (this was already",
                                        "+  the case for methods). This may show up as new violations in your",
                                        "+  codebase, such as the <code>VisibleForTests</code> check flagging additional",
                                        "+  usages of test-only APIs outside of tests.",
                                        "+",
                                        "+<p></p><p>",
                                        "+",
                                        "+</p></li>",
                                        " <li class=\"asterisk\">New built-in lint checks:</li></ul>",
                                        " ",
                                        " <p></p><p>",
                                        " ",
                                        " </p><div class=\"table\"><table class=\"table\"><tbody><tr><th style=\"text-align:left\"> Issue ID </th><th style=\"text-align:left\"> Summary </th></tr>",
                                        " <tr><td style=\"text-align:left\"> <code>FileEndsWithExt</code> </td><td style=\"text-align:left\"> Flags suspicious usages of File.endsWith(extension) </td></tr>",
                                        "+<tr><td style=\"text-align:left\"> <code>DataExtractionRules</code> </td><td style=\"text-align:left\"> Missing data extraction rules </td></tr>",
                                        " </tbody></table></div>",
                                        " ",
                                        " <p></p><p>"
                                    ],
                                    [
                                        " </p><div class=\"table\"><table class=\"table\"><tbody><tr><th style=\"text-align:left\"> Issue ID </th><th style=\"text-align:left\"> Summary </th></tr>",
                                        " <tr><td style=\"text-align:left\"> <code>MissingTranslation</code> </td><td style=\"text-align:left\"> Now checks for missing translations of plurals </td></tr>",
                                        " <tr><td style=\"text-align:left\"> <code>WrongConstant</code> </td><td style=\"text-align:left\"> Now has quickfixes to replace with constants </td></tr>",
                                        "+<tr><td style=\"text-align:left\"> <code>CheckResult</code> </td><td style=\"text-align:left\"> Now also runs in unit tests </td></tr>",
                                        " </tbody></table></div>",
                                        " ",
                                        " <p></p><p>",
                                        " ",
                                        "-</p><ul>",
                                        "-<li class=\"asterisk\">The <code>com.android.application</code> Gradle plugin now sets",
                                        "-  <code>checkDependencies</code> to true by default. This means that when lint",
                                        "-  runs on an app module, the report will include not only the issues",
                                        "-  found in that module but also the issues found in its library",
                                        "-  dependencies. This means that you can run <code>./gradlew :app:lint</code> and",
                                        "-  see a single report instead of having to navigate to the individual",
                                        "-  reports for each of the included libraries. It also makes the",
                                        "-  analysis more accurate; for example, unused resources only make",
                                        "-  sense with checkDependencies on, such that lint can consider",
                                        "-  resource declarations and usages across module boundaries.",
                                        "-",
                                        "-<p></p><p>",
                                        "-",
                                        "-  With this change, if your project consists of a number of libraries",
                                        "-  and a consuming app module, consider running just",
                                        "-  <code>./gradle :app:lint</code> instead of <code>./gradlew lint</code>.</p></li></ul>",
                                        "-",
                                        "-<p></p><p>",
                                        "-",
                                        " <strong class=\"asterisk\">7.0</strong>",
                                        " ",
                                        " </p><p>"
                                    ],
                                    [
                                        "   lint task instead of running it across all variants and accumulating",
                                        "   results. This is much faster, is usually what you want, and now the",
                                        "   target name will not change based on whether the project has product",
                                        "-  flavors, so you can start just running <code>./gradlew :app:lint</code> instead",
                                        "+  flavors, so you can start just running <code>./gradlew:app:lint</code> instead",
                                        "   of <code>./gradlew :app:lintDebug</code> or <code>:app:lintProDebug</code> etc.",
                                        "+  Furthermore, the <code>lintOptions</code> block is now just named <code>lint</code>",
                                        "+  instead.",
                                        " ",
                                        " <p></p><p>",
                                        " ",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "gradle/wrapper/gradle-wrapper.properties",
                            "content": {
                                "current": "#Fri Sep 01 06:52:38 PDT 2017\ndistributionBase=GRADLE_USER_HOME\ndistributionPath=wrapper/dists\nzipStoreBase=GRADLE_USER_HOME\nzipStorePath=wrapper/dists\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-7.2-bin.zip\n",
                                "diffs": [
                                    [
                                        " distributionPath=wrapper/dists",
                                        " zipStoreBase=GRADLE_USER_HOME",
                                        " zipStorePath=wrapper/dists",
                                        "-distributionUrl=https\\://services.gradle.org/distributions/gradle-6.8.3-bin.zip",
                                        "+distributionUrl=https\\://services.gradle.org/distributions/gradle-7.2-bin.zip",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "library/build.gradle",
                            "content": {
                                "current": "apply plugin: 'com.android.library'\n\nandroid {\n    compileSdkVersion 30\n    defaultConfig {\n        minSdkVersion 15\n        targetSdkVersion 30\n    }\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n    lintOptions {\n        checkDependencies true\n    }\n}\n\n/** Package the given lint checks library into this AAR  */\ndependencies {\n    implementation project(':checks')\n    lintPublish project(':checks')\n}\n",
                                "diffs": [
                                    [
                                        "         sourceCompatibility JavaVersion.VERSION_1_8",
                                        "         targetCompatibility JavaVersion.VERSION_1_8",
                                        "     }",
                                        "+    lintOptions {",
                                        "+        checkDependencies true",
                                        "+    }",
                                        " }",
                                        " ",
                                        " /** Package the given lint checks library into this AAR  */",
                                        " dependencies {",
                                        "+    implementation project(':checks')",
                                        "     lintPublish project(':checks')",
                                        " }",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "07b0ddc1f429c9729ef3b401e826bec5757c84e2",
                    "link": "https://github.com/googlesamples/android-custom-lint-rules/commit/07b0ddc1f429c9729ef3b401e826bec5757c84e2",
                    "files": [
                        {
                            "name": "README.md",
                            "content": {
                                "current": "Custom Lint Rules\n=================\n\nThe lint source code contains a lot of documentation on how to write\ncustom checks; this git repository contains a snapshot of this\ndocumentation which you can read here:\n\n* [Full API Guide](https://tnorbye.github.io/android-custom-lint-rules/book.html)\n* [Other docs](https://tnorbye.github.io/android-custom-lint-rules/index.html)\n\nLint\n----\n\nThe [Android `lint` tool](http://developer.android.com/tools/help/lint.html) is a static code\nanalysis tool that checks your project source files for potential bugs and optimization\nimprovements for correctness, security, performance, usability, accessibility, and\ninternationalization. Lint comes with around 400 built-in checks, but it can be extended with \nadditional custom checks. This sample project shows how those sample checks can be built\nand packaged.\n\nNote that while Android Lint has the name \"Android\" in it, it is no longer an Android-specific\nstatic analysis tool; it's a general static analysis tool, and inside Google for example it is\nrun to analyze server-side Java and Kotlin code.\n\n**NOTE: The lint API is not a final API; if you rely on this be prepared\n to adjust your code for the next tools release.**\n\nIntroduction\n------------\n\nThe Android Lint API allows users to create custom lint checks. For example, if you are the author of\nan Android library project, and your library project has certain usage requirements, you can write\nadditional lint rules to check that your library is used correctly, and then you can distribute\nthose extra lint rules for users of the library. Similarly, you may have company-local rules you'd\nlike to enforce.\n\nThis sample demonstrates how to create a custom lint checks and corresponding tests for those rules.\n\n\n# Sample Lint Checks\n\nThis project shows how Android Studio as well as the Android Gradle plugin handles packaging of lint\nrules.\n\n## Lint Check Jar Library\n\nFirst, there's the lint check implementation itself. That's done in the\n\"checks\" project, which just applies the Gradle \"java\" or \"kotlin\" plugins, and\nthat project produces a jar. Note that the dependencies for the lint\ncheck project (other than its testing dependencies) must all be \"compileOnly\":\n\n    dependencies {\n        compileOnly \"com.android.tools.lint:lint-api:$lintVersion\"\n        compileOnly \"com.android.tools.lint:lint-checks:$lintVersion\"\n\t\t...\n\n## Lint Check AAR Library\n\nNext, there's a separate Android library project, called \"library\". This\nlibrary doesn't have any code on its own (though it could). However,\nin its build.gradle, it specifies this:\n\n    dependencies {\n        lintPublish project(':checks')\n    }\n\nThis tells the Gradle plugin to take the output from the \"checks\" project\nand package that as a \"lint.jar\" payload inside this library's AAR file.\nWhen that's done, any other projects that depends on this library will\nautomatically be using the lint checks.\n\n## App Modules\n\nNote that you don't have to go through the extra \"library indirection\"\nif you have a lint check that you only want to apply to one or more\napp modules. You can simply include the `lintChecks` dependency as shown\nabove there as well, and then lint will include these rules when analyzing\nthe project.\n\n## Lint Version\n\nThe lint version of the libraries (specified in this project as the\n`lintVersion` variable in build.gradle) should be the same version\nthat is used by the Gradle plugin.\n\nIf the Gradle plugin version is *X*.*Y*.*Z*, then the Lint library\nversion is *X+23*.*Y*.*Z*.\n\nFor example, for AGP 7.0.0-alpha08, the lint API versions are 30.0.0-alpha08.\n\nGetting Started\n---------------\n\n##### Fetch code\n\n```\ngit clone https://github.com/googlesamples/android-custom-lint-rules.git\ncd android-custom-lint-rules\n```\n\n##### Run The Sample\n\nRun the :app:lint target to have first the custom lint checks in checks/\ncompiled, then wrapped into the library, and finally run lint on a\nsample app module which has violations of the check enforced by sample\ncheck in this project:\n```\n$ ./gradlew :app:lint\n\n> Task :app:lintDebug\n\nScanning app: ...\nWrote HTML report to file:///demo/android-custom-lint-rules/app/build/reports/lint-results-debug.html\nWrote SARIF report to file:///demo/android-custom-lint-rules/app/build/reports/lint-results-debug.sarif\n\n/demo/android-custom-lint-rules/app/src/main/java/com/android/example/Test.kt:8: Warning: This code mentions lint: Congratulations [ShortUniqueId]\n    val s = \"lint\"\n             ~~~~\n\n   Explanation for issues of type \"ShortUniqueId\":\n   This check highlights string literals in code which mentions the word lint.\n   Blah blah blah.\n\n   Another paragraph here.\n\n   Vendor: Android Open Source Project\n   Contact: https://github.com/googlesamples/android-custom-lint-rules\n   Feedback: https://github.com/googlesamples/android-custom-lint-rules/issues\n\n0 errors, 1 warnings\n\nBUILD SUCCESSFUL in 1s\n```\n\n##### Lint Dependencies\n\nWhen building your own rules, you will likely want to know which dependencies you should \nbring into your own project. The below descriptions of the dependencies included within\nthis project serve to help you make that decision:\n\nSource Dependencies\n\n- **com.android.tools.lint:lint-api**: The most important one; it contains things \n  like `LintClient`, the `Detector` base class, the `Issue` class, and everything else \n  that Lint checks rely on in the Lint framework.\n- **com.android.tools.lint:lint-checks**: Contains the built-in checks that are developed \n  internally. Also contains utilities that are sometimes useful for other lint checks, \n  such as the `VersionChecks` class (which figures out whether a given UAST element is \n  known to only be called at a given API level, either by surrounding `if >= SDK-version`\n  checks or `if < SDK-version` early returns in the method).\n\nTest Dependencies\n\n- **com.android.tools.lint:lint-tests**: Contains useful utilities for writing unit tests \n  for Lint checks, including the `LintDetectorTest` base class.\n- **com.android.tools.lint:lint**: Lint checks don't need to depend on this. It's a \n  separate artifact used by tools that want to integrate lint with the command line, \n  such as the Gradle integration of lint. This is where things like terminal output, HTML \n  reporting, command line parsing etc is handled.\n\nThe APIs in all but the lint-api artifact are more likely to change incompatibly than\nthe lint-api artifact.\n\nSupport\n-------\n\n- The \"lint-dev\" Google group: https://groups.google.com/forum/#!forum/lint-dev\n- Stack Overflow: http://stackoverflow.com/questions/tagged/android\n\nIf you've found an error in this sample, please file an issue:\nhttps://github.com/googlesamples/android-custom-lint-rules/issues\n\nPatches are encouraged, and may be submitted by forking this project and\nsubmitting a pull request through GitHub.\n\nLicense\n-------\nLicensed under the Apache 2.0 license. See the LICENSE file for details.\n\nHow to make contributions?\n--------------------------\nPlease read and follow the steps in the CONTRIBUTING.md\n",
                                "diffs": [
                                    [
                                        " custom checks; this git repository contains a snapshot of this",
                                        " documentation which you can read here:",
                                        " ",
                                        "-* [Full API Guide](https://google.github.io/android-custom-lint-rules/docs/book.html)",
                                        "-* [Other docs](https://google.github.io/android-custom-lint-rules/docs/README.md.html)",
                                        "+* [Full API Guide](https://tnorbye.github.io/android-custom-lint-rules/book.html)",
                                        "+* [Other docs](https://tnorbye.github.io/android-custom-lint-rules/index.html)",
                                        " ",
                                        " Lint",
                                        " ----",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "docs/index.html",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        "+<html><head></head><body id=\"md\" style=\"visibility: visible;\"><meta charset=\"UTF-8\"><meta http-equiv=\"content-type\" content=\"text/html;charset=UTF-8\"><meta name=\"viewport\" content=\"width=600, initial-scale=1\"><style>body{max-width:680px;margin:auto;padding:20px;text-align:justify;line-height:140%;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-smoothing:antialiased;color:#222;font-family:Palatino,Georgia,\"Times New Roman\",serif}</style><style>@media print{*{-webkit-print-color-adjust:exact;text-shadow:none !important}}body{counter-reset: h1 paragraph line item list-item}@page{margin:0;size:auto}#mdContextMenu{position:absolute;background:#383838;cursor:default;border:1px solid #999;color:#fff;padding:4px 0px;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen,Ubuntu,\"Helvetica Neue\",sans-serif;font-size:85%;font-weight:600;border-radius:4px;box-shadow:0px 3px 10px rgba(0,0,0,35%)}#mdContextMenu div{padding:0px 20px}#mdContextMenu div:hover{background:#1659d1}.md code,.md pre{font-family:Menlo,Consolas,monospace;font-size:85%;text-align:left;line-height:140%}.md .mediumToc code,.md longToc code,.md .shortToc code,.md h1 code,.md h2 code,.md h3 code,.md h4 code,.md h5 code,.md h6 code{font-size:unset}.md div.title{font-size:26px;font-weight:800;line-height:120%;text-align:center}.md div.afterTitles{height:10px}.md div.subtitle{text-align:center}.md iframe.textinsert, .md object.textinsert,.md iframe:not(.markdeep){display:block;margin-top:10px;margin-bottom:10px;width:100%;height:75vh;border:1px solid #000;border-radius:4px;background:#f5f5f4}.md .image{display:inline-block}.md img{max-width:100%;page-break-inside:avoid}.md li{text-align:left;text-indent:0}.md pre.listing {width:100%;tab-size:4;-moz-tab-size:4;-o-tab-size:4;counter-reset:line;overflow-x:auto;resize:horizontal}.md pre.listing .linenumbers span.line:before{width:30px;margin-left:-28px;font-size:80%;text-align:right;counter-increment:line;content:counter(line);display:inline-block;padding-right:13px;margin-right:8px;color:#ccc}.md div.tilde{margin:20px 0 -10px;text-align:center}.md .imagecaption,.md .tablecaption,.md .listingcaption{display:inline-block;margin:7px 5px 12px;text-align:justify;font-style:italic}.md img.pixel{image-rendering:-moz-crisp-edges;image-rendering:pixelated}.md blockquote.fancyquote{margin:25px 0 25px;text-align:left;line-height:160%}.md blockquote.fancyquote::before{content:\"\u201c\";color:#DDD;font-family:Times New Roman;font-size:45px;line-height:0;margin-right:6px;vertical-align:-0.3em}.md span.fancyquote{font-size:118%;color:#777;font-style:italic}.md span.fancyquote::after{content:\"\u201d\";font-style:normal;color:#DDD;font-family:Times New Roman;font-size:45px;line-height:0;margin-left:6px;vertical-align:-0.3em}.md blockquote.fancyquote .author{width:100%;margin-top:10px;display:inline-block;text-align:right}.md small{font-size:60%}.md big{font-size:150%}.md div.title,contents,.md .tocHeader,.md h1,.md h2,.md h3,.md h4,.md h5,.md h6,.md .shortTOC,.md .mediumTOC,.nonumberh1,.nonumberh2,.nonumberh3,.nonumberh4,.nonumberh5,.nonumberh6{font-family:Verdana,Helvetica,Arial,sans-serif;margin:13.4px 0 13.4px;padding:15px 0 3px;border-top:none;clear:both}.md .tocTop {display:none}.md h1,.md h2,.md h3,.md h4,.md h5,.md h6,.md .nonumberh1,.md .nonumberh2,.md .nonumberh3,.md .nonumberh4,.md .nonumberh5,.md .nonumberh6{page-break-after:avoid;break-after:avoid}.md svg.diagram{display:block;font-family:Menlo,Consolas,monospace;font-size:85%;text-align:center;stroke-linecap:round;stroke-width:2px;page-break-inside:avoid;stroke:#000;fill:#000}.md svg.diagram .opendot{fill:#fff}.md svg.diagram .shadeddot{fill:#CCC}.md svg.diagram .dotteddot{stroke:#000;stroke-dasharray:4;fill:none}.md svg.diagram text{stroke:none}@media print{@page{margin:1in 5mm;transform: scale(150%)}}@media print{.md .pagebreak{page-break-after:always;visibility:hidden}}.md a{font-family:Georgia,Palatino,'Times New Roman'}.md h1,.md .tocHeader,.md .nonumberh1{border-bottom:3px solid;font-size:20px;font-weight:bold;}.md h1,.md .nonumberh1{counter-reset:h2 h3 h4 h5 h6}.md h2,.md .nonumberh2{counter-reset:h3 h4 h5 h6;border-bottom:2px solid #999;color:#555;font-weight:bold;font-size:18px;}.md h3,.md h4,.md h5,.md h6,.md .nonumberh3,.md .nonumberh4,.md .nonumberh5,.md .nonumberh6{font-family:Verdana,Helvetica,Arial,sans-serif;color:#555;font-size:16px;}.md h3{counter-reset:h4 h5 h6}.md h4{counter-reset:h5 h6}.md h5{counter-reset:h6}.md div.table{margin:16px 0 16px 0}.md table{border-collapse:collapse;line-height:140%;page-break-inside:avoid}.md table.table{margin:auto}.md table.calendar{width:100%;margin:auto;font-size:11px;font-family:Verdana,Helvetica,Arial,sans-serif}.md table.calendar th{font-size:16px}.md .today{background:#ECF8FA}.md .calendar .parenthesized{color:#999;font-style:italic}.md table.table th{color:#FFF;background-color:#AAA;border:1px solid #888;padding:8px 15px 8px 15px}.md table.table td{padding:5px 15px 5px 15px;border:1px solid #888}.md table.table tr:nth-child(even){background:#EEE}.md pre.tilde{border-top: 1px solid #CCC;border-bottom: 1px solid #CCC;padding: 5px 0 5px 20px;margin:0 0 0 0;background:#FCFCFC;page-break-inside:avoid}.md a.target{width:0px;height:0px;visibility:hidden;font-size:0px;display:inline-block}.md a:link, .md a:visited{color:#38A;text-decoration:none}.md a:link:hover{text-decoration:underline}.md dt{font-weight:700}.md dl>dd{margin-top:-8px; margin-bottom:8px}.md dl>table{margin:35px 0 30px}.md code{page-break-inside:avoid;} @media print{.md .listing code{white-space:pre-wrap}}.md .endnote{font-size:13px;line-height:15px;padding-left:10px;text-indent:-10px}.md .bib{padding-left:80px;text-indent:-80px;text-align:left}.markdeepFooter{font-size:9px;text-align:right;padding-top:80px;color:#999}.md .mediumTOC{float:right;font-size:12px;line-height:15px;border-left:1px solid #CCC;padding-left:15px;margin:15px 0px 15px 25px}.md .mediumTOC .level1{font-weight:600}.md .longTOC .level1{font-weight:600;display:block;padding-top:12px;margin:0 0 -20px}.md .shortTOC{text-align:center;font-weight:bold;margin-top:15px;font-size:14px}.md .admonition{position:relative;margin:1em 0;padding:.4rem 1rem;border-radius:.2rem;border-left:2.5rem solid rgba(68,138,255,.4);background-color:rgba(68,138,255,.15);}.md .admonition-title{font-weight:bold;border-bottom:solid 1px rgba(68,138,255,.4);padding-bottom:4px;margin-bottom:4px;margin-left: -1rem;padding-left:1rem;margin-right:-1rem;border-color:rgba(68,138,255,.4)}.md .admonition.tip{border-left:2.5rem solid rgba(50,255,90,.4);background-color:rgba(50,255,90,.15)}.md .admonition.tip::before{content:\"\\24d8\";font-weight:bold;font-size:150%;position:relative;top:3px;color:rgba(26,128,46,.8);left:-2.95rem;display:block;width:0;height:0}.md .admonition.tip>.admonition-title{border-color:rgba(50,255,90,.4)}.md .admonition.warn,.md .admonition.warning{border-left:2.5rem solid rgba(255,145,0,.4);background-color:rgba(255,145,0,.15)}.md .admonition.warn::before,.md .admonition.warning::before{content:\"\\26A0\";font-weight:bold;font-size:150%;position:relative;top:2px;color:rgba(128,73,0,.8);left:-2.95rem;display:block;width:0;height:0}.md .admonition.warn>.admonition-title,.md .admonition.warning>.admonition-title{border-color:rgba(255,145,0,.4)}.md .admonition.error{border-left: 2.5rem solid rgba(255,23,68,.4);background-color:rgba(255,23,68,.15)}.md .admonition.error>.admonition-title{border-color:rgba(255,23,68,.4)}.md .admonition.error::before{content: \"\\2612\";font-family:\"Arial\";font-size:200%;position:relative;color:rgba(128,12,34,.8);top:-2px;left:-3rem;display:block;width:0;height:0}.md .admonition p:last-child{margin-bottom:0}.md li.checked,.md li.unchecked{list-style:none;overflow:visible;text-indent:-1.2em}.md li.checked:before,.md li.unchecked:before{content:\"\\2611\";display:block;float:left;width:1em;font-size:120%}.md li.unchecked:before{content:\"\\2610\"}</style><style>.md h1::before {",
                                        "+content:counter(h1) \" \";",
                                        "+counter-increment: h1;margin-right:10px}",
                                        "+",
                                        "+.md h2::before {",
                                        "+content:counter(h1) \".\"counter(h2) \" \";",
                                        "+counter-increment: h2;margin-right:10px}",
                                        "+",
                                        "+.md h3::before {",
                                        "+content:counter(h1) \".\"counter(h2) \".\"counter(h3) \" \";",
                                        "+counter-increment: h3;margin-right:10px}",
                                        "+",
                                        "+.md h4::before {",
                                        "+content:counter(h1) \".\"counter(h2) \".\"counter(h3) \".\"counter(h4) \" \";",
                                        "+counter-increment: h4;margin-right:10px}",
                                        "+",
                                        "+.md h5::before {",
                                        "+content:counter(h1) \".\"counter(h2) \".\"counter(h3) \".\"counter(h4) \".\"counter(h5) \" \";",
                                        "+counter-increment: h5;margin-right:10px}",
                                        "+",
                                        "+.md h6::before {",
                                        "+content:counter(h1) \".\"counter(h2) \".\"counter(h3) \".\"counter(h4) \".\"counter(h5) \".\"counter(h6) \" \";",
                                        "+counter-increment: h6;margin-right:10px}",
                                        "+",
                                        "+</style><style>.hljs{display:block;overflow-x:auto;padding:0.5em;background:#fff;color:#000;-webkit-text-size-adjust:none}.hljs-comment{color:#006a00}.hljs-keyword{color:#02E}.hljs-literal,.nginx .hljs-title{color:#aa0d91}.method,.hljs-list .hljs-title,.hljs-tag .hljs-title,.setting .hljs-value,.hljs-winutils,.tex .hljs-command,.http .hljs-title,.hljs-request,.hljs-status,.hljs-name{color:#008}.hljs-envvar,.tex .hljs-special{color:#660}.hljs-string{color:#c41a16}.hljs-tag .hljs-value,.hljs-cdata,.hljs-filter .hljs-argument,.hljs-attr_selector,.apache .hljs-cbracket,.hljs-date,.hljs-regexp{color:#080}.hljs-sub .hljs-identifier,.hljs-pi,.hljs-tag,.hljs-tag .hljs-keyword,.hljs-decorator,.ini .hljs-title,.hljs-shebang,.hljs-prompt,.hljs-hexcolor,.hljs-rule .hljs-value,.hljs-symbol,.hljs-symbol .hljs-string,.hljs-number,.css .hljs-function,.hljs-function .hljs-title,.coffeescript .hljs-attribute{color:#A0C}.hljs-function .hljs-title{font-weight:bold;color:#000}.hljs-class .hljs-title,.smalltalk .hljs-class,.hljs-type,.hljs-typename,.hljs-tag .hljs-attribute,.hljs-doctype,.hljs-class .hljs-id,.hljs-built_in,.setting,.hljs-params,.clojure .hljs-attribute{color:#5c2699}.hljs-variable{color:#3f6e74}.css .hljs-tag,.hljs-rule .hljs-property,.hljs-pseudo,.hljs-subst{color:#000}.css .hljs-class,.css .hljs-id{color:#9b703f}.hljs-value .hljs-important{color:#ff7700;font-weight:bold}.hljs-rule .hljs-keyword{color:#c5af75}.hljs-annotation,.apache .hljs-sqbracket,.nginx .hljs-built_in{color:#9b859d}.hljs-preprocessor,.hljs-preprocessor *,.hljs-pragma{color:#643820}.tex .hljs-formula{background-color:#eee;font-style:italic}.diff .hljs-header,.hljs-chunk{color:#808080;font-weight:bold}.diff .hljs-change{background-color:#bccff9}.hljs-addition{background-color:#baeeba}.hljs-deletion{background-color:#ffc8bd}.hljs-comment .hljs-doctag{font-weight:bold}.method .hljs-id{color:#000}</style><style>div.title { padding-top: 40px; } div.afterTitles { height: 15px; }</style><span class=\"md\"><p>",
                                        "+<a class=\"target\" name=\"androidlint\">&nbsp;</a><a class=\"target\" name=\"androidlint\">&nbsp;</a><a class=\"target\" name=\"toc1\">&nbsp;</a></p><h1>Android Lint</h1>",
                                        "+<p>",
                                        "+",
                                        "+",
                                        "+Android Lint is a static analysis tool (which despite the name is not",
                                        "+limited to Android, and within Google for example is used to analyze",
                                        "+Java and Kotlin server side code as well as Android and even desktop",
                                        "+software like IDEs.)",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+Lint's focus is on finding bugs (whether they are related to",
                                        "+correctness, performance, security, internationalization, usability and",
                                        "+so on); it's not a source code style checker.",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+Available documentation:",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+</p><ul>",
                                        "+<li class=\"asterisk\"><a href=\"features.md.html\">Lint Features</a>",
                                        "+</li>",
                                        "+<li class=\"asterisk\"><a href=\"changes.md.html\">Recent Changes</a>",
                                        "+</li>",
                                        "+<li class=\"asterisk\">Documents for users of lint, in the <code>usage</code> folder:",
                                        "+<ul>",
                                        "+  <li class=\"minus\"><a href=\"usage/suppressing.md.html\">How to suppress incidents</a>",
                                        "+</li>",
                                        "+  <li class=\"minus\"><a href=\"usage/baselines.md.html\">How to use baselines</a>",
                                        "+</li>",
                                        "+  <li class=\"minus\"><a href=\"usage/lintxml.md.html\">How to use <code>lint.xml</code> files</a>",
                                        "+</li>",
                                        "+  <li class=\"minus\"><a href=\"usage/variables.md.html\">Environment variables and properties</a>",
                                        "+</li></ul>",
                                        "+</li><li class=\"asterisk\">Documents for authors of additional lint checks, in the",
                                        "+  <code>api-guide</code> folder:",
                                        "+<ul>",
                                        "+  <li class=\"minus\"><a href=\"book.md.html\">Complete Book</a>, containing all of the below",
                                        "+      documents as chapters, suitable for offline reading",
                                        "+</li>",
                                        "+  <li class=\"minus\"><a href=\"api-guide/basics.md.html\">Basics</a>",
                                        "+</li>",
                                        "+  <li class=\"minus\"><a href=\"api-guide/example.md.html\">A Sample Lint Check</a>",
                                        "+</li>",
                                        "+  <li class=\"minus\"><a href=\"api-guide/publishing.md.html\">Publishing a Lint check</a>",
                                        "+</li>",
                                        "+  <li class=\"minus\"><a href=\"api-guide/unit-testing.md.html\">Unit Testing</a>",
                                        "+</li>",
                                        "+  <li class=\"minus\"><a href=\"api-guide/quickfixes.md.html\">Adding Quick Fixes</a>",
                                        "+</li>",
                                        "+  <li class=\"minus\"><a href=\"api-guide/terminology.md.html\">Terminology</a>",
                                        "+</li>",
                                        "+  <li class=\"minus\"><a href=\"api-guide/partial-analysis.md.html\">Partial analysis</a>",
                                        "+</li>",
                                        "+  <li class=\"minus\"><a href=\"api-guide/faq.md.html\">Frequently Asked Questions</a>",
                                        "+</li></ul>",
                                        "+</li><li class=\"asterisk\">Documents for lint internals, intended for developers of lint",
                                        "+  itself, in the <code>internal</code> folder:",
                                        "+<ul>",
                                        "+  <li class=\"minus\"><a href=\"internal/guidelines.md.html\">Guidelines</a></li></ul></li></ul>",
                                        "+",
                                        "+<p></p><p>",
                                        "+",
                                        "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+Documentation History:",
                                        "+",
                                        "+</p><p>",
                                        "+",
                                        "+</p><ul>",
                                        "+<li class=\"asterisk\">March 2021: Initial version</li></ul>",
                                        "+",
                                        "+<p></p><p>",
                                        "+",
                                        "+</p></span><div id=\"mdContextMenu\" style=\"visibility:hidden\"></div><div class=\"markdeepFooter\"><i>formatted by <a href=\"https://casual-effects.com/markdeep\" style=\"color:#999\">Markdeep&nbsp;1.13&nbsp;&nbsp;</a></i><div style=\"display:inline-block;font-size:13px;font-family:'Times New Roman',serif;vertical-align:middle;transform:translate(-3px,-1px)rotate(135deg);\">\u2712</div></div></body></html>",
                                        "\\ No newline at end of file",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "5e5e6e8fa25c4f003d9b66bc9de92e7a0517bc88",
                    "link": "https://github.com/googlesamples/android-custom-lint-rules/commit/5e5e6e8fa25c4f003d9b66bc9de92e7a0517bc88",
                    "files": [
                        {
                            "name": "docs/api-guide/changes.md.html",
                            "content": {
                                "current": "**Recent Changes**\n\nThis chapter lists recent changes to lint that affect lint check\nauthors: new features, API and behavior changes, and so on. For\ninformation about user visible changes to lint, see\n[](../usage/changes.md.html).\n\n**7.0**\n\n* The API level has bumped to 10.\n\n* Partial analysis. Lint's architecture has changed to support better\n  scalability across large projects, where module results can be\n  cached, etc. See the api-guide's dedicated chapter for more details.\n  To opt in before it's turned on by default to test this on your full\n  Gradle projects rather than just the detector tests, add\n\n      `android.experimental.useLintPartialAnalysis=true`\n\n  to your `gradle.properties` file. If you want to debug your lint check\n  you may want to also set\n\n      `android.experimental.runLintInProcess=true`\n\n* Issue registration now takes an optional `Vendor` property, where you\n  can specify information about which company or team provided this\n  lint check, which library it's associated with, contact information,\n  and so on. This will make it easier for users to figure out where to\n  send feedback or requests for 3rd party lint checks.\n\n* Bytecode verification: Instead of warning about 3rd party lint checks\n  being obsolete because they were not compiled against the latest Lint\n  API, lint now run its own bytecode verification against the lint jar\n  and will silently accept older (and newer!) lint checks if\n  they do not reference APIs that are not available.\n\n* Android Lint checks can now always access the resource repository for\n  random access to resources, instead of having to gather them in batch\n  mode. (Previously this was only available when lint checks were\n  running in the IDE.)\n\n* The lint unit testing library now provides a `TestMode` concept. You\n  can define setup and teardown methods, and lint will run unit tests\n  repeatedly for each test mode. There are a number of built-in test\n  modes already enabled; for example, all lint tests will run both in\n  global analysis mode and in partial analysis mode, and the results\n  compared to ensure they are the same.\n\n* Lint unit tests now include source contents for secondary locations\n  too. If the test fails, lint will retry without secondary source\n  locations and not report an error; this preserves backwards\n  compatibility.\n\n* There's a new `Incident` class which is used to hold information to\n  be reported to the user. Previously, there were a number of\n  overloaded methods to report issues, taking locations, error\n  messages, quick fixes, and so on. Each time we added another one we'd\n  have to add another overload. Now, you instead just report incidents.\n  This is critical to the new partial analysis architecture but is also\n  required if you for example want to override severities per incident\n  as described above.\n\n* Lint checks can now vary the severity on a per incident basis by\n  calling overrideSeverity on the incidents. This means that there is\n  no longer a need to create separate issues for flavors of the same\n  underlying problem with slightly different expectations around\n  warnings or errors.\n\n* There are additional modifier lookup methods for Kotlin modifiers\n  on `JavaEvaluator, like isReified(), isCompanion(), isTailRec(), and\n  so on.\n\n* API documentation is now available.\n\n<!-- Markdeep: --><style class=\"fallback\">body{visibility:hidden;white-space:pre;font-family:monospace}</style><script src=\"markdeep.min.js\" charset=\"utf-8\"></script><script src=\"https://morgan3d.github.io/markdeep/latest/markdeep.min.js\" charset=\"utf-8\"></script><script>window.alreadyProcessedMarkdeep||(document.body.style.visibility=\"visible\")</script>\n",
                                "diffs": [
                                    [
                                        " * Bytecode verification: Instead of warning about 3rd party lint checks",
                                        "   being obsolete because they were not compiled against the latest Lint",
                                        "   API, lint now run its own bytecode verification against the lint jar",
                                        "-  and will silently accept accept older (and newer!) lint checks if",
                                        "+  and will silently accept older (and newer!) lint checks if",
                                        "   they do not reference APIs that are not available.",
                                        " ",
                                        " * Android Lint checks can now always access the resource repository for",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "repo_name": "aws-marketplace-serverless-saas-integration",
            "org_name": "aws-samples",
            "commits": [
                {
                    "message": "",
                    "sha": "b76fb7c3ef021558dbeb9a3b790aa114deb378df",
                    "link": "https://github.com/aws-samples/aws-marketplace-serverless-saas-integration/commit/b76fb7c3ef021558dbeb9a3b790aa114deb378df",
                    "files": [
                        {
                            "name": "template.yaml",
                            "content": {
                                "current": "AWSTemplateFormatVersion: \"2010-09-09\"\nTransform: AWS::Serverless-2016-10-31\nDescription: \"AWS Marketplace Serverless SaaS Integration Application\"\nGlobals:\n  Function:\n    Timeout: 15\n  Api:\n    Cors:\n      AllowMethods: \"'POST,OPTIONS'\"\n      AllowHeaders: \"'*'\"\n      AllowOrigin: \"'*'\"\n      AllowCredentials: \"'*'\"\n\nParameters:\n\n  WebsiteS3BucketName:\n    Type: String\n    #AllowedPattern: \"(?!(^xn--|.+-s3alias$))^[a-z0-9][a-z0-9-]{1,61}[a-z0-9]$\"\n    ConstraintDescription: \"S3 bucket name must follow S3 recommendations https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html\"\n    Default: \"\"\n\n  NewSubscribersTableName:\n    Type: String\n    AllowedPattern: \".*\"\n    Default: \"AWSMarketplaceSubscribers\"\n\n  AWSMarketplaceMeteringRecordsTableName:\n    Type: String\n    AllowedPattern: \".*\"\n    Default: \"AWSMarketplaceMeteringRecords\"\n\n  TypeOfSaaSListing:\n    Type: String\n    Default: contracts_with_subscription\n    AllowedValues:\n      - contracts_with_subscription\n      - contracts\n      - subscriptions\n\n  SNSAccountID:\n    Type: String\n    Default: \"287250355862\"\n    Description: \"This is the AWS account hosting the SNS Entitlement and Subscription topics for your product.\"\n    AllowedValues:\n      - \"287250355862\"\n\n  SNSRegion:\n      Type: String\n      Default: \"us-east-1\"\n      Description: \"This is the AWS region of the SNS Entitlement and Subscription topics for your product.\"\n      AllowedValues: \n        - us-east-1\n  ProductCode:\n    Type: String\n    AllowedPattern: \".*\"\n\n  MarketplaceTechAdminEmail:\n    Type: String\n    AllowedPattern: \".*\"\n\n  MarketplaceSellerEmail:\n    Type: String\n    AllowedPattern: \".*\"\n    Default: \"\"\n\n  CreateCrossAccountRole:\n    Default: \"false\"\n    Description: \"Do you intend to use cross account access with this integration core?\"\n    Type: String\n    AllowedValues:\n      - \"true\"\n      - \"false\"\n  \n  CrossAccountId:\n    Default: ''\n    Description: \"Enter the cross AWS account id\"\n    Type: String\n\n  CrossAccountRoleName: \n    Type: String\n    Description: \"Your Role Name (ex: OrganizationAccountAccessRole); This will need to be the same across all of the Member Accounts\"\n\n  CreateRegistrationWebPage:\n    Default: \"true\"\n    Type: String\n    AllowedValues:\n      - \"true\"\n      - \"false\"\n\nConditions:\n  CreateEntitlementLogic:\n    Fn::Or:\n      - !Equals [!Ref TypeOfSaaSListing, contracts_with_subscription]\n      - !Equals [!Ref TypeOfSaaSListing, contracts]\n\n  CreateSubscriptionLogic:\n    Fn::Or:\n      - !Equals [!Ref TypeOfSaaSListing, contracts_with_subscription]\n      - !Equals [!Ref TypeOfSaaSListing, subscriptions]\n\n  CreateWeb: !Equals [!Ref CreateRegistrationWebPage, true]\n  Buyernotificationemail: !Not [!Equals [!Ref MarketplaceSellerEmail, \"\"]]\n  CreateCrossAccount: !Equals [!Ref CreateCrossAccountRole, true]\n\n\nResources:\n\n  ServerlessApi:\n    Type: AWS::Serverless::Api\n    Properties:\n      StageName: Prod\n      MethodSettings:\n        - ResourcePath: /subscriber\n          HttpMethod: POST, OPTIONS\n        - ResourcePath: /redirectmarketplacetoken\n          HttpMethod: POST, OPTIONS\n\n  CrossAccountRoleForSaaSIntegration:\n    Type: AWS::IAM::Role\n    Condition: CreateCrossAccount\n    DependsOn: \n     - AWSMarketplaceMeteringRecords \n     - AWSMarketplaceSubscribers\n    Properties:\n      RoleName: !Join [\"-\", [!Ref \"AWS::StackName\", !Ref CrossAccountRoleName]]\n      AssumeRolePolicyDocument:\n        Version: 2012-10-17\n        Statement:\n          - Effect: Allow\n            Principal:\n              AWS:\n                - !Join [\":\", [\"arn:aws:iam:\", !Ref CrossAccountId , \"root\"]]\n            Action:\n              - 'sts:AssumeRole'\n            Condition:\n              StringEquals:\n                'sts:ExternalId': !Ref CrossAccountRoleName\n      Path: /\n      Policies:\n        - PolicyName: !Join [\"-\", [!Ref \"AWS::StackName\", \"CrossAccountPolicy\"]]\n          PolicyDocument:\n            Version: 2012-10-17\n            Statement:\n              - Effect: Allow\n                Action:\n                  - 'dynamodb:PutItem'\n                  - 'dynamodb:DeleteItem'\n                  - 'dynamodb:UpdateItem'\n                Resource:\n                  - !GetAtt AWSMarketplaceMeteringRecords.Arn\n                  - !GetAtt AWSMarketplaceSubscribers.Arn\n                  \n  AWSMarketplaceMeteringRecords:\n    Type: AWS::DynamoDB::Table\n    Condition: CreateSubscriptionLogic\n    Properties:\n      AttributeDefinitions:\n        - AttributeName: \"customerIdentifier\"\n          AttributeType: \"S\"\n        - AttributeName: \"create_timestamp\"\n          AttributeType: \"N\"\n        - AttributeName: \"metering_pending\"\n          AttributeType: \"S\"\n\n      BillingMode: PAY_PER_REQUEST\n      KeySchema:\n        - AttributeName: \"customerIdentifier\"\n          KeyType: \"HASH\"\n        - AttributeName: \"create_timestamp\"\n          KeyType: \"RANGE\"\n      GlobalSecondaryIndexes:\n        - IndexName: PendingMeteringRecordsIndex\n          KeySchema:\n            - AttributeName: \"metering_pending\"\n              KeyType: \"HASH\"\n          Projection:\n            ProjectionType: ALL\n      TableName: !Ref AWSMarketplaceMeteringRecordsTableName\n\n  AWSMarketplaceSubscribers:\n    Type: AWS::DynamoDB::Table\n    Properties:\n      AttributeDefinitions:\n        - AttributeName: \"customerIdentifier\"\n          AttributeType: \"S\"\n      BillingMode: PAY_PER_REQUEST\n      KeySchema:\n        - AttributeName: \"customerIdentifier\"\n          KeyType: \"HASH\"\n      TableName: !Ref NewSubscribersTableName\n      StreamSpecification:\n        StreamViewType: NEW_AND_OLD_IMAGES\n  \n  RegisterNewMarketplaceCustomer:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: src/\n      Handler: register-new-subscriber.registerNewSubscriber\n      Runtime: nodejs18.x\n      Environment:\n        Variables:\n          NewSubscribersTableName: !Ref NewSubscribersTableName\n          EntitlementQueueUrl:\n            !If [CreateEntitlementLogic, !Ref EntitlementSQSQueue, !Ref AWS::NoValue]\n          MarketplaceSellerEmail:\n            !If [Buyernotificationemail, !Ref MarketplaceSellerEmail, !Ref AWS::NoValue]\n      Policies:\n        - DynamoDBWritePolicy:\n            TableName: !Ref NewSubscribersTableName\n        - Statement:\n            - Sid: AWSMarketplaceResolveCustomer\n              Effect: Allow\n              Action:\n                - aws-marketplace:ResolveCustomer\n              Resource: \"*\"\n        - !If\n          - CreateEntitlementLogic\n          - Statement:\n              - Sid: SQSPolicy\n                Effect: Allow\n                Action:\n                  - sqs:SendMessage\n                Resource: !GetAtt EntitlementSQSQueue.Arn\n          - !Ref \"AWS::NoValue\"\n\n        - Statement:\n            - Sid: Sendemail\n              Effect: Allow\n              Action:\n                - ses:SendEmail\n              Resource: \"*\"\n      Events:\n        RegisterCustomer:\n          Type: Api\n          Properties:\n            Path: /subscriber\n            Method: post\n            RestApiId: !Ref ServerlessApi\n\n  EntitlementSQSQueue:\n    Type: AWS::SQS::Queue\n    Condition: CreateEntitlementLogic\n\n  EntitlementSQSHandler:\n    Type: AWS::Serverless::Function\n    Condition: CreateEntitlementLogic\n    Properties:\n      CodeUri: src\n      Handler: entitlement-sqs.handler\n      Runtime: nodejs18.x\n      Environment:\n        Variables:\n          NewSubscribersTableName: !Ref NewSubscribersTableName\n      Policies:\n        - DynamoDBWritePolicy:\n            TableName: !Ref NewSubscribersTableName\n        - SQSSendMessagePolicy:\n            QueueName: !GetAtt EntitlementSQSQueue.Arn\n        - Statement:\n            - Sid: AWSMarketplaceEntitlements\n              Effect: Allow\n              Action:\n                - aws-marketplace:GetEntitlements\n              Resource: \"*\"\n      Events:\n        MySQSEvent:\n          Type: SNS\n          Properties:\n            Topic:  !Sub 'arn:aws:sns:${SNSRegion}:${SNSAccountID}:aws-mp-entitlement-notification-${ProductCode}'\n            Region: !Sub '${SNSRegion}'\n            SqsSubscription:\n              BatchSize: 1\n              QueueArn: !GetAtt EntitlementSQSQueue.Arn\n              QueueUrl: !Ref EntitlementSQSQueue\n\n  SubscriptionSQSHandler:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: src\n      Handler: subscription-sqs.SQSHandler\n      Runtime: nodejs18.x\n      Environment:\n        Variables:\n          NewSubscribersTableName: !Ref NewSubscribersTableName\n          SupportSNSArn: !Ref SupportSNSTopic\n      Policies:\n        - DynamoDBWritePolicy:\n            TableName: !Ref NewSubscribersTableName\n        - Statement:\n            - Sid: SNSPublish\n              Effect: Allow\n              Action:\n                - sns:Publish\n              Resource: !Ref SupportSNSTopic\n      Events:\n        MySQSEvent:\n          Type: SNS\n          Properties:\n            #Topic: !Ref SubscriptionSNSTopic\n            Topic:  !Sub 'arn:aws:sns:${SNSRegion}:${SNSAccountID}:aws-mp-subscription-notification-${ProductCode}'\n            Region: !Sub '${SNSRegion}'\n            SqsSubscription: true\n\n  SupportSNSTopic:\n    Type: AWS::SNS::Topic\n    Properties:\n      Subscription:\n        - Endpoint: !Ref MarketplaceTechAdminEmail\n          Protocol: email\n\n  GrantOrRevokeAccess:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: src\n      Handler: grant-revoke-access-to-product.dynamodbStreamHandler\n      Runtime: nodejs18.x\n      Environment:\n        Variables:\n          SupportSNSArn: !Ref SupportSNSTopic\n          LOG_LEVEL: \"info\"\n      Policies:\n        - AWSLambdaDynamoDBExecutionRole\n        - Statement:\n            - Sid: SNSPublish\n              Effect: Allow\n              Action:\n                - sns:Publish\n              Resource: !Ref SupportSNSTopic\n      Events:\n        Stream:\n          Type: DynamoDB\n          Properties:\n            Stream: !GetAtt AWSMarketplaceSubscribers.StreamArn\n            BatchSize: 1\n            StartingPosition: TRIM_HORIZON\n\n  Hourly:\n    Type: AWS::Serverless::Function\n    Condition: CreateSubscriptionLogic\n    Properties:\n      CodeUri: src\n      Handler: metering-hourly-job.job\n      Runtime: nodejs18.x\n      Environment:\n        Variables:\n          SQSMeteringRecordsUrl: !Ref SQSMeteringRecords\n          AWSMarketplaceMeteringRecordsTableName: !Ref AWSMarketplaceMeteringRecordsTableName\n      Policies:\n        - DynamoDBReadPolicy:\n            TableName: !Ref AWSMarketplaceMeteringRecordsTableName\n        - SQSSendMessagePolicy:\n            QueueName: !GetAtt SQSMeteringRecords.QueueName\n      Events:\n        CWSchedule:\n          Type: Schedule\n          Properties:\n            Schedule: \"rate(1 hour)\"\n            Name: !Join [\"-\", [MeteringSchedule, !Ref AWS::StackName]]\n            Description: SaaS Metering\n            Enabled: true\n\n  SQSMeteringRecords:\n    Type: AWS::SQS::Queue\n    Properties:\n      QueueName: !Join [\"-\", [!Ref AWS::StackName, SQSMeteringRecords.fifo]]\n      ContentBasedDeduplication: true\n      FifoQueue: true\n      MessageRetentionPeriod: 3000\n    Condition: CreateSubscriptionLogic\n\n  MeteringSQSHandler:\n    Type: AWS::Serverless::Function\n    Condition: CreateSubscriptionLogic\n    Properties:\n      CodeUri: src\n      Handler: metering-sqs.handler\n      Runtime: nodejs18.x\n      Environment:\n        Variables:\n          ProductCode: !Ref ProductCode\n          AWSMarketplaceMeteringRecordsTableName: !Ref AWSMarketplaceMeteringRecordsTableName\n      Policies:\n        - DynamoDBWritePolicy:\n            TableName: !Ref AWSMarketplaceMeteringRecordsTableName\n        - Statement:\n            - Sid: AWSMarketplaceMetering\n              Effect: Allow\n              Action:\n                - aws-marketplace:BatchMeterUsage\n              Resource: \"*\"\n      Events:\n        MySQSEvent:\n          Type: SQS\n          Properties:\n            Queue: !GetAtt SQSMeteringRecords.Arn\n            BatchSize: 1\n\n  \n          Bucket: !GetAtt WebsiteS3BucketLog.DomainName\n          IncludeCookies: false\n          Prefix: \"access-logs\"\n\n  WebsiteS3Bucket:\n    Type: AWS::S3::Bucket\n    Condition: CreateWeb\n    Properties:\n      BucketName: !Ref WebsiteS3BucketName\n\n  WebsiteS3BucketLog:\n    Type: AWS::S3::Bucket\n    Condition: CreateWeb\n    Properties:\n      BucketName: !Join [\"-\", [!Ref WebsiteS3BucketName, \"log\"]]\n      OwnershipControls:\n        Rules:\n          - ObjectOwnership: BucketOwnerPreferred\n      IntelligentTieringConfigurations:\n        - Id: !Join [\"-\", [!Ref WebsiteS3BucketName, \"log\"]]\n          Status: Enabled\n          Tierings:\n            - AccessTier: ARCHIVE_ACCESS\n              Days: 90\n\n  S3BucketPolicy:\n    Type: AWS::S3::BucketPolicy\n    Condition: CreateWeb\n    Properties:\n      Bucket: !Ref WebsiteS3Bucket\n      PolicyDocument:\n        # Restricting access to cloudfront only.\n        Statement:\n          - Effect: Allow\n            Sid: \"AllowCloudFrontServicePrincipal\"\n            Action: \"s3:GetObject\"\n            Resource:\n              - !Sub \"arn:aws:s3:::${WebsiteS3Bucket}/*\"\n            Principal:\n              Service: \"cloudfront.amazonaws.com\"\n            Condition:\n              StringEquals: \n                \"AWS:SourceArn\" : \n                  - !Sub \"arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudfrontDistribution}\"\n                \n\n  LambdaRedirectPostRequests:\n    Type: AWS::Serverless::Function\n    Condition: CreateWeb\n    Properties:\n      Runtime: nodejs18.x\n      CodeUri: src/\n      Handler: redirect.redirecthandler\n      AssumeRolePolicyDocument:\n        Version: \"2012-10-17\"\n        Statement:\n          - Effect: \"Allow\"\n            Action: \"sts:AssumeRole\"\n            Principal:\n              Service:\n                - \"lambda.amazonaws.com\"\n      Environment:\n        Variables:\n          RedirectUrl: https://aws-ia.github.io/cloudformation-aws-marketplace-saas/#_post_deployment_steps\n      Events:\n        RedirectMarketplaceToken:\n          Type: Api\n          Properties:\n            Path: /redirectmarketplacetoken\n            Method: post  \n            RestApiId: !Ref ServerlessApi\n\n  CloudFrontOriginAccessControl:\n    Type: \"AWS::CloudFront::OriginAccessControl\"\n    Properties: \n      OriginAccessControlConfig: \n        Description:\n         !Join\n          - '-'\n          - - 'Origin Access Control for static website'\n            - !Select \n              - 0\n              - !Split \n                - \"-\"\n                - !Select\n                  - 2\n                  - !Split\n                    - \"/\"\n                    - !Ref AWS::StackId\n        Name:\n         !Join\n          - '-'\n          - - 'OAC'\n            - !Select \n              - 0\n              - !Split \n                - \"-\"\n                - !Select\n                  - 2\n                  - !Split\n                    - \"/\"\n                    - !Ref AWS::StackId\n        OriginAccessControlOriginType: \"s3\"\n        SigningBehavior: \"always\"\n        SigningProtocol: \"sigv4\"\n\n\n  CloudfrontDistribution:\n    Type: \"AWS::CloudFront::Distribution\"\n    Condition: CreateWeb\n    DependsOn: ServerlessApi\n    Properties:\n      DistributionConfig:\n        Comment:\n         !Join\n          - '-'\n          - - 'Cloudfront distribution for serverless website'\n            - !Select \n              - 0\n              - !Split \n                - \"-\"\n                - !Select\n                  - 2\n                  - !Split\n                    - \"/\"\n                    - !Ref AWS::StackId\n        DefaultRootObject: \"index.html\"\n        Enabled: true\n        HttpVersion: http2\n        # List of origins that Cloudfront will connect to\n        Origins:\n          - Id: s3-website\n            DomainName: !GetAtt WebsiteS3Bucket.RegionalDomainName\n            OriginAccessControlId: !Ref CloudFrontOriginAccessControl\n            S3OriginConfig:\n              OriginAccessIdentity: \"\"\n          - Id: api-gateway\n            DomainName: !Sub \"${ServerlessApi}.execute-api.${AWS::Region}.amazonaws.com\"\n            CustomOriginConfig:\n              OriginProtocolPolicy: \"https-only\"\n              OriginSSLProtocols:\n                - \"TLSv1.2\"\n              HTTPSPort: 443\n            OriginPath: \"/Prod\"\n        # To connect the CDN to the origins you need to specify behaviours\n        DefaultCacheBehavior:\n          # Compress resources automatically ( gzip )\n          Compress: true\n          AllowedMethods:\n            - HEAD\n            - DELETE\n            - POST\n            - GET\n            - OPTIONS\n            - PUT\n            - PATCH\n          ForwardedValues:\n            QueryString: false\n          TargetOriginId: s3-website\n          ViewerProtocolPolicy: redirect-to-https\n        CacheBehaviors:\n          - PathPattern: /redirectmarketplacetoken\n            AllowedMethods:\n            - HEAD\n            - DELETE\n            - POST\n            - GET\n            - OPTIONS\n            - PUT\n            - PATCH\n            TargetOriginId: api-gateway\n            ViewerProtocolPolicy: redirect-to-https\n            ResponseHeadersPolicyId: 60669652-455b-4ae9-85a4-c4c02393f86c\n            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad\n            OriginRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac\n          - PathPattern: /subscriber\n            AllowedMethods:\n            - HEAD\n            - DELETE\n            - POST\n            - GET\n            - OPTIONS\n            - PUT\n            - PATCH\n            TargetOriginId: api-gateway\n            ViewerProtocolPolicy: redirect-to-https\n            ResponseHeadersPolicyId: 60669652-455b-4ae9-85a4-c4c02393f86c\n            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad\n            OriginRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac\n        Logging:\n          Bucket: !GetAtt WebsiteS3BucketLog.DomainName\n          IncludeCookies: false\n          Prefix: \"access-logs\"\n\n\nOutputs:\n  CrossAccountRole:\n    Description: This is the cross account role ARN.\n    Value: \n      !If [\n        CreateCrossAccount,\n        !GetAtt CrossAccountRoleForSaaSIntegration.Arn,\n        \"N/A\"\n      ]\n  WebsiteS3Bucket:\n    Description: S3 bucket for hosting the static site. You can retrieve the files at https://github.com/aws-samples/aws-marketplace-serverless-saas-integration/tree/master/web.\n    Value: \n      !If [\n        CreateWeb,\n        !Sub \"https://s3.console.aws.amazon.com/s3/buckets/${WebsiteS3Bucket}/\",\n        !Sub \"N/A\"\n      ]\n\n  LandingPagePreviewURL:\n    Description: URL to preview your landing page. This is NOT the Fulfillment URL for your product.\n    Value:\n      !If [\n        CreateWeb,\n        !Sub \"https://${CloudfrontDistribution.DomainName}/index.html\",\n        \"N/A\"\n      ]\n  MarketplaceFulfillmentURL:\n    Description: This is the Marketplace fulfillment URL.\n    Value:\n      !If [\n        CreateWeb,\n        !Sub \"https://${CloudfrontDistribution.DomainName}/redirectmarketplacetoken\",\n        !Sub \"https://${ServerlessApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/redirectmarketplacetoken\"\n      ]",
                                "diffs": [
                                    [
                                        "     Type: \"AWS::CloudFront::OriginAccessControl\"",
                                        "     Properties: ",
                                        "       OriginAccessControlConfig: ",
                                        "-        Description: !Sub \"Origin Access Control for static website - ${AWS::StackName}\"",
                                        "-        Name: !Sub \"OAC - ${AWS::StackName}\"",
                                        "+        Description:",
                                        "+         !Join",
                                        "+          - '-'",
                                        "+          - - 'Origin Access Control for static website'",
                                        "+            - !Select ",
                                        "+              - 0",
                                        "+              - !Split ",
                                        "+                - \"-\"",
                                        "+                - !Select",
                                        "+                  - 2",
                                        "+                  - !Split",
                                        "+                    - \"/\"",
                                        "+                    - !Ref AWS::StackId",
                                        "+        Name:",
                                        "+         !Join",
                                        "+          - '-'",
                                        "+          - - 'OAC'",
                                        "+            - !Select ",
                                        "+              - 0",
                                        "+              - !Split ",
                                        "+                - \"-\"",
                                        "+                - !Select",
                                        "+                  - 2",
                                        "+                  - !Split",
                                        "+                    - \"/\"",
                                        "+                    - !Ref AWS::StackId",
                                        "         OriginAccessControlOriginType: \"s3\"",
                                        "         SigningBehavior: \"always\"",
                                        "         SigningProtocol: \"sigv4\""
                                    ],
                                    [
                                        "     DependsOn: ServerlessApi",
                                        "     Properties:",
                                        "       DistributionConfig:",
                                        "-        Comment: !Sub \"Cloudfront distribution for serverless website - ${AWS::StackName}\"",
                                        "+        Comment:",
                                        "+         !Join",
                                        "+          - '-'",
                                        "+          - - 'Cloudfront distribution for serverless website'",
                                        "+            - !Select ",
                                        "+              - 0",
                                        "+              - !Split ",
                                        "+                - \"-\"",
                                        "+                - !Select",
                                        "+                  - 2",
                                        "+                  - !Split",
                                        "+                    - \"/\"",
                                        "+                    - !Ref AWS::StackId",
                                        "         DefaultRootObject: \"index.html\"",
                                        "         Enabled: true",
                                        "         HttpVersion: http2",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "67488b67f0e7c8413276e02e4ef48d322b70e0d4",
                    "link": "https://github.com/aws-samples/aws-marketplace-serverless-saas-integration/commit/67488b67f0e7c8413276e02e4ef48d322b70e0d4",
                    "files": [
                        {
                            "name": "template.yaml",
                            "content": {
                                "current": "AWSTemplateFormatVersion: \"2010-09-09\"\nTransform: AWS::Serverless-2016-10-31\nDescription: \"AWS Marketplace Serverless SaaS Integration Application\"\nGlobals:\n  Function:\n    Timeout: 15\n  Api:\n    Cors:\n      AllowMethods: \"'POST,OPTIONS'\"\n      AllowHeaders: \"'*'\"\n      AllowOrigin: \"'*'\"\n      AllowCredentials: \"'*'\"\n\nParameters:\n\n  WebsiteS3BucketName:\n    Type: String\n    #AllowedPattern: \"(?!(^xn--|.+-s3alias$))^[a-z0-9][a-z0-9-]{1,61}[a-z0-9]$\"\n    ConstraintDescription: \"S3 bucket name must follow S3 recommendations https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html\"\n    Default: \"\"\n\n  NewSubscribersTableName:\n    Type: String\n    AllowedPattern: \".*\"\n    Default: \"AWSMarketplaceSubscribers\"\n\n  AWSMarketplaceMeteringRecordsTableName:\n    Type: String\n    AllowedPattern: \".*\"\n    Default: \"AWSMarketplaceMeteringRecords\"\n\n  TypeOfSaaSListing:\n    Type: String\n    Default: contracts_with_subscription\n    AllowedValues:\n      - contracts_with_subscription\n      - contracts\n      - subscriptions\n\n  SNSAccountID:\n    Type: String\n    Default: \"287250355862\"\n    Description: \"This is the AWS account hosting the SNS Entitlement and Subscription topics for your product.\"\n    AllowedValues:\n      - \"287250355862\"\n\n  SNSRegion:\n      Type: String\n      Default: \"us-east-1\"\n      Description: \"This is the AWS region of the SNS Entitlement and Subscription topics for your product.\"\n      AllowedValues: \n        - us-east-1\n  ProductCode:\n    Type: String\n    AllowedPattern: \".*\"\n\n  MarketplaceTechAdminEmail:\n    Type: String\n    AllowedPattern: \".*\"\n\n  MarketplaceSellerEmail:\n    Type: String\n    AllowedPattern: \".*\"\n    Default: \"\"\n\n  CreateCrossAccountRole:\n    Default: false\n    Description: \"Do you intend to use cross account access with this integration core?\"\n    Type: String\n    AllowedValues: [true, false]\n  \n  CrossAccountId:\n    Default: ''\n    Description: \"Enter the cross AWS account id\"\n    Type: String\n\n  CrossAccountRoleName: \n    Type: String\n    Description: \"Your Role Name (ex: OrganizationAccountAccessRole); This will need to be the same across all of the Member Accounts\"\n\n  CreateRegistrationWebPage:\n    Default: true\n    Type: String\n    AllowedValues: [true, false]\n\nConditions:\n  CreateEntitlementLogic:\n    Fn::Or:\n      - !Equals [!Ref TypeOfSaaSListing, contracts_with_subscription]\n      - !Equals [!Ref TypeOfSaaSListing, contracts]\n\n  CreateSubscriptionLogic:\n    Fn::Or:\n      - !Equals [!Ref TypeOfSaaSListing, contracts_with_subscription]\n      - !Equals [!Ref TypeOfSaaSListing, subscriptions]\n\n  CreateWeb: !Equals [!Ref CreateRegistrationWebPage, true]\n  Buyernotificationemail: !Not [!Equals [!Ref MarketplaceSellerEmail, \"\"]]\n  CreateCrossAccount: !Equals [!Ref CreateCrossAccountRole, true]\n\n\nResources:\n\n  ServerlessApi:\n    Type: AWS::Serverless::Api\n    Properties:\n      StageName: Prod\n      MethodSettings:\n        - ResourcePath: /subscriber\n          HttpMethod: POST, OPTIONS\n        - ResourcePath: /redirectmarketplacetoken\n          HttpMethod: POST, OPTIONS\n\n  CrossAccountRoleForSaaSIntegration:\n    Type: AWS::IAM::Role\n    Condition: CreateCrossAccount\n    DependsOn: \n     - AWSMarketplaceMeteringRecords \n     - AWSMarketplaceSubscribers\n    Properties:\n      RoleName: !Join [\"-\", [!Ref \"AWS::StackName\", !Ref CrossAccountRoleName]]\n      AssumeRolePolicyDocument:\n        Version: 2012-10-17\n        Statement:\n          - Effect: Allow\n            Principal:\n              AWS:\n                - !Join [\":\", [\"arn:aws:iam:\", !Ref CrossAccountId , \"root\"]]\n            Action:\n              - 'sts:AssumeRole'\n            Condition:\n              StringEquals:\n                'sts:ExternalId': !Ref CrossAccountRoleName\n      Path: /\n      Policies:\n        - PolicyName: !Join [\"-\", [!Ref \"AWS::StackName\", \"CrossAccountPolicy\"]]\n          PolicyDocument:\n            Version: 2012-10-17\n            Statement:\n              - Effect: Allow\n                Action:\n                  - 'dynamodb:PutItem'\n                  - 'dynamodb:DeleteItem'\n                  - 'dynamodb:UpdateItem'\n                Resource:\n                  - !GetAtt AWSMarketplaceMeteringRecords.Arn\n                  - !GetAtt AWSMarketplaceSubscribers.Arn\n                  \n  AWSMarketplaceMeteringRecords:\n    Type: AWS::DynamoDB::Table\n    Condition: CreateSubscriptionLogic\n    Properties:\n      AttributeDefinitions:\n        - AttributeName: \"customerIdentifier\"\n          AttributeType: \"S\"\n        - AttributeName: \"create_timestamp\"\n          AttributeType: \"N\"\n        - AttributeName: \"metering_pending\"\n          AttributeType: \"S\"\n\n      BillingMode: PAY_PER_REQUEST\n      KeySchema:\n        - AttributeName: \"customerIdentifier\"\n          KeyType: \"HASH\"\n        - AttributeName: \"create_timestamp\"\n          KeyType: \"RANGE\"\n      GlobalSecondaryIndexes:\n        - IndexName: PendingMeteringRecordsIndex\n          KeySchema:\n            - AttributeName: \"metering_pending\"\n              KeyType: \"HASH\"\n          Projection:\n            ProjectionType: ALL\n      TableName: !Ref AWSMarketplaceMeteringRecordsTableName\n\n  AWSMarketplaceSubscribers:\n    Type: AWS::DynamoDB::Table\n    Properties:\n      AttributeDefinitions:\n        - AttributeName: \"customerIdentifier\"\n          AttributeType: \"S\"\n      BillingMode: PAY_PER_REQUEST\n      KeySchema:\n        - AttributeName: \"customerIdentifier\"\n          KeyType: \"HASH\"\n      TableName: !Ref NewSubscribersTableName\n      StreamSpecification:\n        StreamViewType: NEW_AND_OLD_IMAGES\n  \n  RegisterNewMarketplaceCustomer:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: src/\n      Handler: register-new-subscriber.registerNewSubscriber\n      Runtime: nodejs18.x\n      Environment:\n        Variables:\n          NewSubscribersTableName: !Ref NewSubscribersTableName\n          EntitlementQueueUrl:\n            !If [CreateEntitlementLogic, !Ref EntitlementSQSQueue, !Ref AWS::NoValue]\n          MarketplaceSellerEmail:\n            !If [Buyernotificationemail, !Ref MarketplaceSellerEmail, !Ref AWS::NoValue]\n      Policies:\n        - DynamoDBWritePolicy:\n            TableName: !Ref NewSubscribersTableName\n        - Statement:\n            - Sid: AWSMarketplaceResolveCustomer\n              Effect: Allow\n              Action:\n                - aws-marketplace:ResolveCustomer\n              Resource: \"*\"\n        - !If\n          - CreateEntitlementLogic\n          - Statement:\n              - Sid: SQSPolicy\n                Effect: Allow\n                Action:\n                  - sqs:SendMessage\n                Resource: !GetAtt EntitlementSQSQueue.Arn\n          - !Ref \"AWS::NoValue\"\n\n        - Statement:\n            - Sid: Sendemail\n              Effect: Allow\n              Action:\n                - ses:SendEmail\n              Resource: \"*\"\n      Events:\n        RegisterCustomer:\n          Type: Api\n          Properties:\n            Path: /subscriber\n            Method: post\n            RestApiId: !Ref ServerlessApi\n\n  EntitlementSQSQueue:\n    Type: AWS::SQS::Queue\n    Condition: CreateEntitlementLogic\n\n  EntitlementSQSHandler:\n    Type: AWS::Serverless::Function\n    Condition: CreateEntitlementLogic\n    Properties:\n      CodeUri: src\n      Handler: entitlement-sqs.handler\n      Runtime: nodejs18.x\n      Environment:\n        Variables:\n          NewSubscribersTableName: !Ref NewSubscribersTableName\n      Policies:\n        - DynamoDBWritePolicy:\n            TableName: !Ref NewSubscribersTableName\n        - SQSSendMessagePolicy:\n            QueueName: !GetAtt EntitlementSQSQueue.Arn\n        - Statement:\n            - Sid: AWSMarketplaceEntitlements\n              Effect: Allow\n              Action:\n                - aws-marketplace:GetEntitlements\n              Resource: \"*\"\n      Events:\n        MySQSEvent:\n          Type: SNS\n          Properties:\n            Topic:  !Sub 'arn:aws:sns:${SNSRegion}:${SNSAccountID}:aws-mp-entitlement-notification-${ProductCode}'\n            Region: !Sub '${SNSRegion}'\n            SqsSubscription:\n              BatchSize: 1\n              QueueArn: !GetAtt EntitlementSQSQueue.Arn\n              QueueUrl: !Ref EntitlementSQSQueue\n\n  SubscriptionSQSHandler:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: src\n      Handler: subscription-sqs.SQSHandler\n      Runtime: nodejs18.x\n      Environment:\n        Variables:\n          NewSubscribersTableName: !Ref NewSubscribersTableName\n          SupportSNSArn: !Ref SupportSNSTopic\n      Policies:\n        - DynamoDBWritePolicy:\n            TableName: !Ref NewSubscribersTableName\n        - Statement:\n            - Sid: SNSPublish\n              Effect: Allow\n              Action:\n                - sns:Publish\n              Resource: !Ref SupportSNSTopic\n      Events:\n        MySQSEvent:\n          Type: SNS\n          Properties:\n            #Topic: !Ref SubscriptionSNSTopic\n            Topic:  !Sub 'arn:aws:sns:${SNSRegion}:${SNSAccountID}:aws-mp-subscription-notification-${ProductCode}'\n            Region: !Sub '${SNSRegion}'\n            SqsSubscription: true\n\n  SupportSNSTopic:\n    Type: AWS::SNS::Topic\n    Properties:\n      Subscription:\n        - Endpoint: !Ref MarketplaceTechAdminEmail\n          Protocol: email\n\n  GrantOrRevokeAccess:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: src\n      Handler: grant-revoke-access-to-product.dynamodbStreamHandler\n      Runtime: nodejs18.x\n      Environment:\n        Variables:\n          SupportSNSArn: !Ref SupportSNSTopic\n          LOG_LEVEL: \"info\"\n      Policies:\n        - AWSLambdaDynamoDBExecutionRole\n        - Statement:\n            - Sid: SNSPublish\n              Effect: Allow\n              Action:\n                - sns:Publish\n              Resource: !Ref SupportSNSTopic\n      Events:\n        Stream:\n          Type: DynamoDB\n          Properties:\n            Stream: !GetAtt AWSMarketplaceSubscribers.StreamArn\n            BatchSize: 1\n            StartingPosition: TRIM_HORIZON\n\n  Hourly:\n    Type: AWS::Serverless::Function\n    Condition: CreateSubscriptionLogic\n    Properties:\n      CodeUri: src\n      Handler: metering-hourly-job.job\n      Runtime: nodejs18.x\n      Environment:\n        Variables:\n          SQSMeteringRecordsUrl: !Ref SQSMeteringRecords\n          AWSMarketplaceMeteringRecordsTableName: !Ref AWSMarketplaceMeteringRecordsTableName\n      Policies:\n        - DynamoDBReadPolicy:\n            TableName: !Ref AWSMarketplaceMeteringRecordsTableName\n        - SQSSendMessagePolicy:\n            QueueName: !GetAtt SQSMeteringRecords.QueueName\n      Events:\n        CWSchedule:\n          Type: Schedule\n          Properties:\n            Schedule: \"rate(1 hour)\"\n            Name: !Join [\"-\", [MeteringSchedule, !Ref AWS::StackName]]\n            Description: SaaS Metering\n            Enabled: TRUE\n\n  SQSMeteringRecords:\n    Type: AWS::SQS::Queue\n    Properties:\n      QueueName: !Join [\"-\", [!Ref AWS::StackName, SQSMeteringRecords.fifo]]\n      ContentBasedDeduplication: true\n      FifoQueue: true\n      MessageRetentionPeriod: 3000\n    Condition: CreateSubscriptionLogic\n\n  MeteringSQSHandler:\n    Type: AWS::Serverless::Function\n    Condition: CreateSubscriptionLogic\n    Properties:\n      CodeUri: src\n      Handler: metering-sqs.handler\n      Runtime: nodejs18.x\n      Environment:\n        Variables:\n          ProductCode: !Ref ProductCode\n          AWSMarketplaceMeteringRecordsTableName: !Ref AWSMarketplaceMeteringRecordsTableName\n      Policies:\n        - DynamoDBWritePolicy:\n            TableName: !Ref AWSMarketplaceMeteringRecordsTableName\n        - Statement:\n            - Sid: AWSMarketplaceMetering\n              Effect: Allow\n              Action:\n                - aws-marketplace:BatchMeterUsage\n              Resource: \"*\"\n      Events:\n        MySQSEvent:\n          Type: SQS\n          Properties:\n            Queue: !GetAtt SQSMeteringRecords.Arn\n            BatchSize: 1\n\n  \n          Bucket: !GetAtt WebsiteS3BucketLog.DomainName\n          IncludeCookies: false\n          Prefix: \"access-logs\"\n\n  WebsiteS3Bucket:\n    Type: AWS::S3::Bucket\n    Condition: CreateWeb\n    Properties:\n      BucketName: !Ref WebsiteS3BucketName\n\n  WebsiteS3BucketLog:\n    Type: AWS::S3::Bucket\n    Condition: CreateWeb\n    Properties:\n      BucketName: !Join [\"-\", [!Ref WebsiteS3BucketName, \"log\"]]\n      OwnershipControls:\n        Rules:\n          - ObjectOwnership: BucketOwnerPreferred\n      IntelligentTieringConfigurations:\n        - Id: !Join [\"-\", [!Ref WebsiteS3BucketName, \"log\"]]\n          Status: Enabled\n          Tierings:\n            - AccessTier: ARCHIVE_ACCESS\n              Days: 90\n\n  S3BucketPolicy:\n    Type: AWS::S3::BucketPolicy\n    Condition: CreateWeb\n    Properties:\n      Bucket: !Ref WebsiteS3Bucket\n      PolicyDocument:\n        # Restricting access to cloudfront only.\n        Statement:\n          - Effect: Allow\n            Sid: \"AllowCloudFrontServicePrincipal\"\n            Action: \"s3:GetObject\"\n            Resource:\n              - !Sub \"arn:aws:s3:::${WebsiteS3Bucket}/*\"\n            Principal:\n              Service: \"cloudfront.amazonaws.com\"\n            Condition:\n              StringEquals: \n                \"AWS:SourceArn\" : \n                  - !Sub \"arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudfrontDistribution}\"\n                \n\n  LambdaRedirectPostRequests:\n    Type: AWS::Serverless::Function\n    Condition: CreateWeb\n    Properties:\n      Runtime: nodejs18.x\n      CodeUri: src/\n      Handler: redirect.redirecthandler\n      AssumeRolePolicyDocument:\n        Version: \"2012-10-17\"\n        Statement:\n          - Effect: \"Allow\"\n            Action: \"sts:AssumeRole\"\n            Principal:\n              Service:\n                - \"lambda.amazonaws.com\"\n      Environment:\n        Variables:\n          RedirectUrl: https://aws-ia.github.io/cloudformation-aws-marketplace-saas/#_post_deployment_steps\n      Events:\n        RedirectMarketplaceToken:\n          Type: Api\n          Properties:\n            Path: /redirectmarketplacetoken\n            Method: post  \n            RestApiId: !Ref ServerlessApi\n\n  CloudFrontOriginAccessControl:\n    Type: \"AWS::CloudFront::OriginAccessControl\"\n    Properties: \n      OriginAccessControlConfig: \n        Description: !Sub \"Origin Access Control for static website - ${AWS::StackName}\"\n        Name: !Sub \"OAC - ${AWS::StackName}\"\n        OriginAccessControlOriginType: \"s3\"\n        SigningBehavior: \"always\"\n        SigningProtocol: \"sigv4\"\n\n\n  CloudfrontDistribution:\n    Type: \"AWS::CloudFront::Distribution\"\n    Condition: CreateWeb\n    DependsOn: ServerlessApi\n    Properties:\n      DistributionConfig:\n        Comment: !Sub \"Cloudfront distribution for serverless website - ${AWS::StackName}\"\n        DefaultRootObject: \"index.html\"\n        Enabled: true\n        HttpVersion: http2\n        # List of origins that Cloudfront will connect to\n        Origins:\n          - Id: s3-website\n            DomainName: !GetAtt WebsiteS3Bucket.RegionalDomainName\n            OriginAccessControlId: !Ref CloudFrontOriginAccessControl\n            S3OriginConfig:\n              OriginAccessIdentity: \"\"\n          - Id: api-gateway\n            DomainName: !Sub \"${ServerlessApi}.execute-api.${AWS::Region}.amazonaws.com\"\n            CustomOriginConfig:\n              OriginProtocolPolicy: \"https-only\"\n              OriginSSLProtocols:\n                - \"TLSv1.2\"\n              HTTPSPort: 443\n            OriginPath: \"/Prod\"\n        # To connect the CDN to the origins you need to specify behaviours\n        DefaultCacheBehavior:\n          # Compress resources automatically ( gzip )\n          Compress: true\n          AllowedMethods:\n            - HEAD\n            - DELETE\n            - POST\n            - GET\n            - OPTIONS\n            - PUT\n            - PATCH\n          ForwardedValues:\n            QueryString: false\n          TargetOriginId: s3-website\n          ViewerProtocolPolicy: redirect-to-https\n        CacheBehaviors:\n          - PathPattern: /redirectmarketplacetoken\n            AllowedMethods:\n            - HEAD\n            - DELETE\n            - POST\n            - GET\n            - OPTIONS\n            - PUT\n            - PATCH\n            TargetOriginId: api-gateway\n            ViewerProtocolPolicy: redirect-to-https\n            ResponseHeadersPolicyId: 60669652-455b-4ae9-85a4-c4c02393f86c\n            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad\n            OriginRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac\n          - PathPattern: /subscriber\n            AllowedMethods:\n            - HEAD\n            - DELETE\n            - POST\n            - GET\n            - OPTIONS\n            - PUT\n            - PATCH\n            TargetOriginId: api-gateway\n            ViewerProtocolPolicy: redirect-to-https\n            ResponseHeadersPolicyId: 60669652-455b-4ae9-85a4-c4c02393f86c\n            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad\n            OriginRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac\n        Logging:\n          Bucket: !GetAtt WebsiteS3BucketLog.DomainName\n          IncludeCookies: false\n          Prefix: \"access-logs\"\n\n\nOutputs:\n  RedirectUrl:\n    Description: URL to replace baseUrl value in web/script.js and lambda RedirectUrl (if applicable).\n    Value: \n      !If [\n        CreateWeb,\n        !Sub \"https://${CloudfrontDistribution.DomainName}/\",\n        !Sub \"https://${ServerlessApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/\"\n      ]\n\n  MarketplaceFulfillmentUrl:\n    Description: This is the marketplace fulfillment url.\n    Value:\n      !If [\n        CreateWeb,\n        !Sub \"https://${CloudfrontDistribution.DomainName}/redirectmarketplacetoken\",\n        !Sub \"https://${ServerlessApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/redirectmarketplacetoken\"\n      ]\n\n  CrossAccountRole:\n    Description: This is the cross account role ARN.\n    Value: \n      !If [\n        CreateCrossAccount,\n        !GetAtt CrossAccountRoleForSaaSIntegration.Arn,\n        \"N/A\"\n      ]\n\n  LandingPageUrl:\n    Description: URL to access your landing page.\n    Value:\n      !If [\n        CreateWeb,\n        !Sub \"https://${CloudfrontDistribution.DomainName}/index.html\",\n        \"N/A\"\n      ]\n",
                                "diffs": [
                                    [
                                        " AWSTemplateFormatVersion: \"2010-09-09\"",
                                        " Transform: AWS::Serverless-2016-10-31",
                                        "-Description: >",
                                        "-  AWS Marketplace Serverless SaaS Integration Application",
                                        "+Description: \"AWS Marketplace Serverless SaaS Integration Application\"",
                                        " Globals:",
                                        "   Function:",
                                        "     Timeout: 15"
                                    ],
                                    [
                                        "       - contracts",
                                        "       - subscriptions",
                                        " ",
                                        "+  SNSAccountID:",
                                        "+    Type: String",
                                        "+    Default: \"287250355862\"",
                                        "+    Description: \"This is the AWS account hosting the SNS Entitlement and Subscription topics for your product.\"",
                                        "+    AllowedValues:",
                                        "+      - \"287250355862\"",
                                        "+",
                                        "+  SNSRegion:",
                                        "+      Type: String",
                                        "+      Default: \"us-east-1\"",
                                        "+      Description: \"This is the AWS region of the SNS Entitlement and Subscription topics for your product.\"",
                                        "+      AllowedValues: ",
                                        "+        - us-east-1",
                                        "   ProductCode:",
                                        "     Type: String",
                                        "     AllowedPattern: \".*\""
                                    ],
                                    [
                                        "         MySQSEvent:",
                                        "           Type: SNS",
                                        "           Properties:",
                                        "-            Topic:  {\"Fn::Join\" : [\"\", [\"arn:aws:sns:us-east-1:287250355862:aws-mp-entitlement-notification-\", !Ref ProductCode]]}",
                                        "-            Region: us-east-1",
                                        "+            Topic:  !Sub 'arn:aws:sns:${SNSRegion}:${SNSAccountID}:aws-mp-entitlement-notification-${ProductCode}'",
                                        "+            Region: !Sub '${SNSRegion}'",
                                        "             SqsSubscription:",
                                        "               BatchSize: 1",
                                        "               QueueArn: !GetAtt EntitlementSQSQueue.Arn"
                                    ],
                                    [
                                        "           Type: SNS",
                                        "           Properties:",
                                        "             #Topic: !Ref SubscriptionSNSTopic",
                                        "-            Topic: {\"Fn::Join\" : [\"\", [\"arn:aws:sns:us-east-1:287250355862:aws-mp-subscription-notification-\", !Ref ProductCode]]}",
                                        "-            Region: us-east-1",
                                        "+            Topic:  !Sub 'arn:aws:sns:${SNSRegion}:${SNSAccountID}:aws-mp-subscription-notification-${ProductCode}'",
                                        "+            Region: !Sub '${SNSRegion}'",
                                        "             SqsSubscription: true",
                                        " ",
                                        "   SupportSNSTopic:",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "b2de6bd851f7c55db8567d12c86c8b9c19d470dc",
                    "link": "https://github.com/aws-samples/aws-marketplace-serverless-saas-integration/commit/b2de6bd851f7c55db8567d12c86c8b9c19d470dc",
                    "files": [
                        {
                            "name": "README.md",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " ParameterKey=SubscriptionSNSTopic,ParameterValue=<MARKETPLACE_SUBSCRIPTION_SNS_TOPIC> \\",
                                        " ParameterKey=MarketplaceTechAdminEmail,ParameterValue=<MARKETPLACE_TECH_ADMIN_EMAIL> \\",
                                        " ",
                                        "+#Check the accoutn for <MARKETPLACE_TECH_ADMIN_EMAIL> and approve the subscription to SNS",
                                        "+",
                                        " #Replace the baseUrl in web/script.js with the API Gateway endpoint URL ",
                                        " ",
                                        " aws s3 cp ./web/ s3://<WEBSITE_BUCKET_NAME>/ --recursive",
                                        "+",
                                        "+#add a CNAME record to your DNS to route the url you put on your offering to the cloudformation endpoint",
                                        "+",
                                        "+#add the domain used for your maretplace URL to the CNAME on the cloudformation config",
                                        " ```",
                                        " ### List of parameters",
                                        " ",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "32e465a27b518a8bb04df4262ba4500fa34b987a",
                    "link": "https://github.com/aws-samples/aws-marketplace-serverless-saas-integration/commit/32e465a27b518a8bb04df4262ba4500fa34b987a",
                    "files": [
                        {
                            "name": "buildspec.yaml",
                            "content": {
                                "current": "version: 0.2\nphases:\n  install:\n    runtime-versions:\n      nodejs: 14\n    commands:\n      - node --version\n  pre_build:\n    commands:\n      - npm install aws-cli-js\n      - echo \"${CODEBUILD_WEBHOOK_TRIGGER}\"\n      - echo \"${AWSMarketplaceMeteringRecordsTableName}\"\n      - echo \"${MarketplaceTechAdminEmail}\"\n      - echo \"${NewSubscribersTableName}\"\n      - echo \"${ProductCode}\"\n      - echo \"${TypeOfSaaSListing}\"\n      - echo \"${WebsiteS3BucketName}\"\n      - echo \"${SNSAccountID}\"\n      - echo \"${SNSRegion}\"\n      - echo \"${CreateCrossAccountRole}\"\n      - echo \"${CrossAccountId}\"\n      - echo \"${CrossAccountRoleName}\"\n      - echo \"${CreateRegistrationWebPage}\"\n  build:\n    commands:\n      - echo Build started\n      - sam build\n      - |\n        sam deploy --stack-name saas-serverless-${CODEBUILD_BUILD_NUMBER} --capabilities CAPABILITY_IAM \\\n        --region us-east-1 \\\n        --parameter-overrides \\\n\n        ParameterKey=WebsiteS3BucketName,ParameterValue=${WebsiteS3BucketName}-${CODEBUILD_BUILD_NUMBER} \\\n        ParameterKey=NewSubscribersTableName,ParameterValue=${NewSubscribersTableName}-${CODEBUILD_BUILD_NUMBER} \\\n        ParameterKey=AWSMarketplaceMeteringRecordsTableName,ParameterValue=${AWSMarketplaceMeteringRecordsTableName}-${CODEBUILD_BUILD_NUMBER} \\\n        ParameterKey=ProductCode,ParameterValue=${ProductCode} \\\n        ParameterKey=MarketplaceTechAdminEmail,ParameterValue=${MarketplaceTechAdminEmail} \\\n        ParameterKey=MarketplaceSellerEmail,ParameterValue=${MarketplaceTechAdminEmail} \\\n        ParameterKey=SNSAccountID,ParameterValue=${SNSAccountID} \\\n        ParameterKey=SNSRegion,ParameterValue=${SNSRegion} \\\n        ParameterKey=CreateCrossAccountRole,ParameterValue=${CreateCrossAccountRole} \\\n        ParameterKey=CrossAccountId,ParameterValue=${CrossAccountId} \\\n        ParameterKey=CrossAccountRoleName,ParameterValue=${CrossAccountRoleName}-${CODEBUILD_BUILD_NUMBER} \\\n        ParameterKey=CreateRegistrationWebPage,ParameterValue=${CreateRegistrationWebPage}\n        \n        aws s3 cp ./web/ s3://${WebsiteS3BucketName}-${CODEBUILD_BUILD_NUMBER}/ --recursive\n  post_build:\n    commands:\n      - echo Build completed\n      - LANDING_PAGE=$(aws cloudformation describe-stacks --stack-name saas-serverless-${CODEBUILD_BUILD_NUMBER} --query \"Stacks[0].Outputs[1].OutputValue\" --output text --region us-east-1)\n      - TEST_LANDING_PAGE=$(curl -I -s ${LANDING_PAGE} | head -n 1 | cut -d$' ' -f2)\n      - echo $TEST_LANDING_PAGE\n      - |\n        if [[ \"${TEST_LANDING_PAGE}\" == \"200\" ]]; \n          then exit 0; \n        else exit 1; \n        fi\nartifacts:\n  files:\n    - '**/*'",
                                "diffs": [
                                    [
                                        "     commands:",
                                        "       - echo Build started",
                                        "       - sam build",
                                        "-      - sam package --output-template-file packaged.yaml --s3-bucket saas-artifact-1 --region us-east-1",
                                        "       - |",
                                        "-        sam deploy --template-file packaged.yaml --stack-name saas-serverless-${CODEBUILD_BUILD_NUMBER} --capabilities CAPABILITY_IAM \\",
                                        "+        sam deploy --stack-name saas-serverless-${CODEBUILD_BUILD_NUMBER} --capabilities CAPABILITY_IAM \\",
                                        "         --region us-east-1 \\",
                                        "         --parameter-overrides \\",
                                        " ",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "c31ca403783ea5e360bb677d28fc2e35ee974851",
                    "link": "https://github.com/aws-samples/aws-marketplace-serverless-saas-integration/commit/c31ca403783ea5e360bb677d28fc2e35ee974851",
                    "files": [
                        {
                            "name": "template.yaml",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        "       - \"true\"",
                                        "       - \"false\"",
                                        " ",
                                        "+  UpdateFulfillmentURL:",
                                        "+    Default: \"false\"",
                                        "+    Type: String",
                                        "+    Description: \"WARNING: This will update your product's fulfillment URL automatically. Be careful if your product is already public\"",
                                        "+    AllowedValues:",
                                        "+      - \"true\"",
                                        "+      - \"false\"",
                                        "+",
                                        " Conditions:",
                                        "   CreateEntitlementLogic:",
                                        "     Fn::Or:"
                                    ],
                                    [
                                        "   CreateWeb: !Equals [!Ref CreateRegistrationWebPage, true]",
                                        "   Buyernotificationemail: !Not [!Equals [!Ref MarketplaceSellerEmail, \"\"]]",
                                        "   CreateCrossAccount: !Equals [!Ref CreateCrossAccountRole, true]",
                                        "-",
                                        "+  UpdateFulfillment: !Equals [!Ref UpdateFulfillmentURL, true]",
                                        " ",
                                        " Resources:",
                                        " "
                                    ],
                                    [
                                        "               - 'sts:AssumeRole'",
                                        "       ManagedPolicyArns:",
                                        "         - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                        "-        - arn:aws:iam::aws:policy/AWSMarketplaceSellerFullAccess",
                                        "+      Policies:",
                                        "+        - PolicyName: manage-products",
                                        "+          PolicyDocument:",
                                        "+            Version: 2012-10-17",
                                        "+            Statement:",
                                        "+              - Effect: Allow",
                                        "+                Action:",
                                        "+                  - \"aws-marketplace:StartChangeSet\"",
                                        "+                  - \"aws-marketplace:DescribeEntity\"",
                                        "+                Resource:",
                                        "+                  - !Sub \"arn:${AWS::Partition}:aws-marketplace:us-east-1:${AWS::AccountId}:AWSMarketplace/SaaSProduct/${ProductId}\"",
                                        "+                  - !Sub \"arn:${AWS::Partition}:aws-marketplace:us-east-1:${AWS::AccountId}:AWSMarketplace/ChangeSet/*\"",
                                        " ",
                                        "-  UpdateFulfillmentURL:",
                                        "+  FulfillmentURL:",
                                        "     Type: Custom::Lambda",
                                        "+    Condition: UpdateFulfillment",
                                        "     Properties:",
                                        "       ServiceToken: !GetAtt UpdateFulfillmentURLCustomResource.Arn",
                                        "       ProductId: !Ref ProductId",
                                        "-      # FulfillmentUrl: 'https://cachicamo.org'",
                                        "       FulfillmentUrl: !If [",
                                        "                         CreateWeb,",
                                        "                         !Sub \"https://${CloudfrontDistribution.DomainName}/redirectmarketplacetoken\","
                                    ],
                                    [
                                        "             }",
                                        "           };",
                                        "           ",
                                        "-          ",
                                        " Outputs:",
                                        " ",
                                        "   CrossAccountRole:"
                                    ],
                                    [
                                        "         !GetAtt CrossAccountRoleForSaaSIntegration.Arn,",
                                        "         \"N/A\"",
                                        "       ]",
                                        "+",
                                        "   WebsiteS3Bucket:",
                                        "     Description: S3 bucket for hosting the static site. You can retrieve the files at https://github.com/aws-samples/aws-marketplace-serverless-saas-integration/tree/master/web.",
                                        "     Value: ",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "45bce421453542e9eef6e57af8dd6d03cbf55883",
                    "link": "https://github.com/aws-samples/aws-marketplace-serverless-saas-integration/commit/45bce421453542e9eef6e57af8dd6d03cbf55883",
                    "files": [
                        {
                            "name": "README.md",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " ",
                                        " 1. Follow the SAM guided experience to configure the deployment. Reference the following table for solution parameters.",
                                        "  ",
                                        "-Parameter name | Description",
                                        "------------- | -------------",
                                        "-Stack Name | Name of the resulting CloudFormation stack.",
                                        "-AWS Region | Name of the region that the solution is being deployed in. Default value: us-east-1",
                                        "-WebsiteS3BucketName | S3 bucket to store the HTML files; Mandatory if CreateRegistrationWebPage is set to true; will be created",
                                        "-NewSubscribersTableName | Name for the New Subscribers Table; Default value: AWSMarketplaceSubscribers",
                                        "-AWSMarketplaceMeteringRecordsTableName | Name for the Metering Records Table; Default value: AWSMarketplaceMeteringRecords",
                                        "-TypeOfSaaSListing | allowed values: contracts_with_subscription, contracts, subscriptions; Default value: contracts_with_subscription",
                                        "-ProductCode | Product code provided from AWS Marketplace",
                                        "-MarketplaceTechAdminEmail | Email to be notified on changes requiring action",
                                        "-MarketplaceSellerEmail | (Optional) Seller email address, verified in SES and in 'Production' mode. See [Verify an email address](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-email-addresses-procedure.html) for instruction to verify email addresses.",
                                        "-SNSAccountID | AWS account ID hosting the Entitlements and Subscriptions SNS topics. Leave as default.",
                                        "-SNSRegion | AWS region that the Entitlements and Subscriptions SNS topics are hosted in. Leave as default.",
                                        "-CreateCrossAccountRole | Creates a cross-account role granting access to the NewSubscribersTableName and AWSMarketplaceMeteringRecordsTableName tables. Default value: false.",
                                        "-CrossAccountId | (Optional) AWS account ID for the cross-account role.",
                                        "-CrossAccountRoleName |  (Optional) Role name for the cross-account role.",
                                        "-CreateRegistrationWebPage | Creates a registration page. Default value: true",
                                        "+    Parameter name | Description",
                                        "+    ------------ | -------------",
                                        "+    Stack Name | Name of the resulting CloudFormation stack.",
                                        "+    AWS Region | Name of the region that the solution is being deployed in. Default value: us-east-1",
                                        "+    WebsiteS3BucketName | S3 bucket to store the HTML files; Mandatory if CreateRegistrationWebPage is set to true; will be created",
                                        "+    NewSubscribersTableName | Name for the New Subscribers Table; Default value: AWSMarketplaceSubscribers",
                                        "+    AWSMarketplaceMeteringRecordsTableName | Name for the Metering Records Table; Default value: AWSMarketplaceMeteringRecords",
                                        "+    TypeOfSaaSListing | allowed values: contracts_with_subscription, contracts, subscriptions; Default value: contracts_with_subscription",
                                        "+    ProductCode | Product code provided from AWS Marketplace",
                                        "+    MarketplaceTechAdminEmail | Email to be notified on changes requiring action",
                                        "+    MarketplaceSellerEmail | (Optional) Seller email address, verified in SES and in 'Production' mode. See [Verify an email address](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-email-addresses-procedure.html) for instruction to verify email addresses.",
                                        "+    SNSAccountID | AWS account ID hosting the Entitlements and Subscriptions SNS topics. Leave as default.",
                                        "+    SNSRegion | AWS region that the Entitlements and Subscriptions SNS topics are hosted in. Leave as default.",
                                        "+    CreateCrossAccountRole | Creates a cross-account role granting access to the NewSubscribersTableName and AWSMarketplaceMeteringRecordsTableName tables. Default value: false.",
                                        "+    CrossAccountId | (Optional) AWS account ID for the cross-account role.",
                                        "+    CrossAccountRoleName |  (Optional) Role name for the cross-account role.",
                                        "+    CreateRegistrationWebPage | Creates a registration page. Default value: true",
                                        " ",
                                        " 1. Wait for the stack to complete successfully.",
                                        " ",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "276cd9a481e26d023eb03720c1e9978f0c8cc56c",
                    "link": "https://github.com/aws-samples/aws-marketplace-serverless-saas-integration/commit/276cd9a481e26d023eb03720c1e9978f0c8cc56c",
                    "files": [
                        {
                            "name": "src/grant-revoke-access-to-product.js",
                            "content": {
                                "current": "const AWS = require('aws-sdk');\n\nconst SNS = new AWS.SNS({ apiVersion: '2010-03-31' });\nconst { SupportSNSArn: TopicArn } = process.env;\n\n\nexports.dynamodbStreamHandler = async (event) => {\n  await Promise.all(event.Records.map(async (record) => {\n    const oldImage = AWS.DynamoDB.Converter.unmarshall(record.dynamodb.OldImage);\n    const newImage = AWS.DynamoDB.Converter.unmarshall(record.dynamodb.NewImage);\n\n    // eslint-disable-next-line no-console\n    console.log(`DynamoDb record updated! OldImage: ${JSON.stringify(oldImage)} | NewImage: ${JSON.stringify(newImage)}`);\n\n\n    /*\n      successfully_subscribed is set true:\n        - for SaaS Contracts: after reciving the entitlement in entitlement-sqs.js for the first time\n        - for SaaS Subscriptions: after reciving the subscribe-success message in subscription-sqs.js\n\n      subscription_expired is set to true:\n        - for SaaS Contracts: after detecting expired entitlement in entitlement-sqs.js\n        - for SaaS Subscriptions: after reciving the unsubscribe-success message in subscription-sqs.js\n    */\n    const grantAccess = newImage.successfully_subscribed === true\n      && oldImage.successfully_subscribed !== true;\n\n    const revokeAccess = newImage.subscription_expired === true\n      && !oldImage.subscription_expired;\n\n    let entitlementUpdated = false;\n\n    if (newImage.entitlement && oldImage.entitlement && (newImage.entitlement !== oldImage.entitlement)) {\n      entitlementUpdated = true;\n    }\n\n    if (grantAccess || revokeAccess || entitlementUpdated) {\n      let message = '';\n      let subject = '';\n\n\n      if (grantAccess) {\n        subject = 'New AWS Marketplace Subscriber';\n        message = `Grant access to new SaaS customer: ${JSON.stringify(newImage)}`;\n      } else if (revokeAccess) {\n        subject = 'AWS Marketplace customer end of subscription';\n        message = `Revoke access to SaaS customer: ${JSON.stringify(newImage)}`;\n      } else if (entitlementUpdated) {\n        subject = 'AWS Marketplace customer change of subscription';\n        message = `New entitlement for customer: ${JSON.stringify(newImage)}`;\n      }\n\n      const SNSparams = {\n        TopicArn,\n        Subject: subject,\n        Message: message,\n      };\n\n      await SNS.publish(SNSparams).promise();\n    }\n  }));\n\n\n  return {};\n};\n",
                                "diffs": [
                                    [
                                        " ",
                                        "     /*",
                                        "       successfully_subscribed is set true:",
                                        "-        - for SaaS Contracts: after reciving the entitelement in entitlement-sqs.js for the first time",
                                        "+        - for SaaS Contracts: after reciving the entitlement in entitlement-sqs.js for the first time",
                                        "         - for SaaS Subscriptions: after reciving the subscribe-success message in subscription-sqs.js",
                                        " ",
                                        "       subscription_expired is set to true:",
                                        "-        - for SaaS Contracts: after detecting expired entitelement in entitlement-sqs.js",
                                        "+        - for SaaS Contracts: after detecting expired entitlement in entitlement-sqs.js",
                                        "         - for SaaS Subscriptions: after reciving the unsubscribe-success message in subscription-sqs.js",
                                        "     */",
                                        "     const grantAccess = newImage.successfully_subscribed === true",
                                        "-                                        && oldImage.successfully_subscribed !== true;",
                                        "+      && oldImage.successfully_subscribed !== true;",
                                        " ",
                                        "     const revokeAccess = newImage.subscription_expired === true",
                                        "-                                        && !oldImage.subscription_expired;",
                                        "+      && !oldImage.subscription_expired;",
                                        " ",
                                        "-    let entitelementUpdated = false;",
                                        "+    let entitlementUpdated = false;",
                                        " ",
                                        "     if (newImage.entitlement && oldImage.entitlement && (newImage.entitlement !== oldImage.entitlement)) {",
                                        "-      entitelementUpdated = true;",
                                        "+      entitlementUpdated = true;",
                                        "     }",
                                        " ",
                                        "-    if (grantAccess || revokeAccess || entitelementUpdated) {",
                                        "+    if (grantAccess || revokeAccess || entitlementUpdated) {",
                                        "       let message = '';",
                                        "       let subject = '';",
                                        " "
                                    ],
                                    [
                                        "       } else if (revokeAccess) {",
                                        "         subject = 'AWS Marketplace customer end of subscription';",
                                        "         message = `Revoke access to SaaS customer: ${JSON.stringify(newImage)}`;",
                                        "-      } else if (entitelementUpdated) {",
                                        "+      } else if (entitlementUpdated) {",
                                        "         subject = 'AWS Marketplace customer change of subscription';",
                                        "         message = `New entitlement for customer: ${JSON.stringify(newImage)}`;",
                                        "       }",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/metering-hourly-job.js",
                            "content": {
                                "current": "const AWS = require('aws-sdk');\n\nconst dynamodb = new AWS.DynamoDB({ apiVersion: '2012-08-10', region: 'us-east-1' });\nconst sqs = new AWS.SQS({ apiVersion: '2012-11-05', region: 'us-east-1' });\n\nconst { SQSMeteringRecordsUrl: QueueUrl, AWSMarketplaceMeteringRecordsTableName } = process.env;\n\n\nasync function asyncForEach(array, callback) {\n  for (let index = 0; index < array.length; index++) {\n    await callback(array[index], index, array)\n  }\n}\n\nconst addUpDimensions = (objectArray) => Object.values(objectArray.reduce((accumulator, currentValue) => (\n  (accumulator[currentValue.dimension]\n    ? (accumulator[currentValue.dimension].value += currentValue.value)\n    : accumulator[currentValue.dimension] = { ...currentValue }\n  ), accumulator), {}));\n\n\nexports.job = async () => {\n  const params = {\n    TableName: AWSMarketplaceMeteringRecordsTableName,\n    IndexName: 'PendingMeteringRecordsIndex',\n    KeyConditionExpression: 'metering_pending = :b',\n    ExpressionAttributeValues: {\n      ':b': { S: 'true' },\n    },\n  };\n\n  const result = await dynamodb.query(params).promise();\n\n  const items = result.Items.map((i) => AWS.DynamoDB.Converter.unmarshall(i));\n  const hashMap = {};\n\n  items.map((item) => {\n    const { customerIdentifier } = item;\n\n    if (hashMap[customerIdentifier]) {\n      hashMap[customerIdentifier].create_timestamps.push(item.create_timestamp);\n      hashMap[customerIdentifier].dimension_usage = addUpDimensions([...hashMap[customerIdentifier].dimension_usage, ...item.dimension_usage]);\n    } else {\n      hashMap[customerIdentifier] = item;\n      hashMap[customerIdentifier].create_timestamps = [item.create_timestamp];\n      delete hashMap[customerIdentifier].create_timestamp;\n    }\n  });\n\n  await asyncForEach(Object.keys(hashMap), async (hash) => {\n    const SQSParams = {\n      MessageBody: JSON.stringify(hashMap[hash]),\n      MessageGroupId: hash,\n      QueueUrl,\n    };\n\n    try {\n      await sqs.sendMessage(SQSParams).promise();\n      console.log(`Records submitted to queue: ${JSON.stringify(hashMap[hash])}`);\n    } catch (error) {\n      console.error(error, error.stack);\n    }\n  });\n\n  return true;\n};\n",
                                "diffs": [
                                    [
                                        " const dynamodb = new AWS.DynamoDB({ apiVersion: '2012-08-10', region: 'us-east-1' });",
                                        " const sqs = new AWS.SQS({ apiVersion: '2012-11-05', region: 'us-east-1' });",
                                        " ",
                                        "-const { SQSMeteringRecrodsUrl: QueueUrl, AWSMarketplaceMeteringRecordsTableName } = process.env;",
                                        "+const { SQSMeteringRecordsUrl: QueueUrl, AWSMarketplaceMeteringRecordsTableName } = process.env;",
                                        " ",
                                        " ",
                                        " async function asyncForEach(array, callback) {",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/register-new-subscriber.js",
                            "content": {
                                "current": "const AWS = require('aws-sdk');\n\nconst marketplacemetering = new AWS.MarketplaceMetering({ apiVersion: '2016-01-14', region: 'us-east-1' });\nconst dynamodb = new AWS.DynamoDB({ apiVersion: '2012-08-10', region: 'us-east-1' });\nconst sqs = new AWS.SQS({ apiVersion: '2012-11-05', region: 'us-east-1' });\nconst { NewSubscribersTableName: newSubscribersTableName, EntitlementQueueUrl: entitlementQueueUrl } = process.env;\n\nconst lambdaResponse = (statusCode, body) => ({\n  statusCode,\n  headers: {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'OPTIONS,POST',\n  },\n\n  body: JSON.stringify(body),\n});\n\nexports.registerNewSubscriber = async (event) => {\n  const {\n    regToken, companyName, contactPerson, contactPhone, contactEmail,\n  } = JSON.parse(event.body);\n\n  // Validate the request\n  if (regToken && companyName && contactPerson && contactPhone && contactEmail) {\n    try {\n      // Call resolveCustomer to validate the subscriber\n      const resolveCustomerParams = {\n        RegistrationToken: regToken,\n      };\n\n      const resolveCustomerResponse = await marketplacemetering\n        .resolveCustomer(resolveCustomerParams)\n        .promise();\n\n      // Store new subscriber data in dynamoDb\n      const { CustomerIdentifier, ProductCode } = resolveCustomerResponse;\n\n      const datetime = new Date().getTime().toString();\n\n      const dynamoDbParams = {\n        TableName: newSubscribersTableName,\n        Item: {\n          companyName: { S: companyName },\n          contactPerson: { S: contactPerson },\n          contactPhone: { S: contactPhone },\n          contactEmail: { S: contactEmail },\n          customerIdentifier: { S: CustomerIdentifier },\n          productCode: { S: ProductCode },\n          created: { S: datetime },\n        },\n      };\n\n      await dynamodb.putItem(dynamoDbParams).promise();\n\n      // Only for SaaS Contracts, check entitlement\n      if (entitlementQueueUrl) {\n        const SQSParams = {\n          MessageBody: `{ \n              \"Type\": \"Notification\", \n              \"Message\" : {\n                  \"action\" : \"entitlement-updated\",\n                  \"customer-identifier\": \"${CustomerIdentifier}\",\n                  \"product-code\" : \"${ProductCode}\"\n                  } \n              }`,\n          QueueUrl: entitlementQueueUrl,\n        };\n\n        await sqs.sendMessage(SQSParams).promise();\n      }\n\n      return lambdaResponse(200, 'Success! Registration completed. You have purchased an enterprise product that requires some additional setup. A representative from our team will be contacting you within two business days with your account credentials. Please contact Support through our website if you have any questions.');\n    } catch (error) {\n      console.error(error);\n      return lambdaResponse(400, 'Registration data not valid. Please try again, or contact support!');\n    }\n  } else {\n    return lambdaResponse(400, 'Request no valid');\n  }\n};\n",
                                "diffs": [
                                    [
                                        "   // Validate the request",
                                        "   if (regToken && companyName && contactPerson && contactPhone && contactEmail) {",
                                        "     try {",
                                        "-      // Call resolveCustomer to validate the subscirber",
                                        "+      // Call resolveCustomer to validate the subscriber",
                                        "       const resolveCustomerParams = {",
                                        "         RegistrationToken: regToken,",
                                        "       };"
                                    ],
                                    [
                                        "         .resolveCustomer(resolveCustomerParams)",
                                        "         .promise();",
                                        " ",
                                        "-      // Store new subscirber data in dynmoDb",
                                        "+      // Store new subscriber data in dynamoDb",
                                        "       const { CustomerIdentifier, ProductCode } = resolveCustomerResponse;",
                                        " ",
                                        "       const datetime = new Date().getTime().toString();"
                                    ],
                                    [
                                        " ",
                                        "       await dynamodb.putItem(dynamoDbParams).promise();",
                                        " ",
                                        "-      // Only for SaaS Contracts, check entitelment",
                                        "+      // Only for SaaS Contracts, check entitlement",
                                        "       if (entitlementQueueUrl) {",
                                        "         const SQSParams = {",
                                        "           MessageBody: `{ ",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "template.yaml",
                            "content": {
                                "current": "AWSTemplateFormatVersion: \"2010-09-09\"\nTransform: AWS::Serverless-2016-10-31\nDescription: >\n  app\n\n  Sample SAM Template for app\n\nGlobals:\n  Function:\n    Timeout: 15\n  Api:\n    Cors:\n      AllowMethods: \"'POST,OPTIONS'\"\n      AllowHeaders: \"'*'\"\n      AllowOrigin: \"'*'\"\n      AllowCredentials: \"'*'\"\n\nParameters:\n  WebsiteS3BucketName:\n    Type: String\n    Default: \"\"\n\n  NewSubscribersTableName:\n    Type: String\n    AllowedPattern: \".*\"\n    Default: \"AWSMarketplaceSubscribers\"\n  \n  AWSMarketplaceMeteringRecordsTableName:\n    Type: String\n    AllowedPattern: \".*\"\n    Default: \"AWSMarketplaceMeteringRecords\"\n\n  TypeOfSaaSListing:\n    Type: String\n    Default: contracts_with_subscription\n    AllowedValues:\n      - contracts_with_subscription\n      - contracts\n      - subscriptions\n\n  ProductCode:\n    Type: String\n    AllowedPattern: \".*\"\n\n  MarketplaceTechAdminEmail:\n    Type: String\n    AllowedPattern: \".*\"\n\n  EntitlementSNSTopic:\n    Type: String\n    Default: \"\"\n\n  SubscriptionSNSTopic:\n    Type: String\n    Default: \"\"\n\n  CreateRegistrationWebPage:\n    Default: true\n    Type: String\n    AllowedValues: [true, false]\n\nConditions:\n  CreateEntitlementLogic:\n    Fn::Or:\n      - !Equals [!Ref TypeOfSaaSListing, contracts_with_subscription]\n      - !Equals [!Ref TypeOfSaaSListing, contracts]\n\n  CreateSubscriptionLogic:\n    Fn::Or:\n      - !Equals [!Ref TypeOfSaaSListing, contracts_with_subscription]\n      - !Equals [!Ref TypeOfSaaSListing, subscriptions]\n\n  CreateWeb: !Equals [!Ref CreateRegistrationWebPage, true]\n\nResources:\n  CloudFrontOriginAccessIdentity:\n    Type: \"AWS::CloudFront::CloudFrontOriginAccessIdentity\"\n    Condition: CreateWeb\n    Properties:\n      CloudFrontOriginAccessIdentityConfig:\n        Comment: \"Serverless website OA\"\n\n  CloudfrontDistribution:\n    Type: \"AWS::CloudFront::Distribution\"\n    Condition: CreateWeb\n    Properties:\n      DistributionConfig:\n        Comment: \"Cloudfront distribution for serverless website\"\n        DefaultRootObject: \"index.html\"\n        Enabled: true\n        HttpVersion: http2\n        # List of origins that Cloudfront will connect to\n        Origins:\n          - Id: s3-website\n            DomainName: !GetAtt WebsiteS3Bucket.DomainName\n            S3OriginConfig:\n              # Restricting Bucket access through an origin access identity\n              OriginAccessIdentity:\n                Fn::Sub: \"origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}\"\n        # To connect the CDN to the origins you need to specify behaviours\n        DefaultCacheBehavior:\n          # Compress resources automatically ( gzip )\n          Compress: true\n          AllowedMethods:\n            - HEAD\n            - DELETE\n            - POST\n            - GET\n            - OPTIONS\n            - PUT\n            - PATCH\n          ForwardedValues:\n            QueryString: false\n          LambdaFunctionAssociations:\n            - EventType: viewer-request\n              LambdaFunctionARN: !Ref LambdaEdgeRedirectPostRequests.Version\n              IncludeBody: true\n          TargetOriginId: s3-website\n          ViewerProtocolPolicy: redirect-to-https\n        Logging:\n          Bucket: !GetAtt WebsiteS3Bucket.DomainName\n          IncludeCookies: false\n          Prefix: \"access-logs\"\n\n  WebsiteS3Bucket:\n    Type: AWS::S3::Bucket\n    Condition: CreateWeb\n    Properties:\n      BucketName: !Ref WebsiteS3BucketName\n\n  S3BucketPolicy:\n    Type: AWS::S3::BucketPolicy\n    Condition: CreateWeb\n    Properties:\n      Bucket: !Ref WebsiteS3Bucket\n      PolicyDocument:\n        # Restricting access to cloudfront only.\n        Statement:\n          - Effect: Allow\n            Action: \"s3:GetObject\"\n            Resource:\n              - !Sub \"arn:aws:s3:::${WebsiteS3Bucket}/*\"\n            Principal:\n              AWS: !Sub \"arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}\"\n\n  LambdaEdgeRedirectPostRequests:\n    Type: AWS::Serverless::Function\n    Condition: CreateWeb\n    UpdateReplacePolicy: Delete\n    DeletionPolicy: Delete\n    Properties:\n      Runtime: nodejs12.x\n      CodeUri: src/lambda-edge/\n      Handler: edge-redirect.lambdaHandler\n      Timeout: 5\n      AutoPublishAlias: live\n      AssumeRolePolicyDocument:\n        Version: \"2012-10-17\"\n        Statement:\n          - Effect: \"Allow\"\n            Action: \"sts:AssumeRole\"\n            Principal:\n              Service:\n                - \"lambda.amazonaws.com\"\n                - \"edgelambda.amazonaws.com\"\n\n  AWSMarketplaceMeteringRecords:\n    Type: AWS::DynamoDB::Table\n    Condition: CreateSubscriptionLogic\n    Properties:\n      AttributeDefinitions:\n        - AttributeName: \"customerIdentifier\"\n          AttributeType: \"S\"\n        - AttributeName: \"create_timestamp\"\n          AttributeType: \"N\"\n        - AttributeName: \"metering_pending\"\n          AttributeType: \"S\"\n\n      BillingMode: PAY_PER_REQUEST\n      KeySchema:\n        - AttributeName: \"customerIdentifier\"\n          KeyType: \"HASH\"\n        - AttributeName: \"create_timestamp\"\n          KeyType: \"RANGE\"\n      GlobalSecondaryIndexes:\n        - IndexName: PendingMeteringRecordsIndex\n          KeySchema:\n            - AttributeName: \"metering_pending\"\n              KeyType: \"HASH\"\n          Projection:\n            ProjectionType: ALL\n      TableName: !Ref AWSMarketplaceMeteringRecordsTableName\n\n  AWSMarketplaceSubscribers:\n    Type: AWS::DynamoDB::Table\n    Properties:\n      AttributeDefinitions:\n        - AttributeName: \"customerIdentifier\"\n          AttributeType: \"S\"\n      BillingMode: PAY_PER_REQUEST\n      KeySchema:\n        - AttributeName: \"customerIdentifier\"\n          KeyType: \"HASH\"\n      TableName: !Ref NewSubscribersTableName\n      StreamSpecification:\n        StreamViewType: NEW_AND_OLD_IMAGES\n\n  RegisterNewMarketplaceCustomer:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: src/\n      Handler: register-new-subscriber.registerNewSubscriber\n      Runtime: nodejs12.x\n      Environment:\n        Variables:\n          NewSubscribersTableName: !Ref NewSubscribersTableName\n          EntitlementQueueUrl: !If [CreateEntitlementLogic, !Ref  EntitlementSQSQueue, '' ] \n      Policies:\n        - DynamoDBWritePolicy:\n            TableName: !Ref NewSubscribersTableName\n        - Statement:\n            - Sid: AWSMarketplaceResolveCustomer\n              Effect: Allow\n              Action:\n                - aws-marketplace:ResolveCustomer\n              Resource: \"*\"\n        - !If\n          - CreateEntitlementLogic\n          - Statement:\n            - Sid: SQSPolice\n              Effect: Allow\n              Action:\n                - sqs:SendMessage\n              Resource: !GetAtt EntitlementSQSQueue.Arn\n          - !Ref \"AWS::NoValue\"\n\n      Events:\n        RegisterCustomer:\n          Type: Api\n          Properties:\n            Path: /subscriber\n            Method: post\n\n  EntitlementSQSQueue:\n    Type: AWS::SQS::Queue\n    Condition: CreateEntitlementLogic\n\n  EntitlementSQSHandler:\n    Type: AWS::Serverless::Function\n    Condition: CreateEntitlementLogic\n    Properties:\n      CodeUri: src\n      Handler: entitlement-sqs.handler\n      Runtime: nodejs12.x\n      Environment:\n        Variables:\n          NewSubscribersTableName: !Ref NewSubscribersTableName\n      Policies:\n        - DynamoDBWritePolicy:\n            TableName: !Ref NewSubscribersTableName\n        - Statement:\n            - Sid: AWSMarketplaceEntitlements\n              Effect: Allow\n              Action:\n                - aws-marketplace:GetEntitlements\n              Resource: \"*\"\n      Events:\n        MySQSEvent:\n          Type: SNS\n          Properties:\n            Topic: !Ref EntitlementSNSTopic\n            SqsSubscription:\n              BatchSize: 1\n              QueueArn: !GetAtt EntitlementSQSQueue.Arn\n              QueueUrl: !Ref EntitlementSQSQueue\n\n  SubscriptionSQSHandler:\n    Type: AWS::Serverless::Function\n    Condition: CreateSubscriptionLogic\n    Properties:\n      CodeUri: src\n      Handler: subscription-sqs.SQSHandler\n      Runtime: nodejs12.x\n      Environment:\n        Variables:\n          NewSubscribersTableName: !Ref NewSubscribersTableName\n          SupportSNSArn: !Ref SupportSNSTopic\n      Policies:\n        - DynamoDBWritePolicy:\n            TableName: !Ref NewSubscribersTableName\n        - Statement:\n            - Sid: SNSPublish\n              Effect: Allow\n              Action:\n                - sns:Publish\n              Resource: !Ref SupportSNSTopic\n      Events:\n        MySQSEvent:\n          Type: SNS\n          Properties:\n            Topic: !Ref SubscriptionSNSTopic\n            SqsSubscription: true\n\n  SupportSNSTopic:\n    Type: AWS::SNS::Topic\n    Properties:\n      Subscription:\n      - Endpoint: !Ref MarketplaceTechAdminEmail\n        Protocol: email\n  \n  GrantOrRevokeAccess:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: src\n      Handler: grant-revoke-access-to-product.dynamodbStreamHandler\n      Runtime: nodejs12.x\n      Environment:\n        Variables:\n          SupportSNSArn: !Ref SupportSNSTopic\n      Policies: \n        - AWSLambdaDynamoDBExecutionRole\n        - Statement:\n            - Sid: SNSPublish\n              Effect: Allow\n              Action:\n                - sns:Publish\n              Resource: !Ref SupportSNSTopic\n      Events:\n        Stream:\n          Type: DynamoDB\n          Properties:\n            Stream: !GetAtt AWSMarketplaceSubscribers.StreamArn\n            BatchSize: 1\n            StartingPosition: TRIM_HORIZON\n\n  Hourly:\n    Type: AWS::Serverless::Function\n    Condition: CreateSubscriptionLogic\n    Properties:\n      CodeUri: src\n      Handler: metering-hourly-job.job\n      Runtime: nodejs12.x\n      Environment:\n        Variables:\n          SQSMeteringRecordsUrl: !Ref SQSMeteringRecords\n          AWSMarketplaceMeteringRecordsTableName: !Ref AWSMarketplaceMeteringRecordsTableName\n      Policies:\n        - DynamoDBReadPolicy:\n            TableName: !Ref AWSMarketplaceMeteringRecordsTableName\n        - SQSSendMessagePolicy:\n            QueueName: !GetAtt SQSMeteringRecords.QueueName\n      Events:\n        CWSchedule:\n          Type: Schedule\n          Properties:\n            Schedule: \"rate(1 hour)\"\n            Name: !Join [ \"-\", [MeteringSchedule,  !Ref AWS::StackName]]\n            Description: SaaS Metering\n            Enabled: TRUE\n\n  SQSMeteringRecords:\n    Type: AWS::SQS::Queue\n    Properties:\n      QueueName: !Join [ \"-\", [!Ref AWS::StackName, SQSMeteringRecords.fifo]]\n      ContentBasedDeduplication: true\n      FifoQueue: true\n      MessageRetentionPeriod: 3000\n    Condition: CreateSubscriptionLogic\n\n  MeteringSQSHandler:\n    Type: AWS::Serverless::Function\n    Condition: CreateSubscriptionLogic\n    Properties:\n      CodeUri: src\n      Handler: metering-sqs.handler\n      Runtime: nodejs12.x\n      Environment:\n        Variables:\n          ProductCode: !Ref ProductCode\n          AWSMarketplaceMeteringRecordsTableName: !Ref AWSMarketplaceMeteringRecordsTableName\n      Policies:\n        - DynamoDBWritePolicy:\n            TableName: !Ref AWSMarketplaceMeteringRecordsTableName\n        - Statement:\n            - Sid: AWSMarketplaceMetering\n              Effect: Allow\n              Action:\n                - aws-marketplace:BatchMeterUsage\n              Resource: \"*\"\n      Events:\n        MySQSEvent:\n          Type: SQS\n          Properties:\n            Queue: !GetAtt SQSMeteringRecords.Arn\n            BatchSize: 1\n",
                                "diffs": [
                                    [
                                        "       Runtime: nodejs12.x",
                                        "       Environment:",
                                        "         Variables:",
                                        "-          SQSMeteringRecrodsUrl: !Ref SQSMeteringRecrods",
                                        "+          SQSMeteringRecordsUrl: !Ref SQSMeteringRecords",
                                        "           AWSMarketplaceMeteringRecordsTableName: !Ref AWSMarketplaceMeteringRecordsTableName",
                                        "       Policies:",
                                        "         - DynamoDBReadPolicy:",
                                        "             TableName: !Ref AWSMarketplaceMeteringRecordsTableName",
                                        "         - SQSSendMessagePolicy:",
                                        "-            QueueName: !GetAtt SQSMeteringRecrods.QueueName",
                                        "+            QueueName: !GetAtt SQSMeteringRecords.QueueName",
                                        "       Events:",
                                        "         CWSchedule:",
                                        "           Type: Schedule"
                                    ],
                                    [
                                        "             Description: SaaS Metering",
                                        "             Enabled: TRUE",
                                        " ",
                                        "-  SQSMeteringRecrods:",
                                        "+  SQSMeteringRecords:",
                                        "     Type: AWS::SQS::Queue",
                                        "     Properties:",
                                        "-      QueueName: !Join [ \"-\", [!Ref AWS::StackName, SQSMeteringRecrods.fifo]]",
                                        "+      QueueName: !Join [ \"-\", [!Ref AWS::StackName, SQSMeteringRecords.fifo]]",
                                        "       ContentBasedDeduplication: true",
                                        "       FifoQueue: true",
                                        "       MessageRetentionPeriod: 3000"
                                    ],
                                    [
                                        "         MySQSEvent:",
                                        "           Type: SQS",
                                        "           Properties:",
                                        "-            Queue: !GetAtt SQSMeteringRecrods.Arn",
                                        "+            Queue: !GetAtt SQSMeteringRecords.Arn",
                                        "             BatchSize: 1",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "e1905bf112a184a0941f1cc212e5d4105462a589",
                    "link": "https://github.com/aws-samples/aws-marketplace-serverless-saas-integration/commit/e1905bf112a184a0941f1cc212e5d4105462a589",
                    "files": [
                        {
                            "name": "template.yaml",
                            "content": {
                                "current": "AWSTemplateFormatVersion: \"2010-09-09\"\nTransform: AWS::Serverless-2016-10-31\nDescription: >\n  app\n  Sample SAM Template for app\nGlobals:\n  Function:\n    Timeout: 15\n  Api:\n    Cors:\n      AllowMethods: \"'POST,OPTIONS'\"\n      AllowHeaders: \"'*'\"\n      AllowOrigin: \"'*'\"\n      AllowCredentials: \"'*'\"\n\nParameters:\n  WebsiteS3BucketName:\n    Type: String\n    Default: \"\"\n\n  NewSubscribersTableName:\n    Type: String\n    AllowedPattern: \".*\"\n    Default: \"AWSMarketplaceSubscribers\"\n  \n  AWSMarketplaceMeteringRecordsTableName:\n    Type: String\n    AllowedPattern: \".*\"\n    Default: \"AWSMarketplaceMeteringRecords\"\n\n  TypeOfSaaSListing:\n    Type: String\n    Default: contracts_with_subscription\n    AllowedValues:\n      - contracts_with_subscription\n      - contracts\n      - subscriptions\n\n  ProductCode:\n    Type: String\n    AllowedPattern: \".*\"\n\n  MarketplaceTechAdminEmail:\n    Type: String\n    AllowedPattern: \".*\"\n  \n  MarketplaceSellerEmail:\n    Type: String\n    AllowedPattern: \".*\"\n    Default: \"\"\n\n  EntitlementSNSTopic:\n    Type: String\n    Default: \"\"\n\n  SubscriptionSNSTopic:\n    Type: String\n    Default: \"\"\n\n  CreateRegistrationWebPage:\n    Default: true\n    Type: String\n    AllowedValues: [true, false]\n\nConditions:\n  CreateEntitlementLogic:\n    Fn::Or:\n      - !Equals [!Ref TypeOfSaaSListing, contracts_with_subscription]\n      - !Equals [!Ref TypeOfSaaSListing, contracts]\n\n  CreateSubscriptionLogic:\n    Fn::Or:\n      - !Equals [!Ref TypeOfSaaSListing, contracts_with_subscription]\n      - !Equals [!Ref TypeOfSaaSListing, subscriptions]\n\n  CreateWeb: !Equals [!Ref CreateRegistrationWebPage, true]\n  Buyernotificationemail: !Not [!Equals [!Ref MarketplaceSellerEmail, \"\"]]\n    \n\nResources:\n  CloudFrontOriginAccessIdentity:\n    Type: \"AWS::CloudFront::CloudFrontOriginAccessIdentity\"\n    Condition: CreateWeb\n    Properties:\n      CloudFrontOriginAccessIdentityConfig:\n        Comment: \"Serverless website OA\"\n\n  CloudfrontDistribution:\n    Type: \"AWS::CloudFront::Distribution\"\n    Condition: CreateWeb\n    Properties:\n      DistributionConfig:\n        Comment: \"Cloudfront distribution for serverless website\"\n        DefaultRootObject: \"index.html\"\n        Enabled: true\n        HttpVersion: http2\n        # List of origins that Cloudfront will connect to\n        Origins:\n          - Id: s3-website\n            DomainName: !GetAtt WebsiteS3Bucket.DomainName\n            S3OriginConfig:\n              # Restricting Bucket access through an origin access identity\n              OriginAccessIdentity:\n                Fn::Sub: \"origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}\"\n        # To connect the CDN to the origins you need to specify behaviours\n        DefaultCacheBehavior:\n          # Compress resources automatically ( gzip )\n          Compress: true\n          AllowedMethods:\n            - HEAD\n            - DELETE\n            - POST\n            - GET\n            - OPTIONS\n            - PUT\n            - PATCH\n          ForwardedValues:\n            QueryString: false\n          LambdaFunctionAssociations:\n            - EventType: viewer-request\n              LambdaFunctionARN: !Ref LambdaEdgeRedirectPostRequests.Version\n              IncludeBody: true\n          TargetOriginId: s3-website\n          ViewerProtocolPolicy: redirect-to-https\n        Logging:\n          Bucket: !GetAtt WebsiteS3Bucket.DomainName\n          IncludeCookies: false\n          Prefix: \"access-logs\"\n\n  WebsiteS3Bucket:\n    Type: AWS::S3::Bucket\n    Condition: CreateWeb\n    Properties:\n      BucketName: !Ref WebsiteS3BucketName\n\n  S3BucketPolicy:\n    Type: AWS::S3::BucketPolicy\n    Condition: CreateWeb\n    Properties:\n      Bucket: !Ref WebsiteS3Bucket\n      PolicyDocument:\n        # Restricting access to cloudfront only.\n        Statement:\n          - Effect: Allow\n            Action: \"s3:GetObject\"\n            Resource:\n              - !Sub \"arn:aws:s3:::${WebsiteS3Bucket}/*\"\n            Principal:\n              AWS: !Sub \"arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}\"\n\n  LambdaEdgeRedirectPostRequests:\n    Type: AWS::Serverless::Function\n    Condition: CreateWeb\n    UpdateReplacePolicy: Delete\n    DeletionPolicy: Delete\n    Properties:\n      Runtime: nodejs12.x\n      CodeUri: src/lambda-edge/\n      Handler: edge-redirect.lambdaHandler\n      Timeout: 5\n      AutoPublishAlias: live\n      AssumeRolePolicyDocument:\n        Version: \"2012-10-17\"\n        Statement:\n          - Effect: \"Allow\"\n            Action: \"sts:AssumeRole\"\n            Principal:\n              Service:\n                - \"lambda.amazonaws.com\"\n                - \"edgelambda.amazonaws.com\"\n\n  AWSMarketplaceMeteringRecords:\n    Type: AWS::DynamoDB::Table\n    Condition: CreateSubscriptionLogic\n    Properties:\n      AttributeDefinitions:\n        - AttributeName: \"customerIdentifier\"\n          AttributeType: \"S\"\n        - AttributeName: \"create_timestamp\"\n          AttributeType: \"N\"\n        - AttributeName: \"metering_pending\"\n          AttributeType: \"S\"\n\n      BillingMode: PAY_PER_REQUEST\n      KeySchema:\n        - AttributeName: \"customerIdentifier\"\n          KeyType: \"HASH\"\n        - AttributeName: \"create_timestamp\"\n          KeyType: \"RANGE\"\n      GlobalSecondaryIndexes:\n        - IndexName: PendingMeteringRecordsIndex\n          KeySchema:\n            - AttributeName: \"metering_pending\"\n              KeyType: \"HASH\"\n          Projection:\n            ProjectionType: ALL\n      TableName: !Ref AWSMarketplaceMeteringRecordsTableName\n\n  AWSMarketplaceSubscribers:\n    Type: AWS::DynamoDB::Table\n    Properties:\n      AttributeDefinitions:\n        - AttributeName: \"customerIdentifier\"\n          AttributeType: \"S\"\n      BillingMode: PAY_PER_REQUEST\n      KeySchema:\n        - AttributeName: \"customerIdentifier\"\n          KeyType: \"HASH\"\n      TableName: !Ref NewSubscribersTableName\n      StreamSpecification:\n        StreamViewType: NEW_AND_OLD_IMAGES\n\n  RegisterNewMarketplaceCustomer:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: src/\n      Handler: register-new-subscriber.registerNewSubscriber\n      Runtime: nodejs12.x\n      Environment:\n        Variables:\n          NewSubscribersTableName: !Ref NewSubscribersTableName\n          EntitlementQueueUrl: !If [CreateEntitlementLogic, !Ref  EntitlementSQSQueue, '' ] \n          MarketplaceSellerEmail:\n            Fn::If:\n            - Buyernotificationemail\n            - Ref: MarketplaceSellerEmail  \n            - Ref: AWS::NoValue \n\n      Policies:\n        - DynamoDBWritePolicy:\n            TableName: !Ref NewSubscribersTableName\n        - Statement:\n            - Sid: AWSMarketplaceResolveCustomer\n              Effect: Allow\n              Action:\n                - aws-marketplace:ResolveCustomer\n              Resource: \"*\"\n        - !If\n          - CreateEntitlementLogic\n          - Statement:\n            - Sid: SQSPolicy\n              Effect: Allow\n              Action:\n                - sqs:SendMessage\n              Resource: !GetAtt EntitlementSQSQueue.Arn\n          - !Ref \"AWS::NoValue\"\n\n    \n        - Statement:\n          - Sid: Sendemail\n            Effect: Allow\n            Action:\n              - ses:SendEmail\n            Resource: \"*\" \n      Events:\n        RegisterCustomer:\n          Type: Api\n          Properties:\n            Path: /subscriber\n            Method: post\n\n  EntitlementSQSQueue:\n    Type: AWS::SQS::Queue\n    Condition: CreateEntitlementLogic\n\n  EntitlementSQSHandler:\n    Type: AWS::Serverless::Function\n    Condition: CreateEntitlementLogic\n    Properties:\n      CodeUri: src\n      Handler: entitlement-sqs.handler\n      Runtime: nodejs12.x\n      Environment:\n        Variables:\n          NewSubscribersTableName: !Ref NewSubscribersTableName\n      Policies:\n        - DynamoDBWritePolicy:\n            TableName: !Ref NewSubscribersTableName\n        - SQSSendMessagePolicy:\n            QueueName: !GetAtt EntitlementSQSQueue.Arn\n        - Statement:\n            - Sid: AWSMarketplaceEntitlements\n              Effect: Allow\n              Action:\n                - aws-marketplace:GetEntitlements\n              Resource: \"*\"\n      Events:\n        MySQSEvent:\n          Type: SNS\n          Properties:\n            Topic: !Ref EntitlementSNSTopic\n            SqsSubscription:\n              BatchSize: 1\n              QueueArn: !GetAtt EntitlementSQSQueue.Arn\n              QueueUrl: !Ref EntitlementSQSQueue\n\n  SubscriptionSQSHandler:\n    Type: AWS::Serverless::Function\n    Condition: CreateSubscriptionLogic\n    Properties:\n      CodeUri: src\n      Handler: subscription-sqs.SQSHandler\n      Runtime: nodejs12.x\n      Environment:\n        Variables:\n          NewSubscribersTableName: !Ref NewSubscribersTableName\n          SupportSNSArn: !Ref SupportSNSTopic\n      Policies:\n        - DynamoDBWritePolicy:\n            TableName: !Ref NewSubscribersTableName\n        - Statement:\n            - Sid: SNSPublish\n              Effect: Allow\n              Action:\n                - sns:Publish\n              Resource: !Ref SupportSNSTopic\n      Events:\n        MySQSEvent:\n          Type: SNS\n          Properties:\n            Topic: !Ref SubscriptionSNSTopic\n            SqsSubscription: true\n\n  SupportSNSTopic:\n    Type: AWS::SNS::Topic\n    Properties:\n      Subscription:\n      - Endpoint: !Ref MarketplaceTechAdminEmail\n        Protocol: email\n  \n  GrantOrRevokeAccess:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: src\n      Handler: grant-revoke-access-to-product.dynamodbStreamHandler\n      Runtime: nodejs12.x\n      Environment:\n        Variables:\n          SupportSNSArn: !Ref SupportSNSTopic\n      Policies: \n        - AWSLambdaDynamoDBExecutionRole\n        - Statement:\n            - Sid: SNSPublish\n              Effect: Allow\n              Action:\n                - sns:Publish\n              Resource: !Ref SupportSNSTopic\n      Events:\n        Stream:\n          Type: DynamoDB\n          Properties:\n            Stream: !GetAtt AWSMarketplaceSubscribers.StreamArn\n            BatchSize: 1\n            StartingPosition: TRIM_HORIZON\n\n  Hourly:\n    Type: AWS::Serverless::Function\n    Condition: CreateSubscriptionLogic\n    Properties:\n      CodeUri: src\n      Handler: metering-hourly-job.job\n      Runtime: nodejs12.x\n      Environment:\n        Variables:\n          SQSMeteringRecordsUrl: !Ref SQSMeteringRecords\n          AWSMarketplaceMeteringRecordsTableName: !Ref AWSMarketplaceMeteringRecordsTableName\n      Policies:\n        - DynamoDBReadPolicy:\n            TableName: !Ref AWSMarketplaceMeteringRecordsTableName\n        - SQSSendMessagePolicy:\n            QueueName: !GetAtt SQSMeteringRecords.QueueName\n      Events:\n        CWSchedule:\n          Type: Schedule\n          Properties:\n            Schedule: \"rate(1 hour)\"\n            Name: !Join [ \"-\", [MeteringSchedule,  !Ref AWS::StackName]]\n            Description: SaaS Metering\n            Enabled: TRUE\n\n  SQSMeteringRecords:\n    Type: AWS::SQS::Queue\n    Properties:\n      QueueName: !Join [ \"-\", [!Ref AWS::StackName, SQSMeteringRecords.fifo]]\n      ContentBasedDeduplication: true\n      FifoQueue: true\n      MessageRetentionPeriod: 3000\n    Condition: CreateSubscriptionLogic\n\n  MeteringSQSHandler:\n    Type: AWS::Serverless::Function\n    Condition: CreateSubscriptionLogic\n    Properties:\n      CodeUri: src\n      Handler: metering-sqs.handler\n      Runtime: nodejs12.x\n      Environment:\n        Variables:\n          ProductCode: !Ref ProductCode\n          AWSMarketplaceMeteringRecordsTableName: !Ref AWSMarketplaceMeteringRecordsTableName\n      Policies:\n        - DynamoDBWritePolicy:\n            TableName: !Ref AWSMarketplaceMeteringRecordsTableName\n        - Statement:\n            - Sid: AWSMarketplaceMetering\n              Effect: Allow\n              Action:\n                - aws-marketplace:BatchMeterUsage\n              Resource: \"*\"\n      Events:\n        MySQSEvent:\n          Type: SQS\n          Properties:\n            Queue: !GetAtt SQSMeteringRecords.Arn\n            BatchSize: 1\n",
                                "diffs": [
                                    [
                                        "         - !If",
                                        "           - CreateEntitlementLogic",
                                        "           - Statement:",
                                        "-            - Sid: SQSPolice",
                                        "+            - Sid: SQSPolicy",
                                        "               Effect: Allow",
                                        "               Action:",
                                        "                 - sqs:SendMessage",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "9f0fc059a11641164984496c517555fb8674840e",
                    "link": "https://github.com/aws-samples/aws-marketplace-serverless-saas-integration/commit/9f0fc059a11641164984496c517555fb8674840e",
                    "files": [
                        {
                            "name": ".gitignore",
                            "content": {
                                "current": "node_modules\n.vscode\n.aws-sam\n.DS_Store\npackaged.yaml\ndeploy.sh\nsamconfig.toml\n",
                                "diffs": [
                                    [
                                        " .aws-sam",
                                        " .DS_Store",
                                        " packaged.yaml",
                                        "-deploy.sh",
                                        "\\ No newline at end of file",
                                        "+deploy.sh",
                                        "+samconfig.toml",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/grant-revoke-access-to-product.js",
                            "content": {
                                "current": "const winston = require('winston');\nconst AWS = require('aws-sdk');\n\nconst SNS = new AWS.SNS({ apiVersion: '2010-03-31' });\nconst { SupportSNSArn: TopicArn } = process.env;\nconst logger = winston.createLogger({\n  level: process.env.LOG_LEVEL || 'info',\n  format: winston.format.json(),\n  transports: [\n    new winston.transports.Console(),\n  ],\n});\n\n\nexports.dynamodbStreamHandler = async (event, context) => {\n  await Promise.all(event.Records.map(async (record) => {\n    logger.defaultMeta = { requestId: context.awsRequestId };\n    logger.debug('event', { 'data': event });\n    logger.debug('context', { 'data': context });\n    const oldImage = AWS.DynamoDB.Converter.unmarshall(record.dynamodb.OldImage);\n    const newImage = AWS.DynamoDB.Converter.unmarshall(record.dynamodb.NewImage);\n\n    // eslint-disable-next-line no-console\n    logger.debug('OldImage', { 'data': oldImage });\n    logger.debug('NewImage', { 'data': newImage });\n    /*\n      successfully_subscribed is set true:\n        - for SaaS Contracts: no email is sent but after receiving the message in the subscription topic\n        - for SaaS Subscriptions: after reciving the subscribe-success message in subscription-sqs.js\n  \n      subscription_expired is set to true:\n        - for SaaS Contracts: after detecting expired entitlement in entitlement-sqs.js\n        - for SaaS Subscriptions: after reciving the unsubscribe-success message in subscription-sqs.js\n    */\n    const grantAccess = newImage.successfully_subscribed === true &&\n      typeof newImage.is_free_trial_term_present !== \"undefined\" &&\n      (oldImage.successfully_subscribed !== true || typeof oldImage.is_free_trial_term_present === \"undefined\")\n\n\n    const revokeAccess = newImage.subscription_expired === true\n      && !oldImage.subscription_expired;\n\n    let entitlementUpdated = false;\n\n    if (newImage.entitlement && oldImage.entitlement && (newImage.entitlement !== oldImage.entitlement)) {\n      entitlementUpdated = true;\n    }\n\n    logger.debug('grantAccess', { 'data': grantAccess });\n    logger.debug('revokeAccess:', { 'data': revokeAccess });\n    logger.debug('entitlementUpdated', { 'data': entitlementUpdated });\n\n    if (grantAccess || revokeAccess || entitlementUpdated) {\n      let message = '';\n      let subject = '';\n\n\n      if (grantAccess) {\n        subject = 'New AWS Marketplace Subscriber';\n        message = `Grant access to new SaaS customer: ${JSON.stringify(newImage)}`;\n      } else if (revokeAccess) {\n        subject = 'AWS Marketplace customer end of subscription';\n        message = `Revoke access to SaaS customer: ${JSON.stringify(newImage)}`;\n      } else if (entitlementUpdated) {\n        subject = 'AWS Marketplace customer change of subscription';\n        message = `New entitlement for customer: ${JSON.stringify(newImage)}`;\n      }\n\n      const SNSparams = {\n        TopicArn,\n        Subject: subject,\n        Message: message,\n      };\n\n      logger.info('Sending notification');\n      logger.debug('SNSparams', { 'data': SNSparams });\n      await SNS.publish(SNSparams).promise();\n    }\n  }));\n\n\n  return {};\n};\n",
                                "diffs": [
                                    [
                                        "+const winston = require('winston');",
                                        " const AWS = require('aws-sdk');",
                                        " ",
                                        " const SNS = new AWS.SNS({ apiVersion: '2010-03-31' });",
                                        " const { SupportSNSArn: TopicArn } = process.env;",
                                        "+const logger = winston.createLogger({",
                                        "+  level: process.env.LOG_LEVEL || 'info',",
                                        "+  format: winston.format.json(),",
                                        "+  transports: [",
                                        "+    new winston.transports.Console(),",
                                        "+  ],",
                                        "+});",
                                        " ",
                                        " ",
                                        "-exports.dynamodbStreamHandler = async (event) => {",
                                        "+exports.dynamodbStreamHandler = async (event, context) => {",
                                        "   await Promise.all(event.Records.map(async (record) => {",
                                        "+    logger.defaultMeta = { requestId: context.awsRequestId };",
                                        "+    logger.debug('event', { 'data': event });",
                                        "+    logger.debug('context', { 'data': context });",
                                        "     const oldImage = AWS.DynamoDB.Converter.unmarshall(record.dynamodb.OldImage);",
                                        "     const newImage = AWS.DynamoDB.Converter.unmarshall(record.dynamodb.NewImage);",
                                        " ",
                                        "     // eslint-disable-next-line no-console",
                                        "-    console.log(`DynamoDb record updated! OldImage: ${JSON.stringify(oldImage)} | NewImage: ${JSON.stringify(newImage)}`);",
                                        "-",
                                        "+    logger.debug('OldImage', { 'data': oldImage });",
                                        "+    logger.debug('NewImage', { 'data': newImage });",
                                        "     /*",
                                        "       successfully_subscribed is set true:",
                                        "         - for SaaS Contracts: no email is sent but after receiving the message in the subscription topic",
                                        "         - for SaaS Subscriptions: after reciving the subscribe-success message in subscription-sqs.js",
                                        "-",
                                        "+  ",
                                        "       subscription_expired is set to true:",
                                        "         - for SaaS Contracts: after detecting expired entitlement in entitlement-sqs.js",
                                        "         - for SaaS Subscriptions: after reciving the unsubscribe-success message in subscription-sqs.js",
                                        "     */",
                                        "-    const grantAccess = newImage.successfully_subscribed === true && ",
                                        "-      typeof newImage.is_free_trial_term_present !== \"undefined\" && ",
                                        "-      ( oldImage.successfully_subscribed !== true || typeof oldImage.is_free_trial_term_present === \"undefined\" )",
                                        "-      ",
                                        "+    const grantAccess = newImage.successfully_subscribed === true &&",
                                        "+      typeof newImage.is_free_trial_term_present !== \"undefined\" &&",
                                        "+      (oldImage.successfully_subscribed !== true || typeof oldImage.is_free_trial_term_present === \"undefined\")",
                                        "+",
                                        " ",
                                        "     const revokeAccess = newImage.subscription_expired === true",
                                        "       && !oldImage.subscription_expired;"
                                    ],
                                    [
                                        "       entitlementUpdated = true;",
                                        "     }",
                                        " ",
                                        "+    logger.debug('grantAccess', { 'data': grantAccess });",
                                        "+    logger.debug('revokeAccess:', { 'data': revokeAccess });",
                                        "+    logger.debug('entitlementUpdated', { 'data': entitlementUpdated });",
                                        "+",
                                        "     if (grantAccess || revokeAccess || entitlementUpdated) {",
                                        "       let message = '';",
                                        "       let subject = '';"
                                    ],
                                    [
                                        "         Message: message,",
                                        "       };",
                                        " ",
                                        "+      logger.info('Sending notification');",
                                        "+      logger.debug('SNSparams', { 'data': SNSparams });",
                                        "       await SNS.publish(SNSparams).promise();",
                                        "     }",
                                        "   }));",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "src/package.json",
                            "content": {
                                "current": "{\n  \"name\": \"aws-marketplace-saas-serverless-integration\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Sample integration for SaaS products with AWS Marketplace\",\n  \"repository\": \"https://github.com/orgs/aws-samples/aws-marketplace-saas-serverless-integration\",\n  \"author\": \"Martin Gjoshevski <gjoshm@amazon.com>\",\n  \"license\": \"MIT-0\",\n  \"dependencies\": {\n    \"aws-sdk\": \"^2.1083.0\",\n    \"winston\": \"3.8.2\"\n  }\n}",
                                "diffs": [
                                    [
                                        "   \"author\": \"Martin Gjoshevski <gjoshm@amazon.com>\",",
                                        "   \"license\": \"MIT-0\",",
                                        "   \"dependencies\": {",
                                        "-    \"aws-sdk\": \"^2.1083.0\"",
                                        "+    \"aws-sdk\": \"^2.1083.0\",",
                                        "+    \"winston\": \"3.8.2\"",
                                        "   }",
                                        "-}",
                                        "+}",
                                        "\\ No newline at end of file",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "template.yaml",
                            "content": {
                                "current": "AWSTemplateFormatVersion: \"2010-09-09\"\nTransform: AWS::Serverless-2016-10-31\nDescription: >\n  app\n  Sample SAM Template for app\nGlobals:\n  Function:\n    Timeout: 15\n  Api:\n    Cors:\n      AllowMethods: \"'POST,OPTIONS'\"\n      AllowHeaders: \"'*'\"\n      AllowOrigin: \"'*'\"\n      AllowCredentials: \"'*'\"\n\nParameters:\n  WebsiteS3BucketName:\n    Type: String\n    Default: \"\"\n\n  NewSubscribersTableName:\n    Type: String\n    AllowedPattern: \".*\"\n    Default: \"AWSMarketplaceSubscribers\"\n\n  AWSMarketplaceMeteringRecordsTableName:\n    Type: String\n    AllowedPattern: \".*\"\n    Default: \"AWSMarketplaceMeteringRecords\"\n\n  TypeOfSaaSListing:\n    Type: String\n    Default: contracts_with_subscription\n    AllowedValues:\n      - contracts_with_subscription\n      - contracts\n      - subscriptions\n\n  ProductCode:\n    Type: String\n    AllowedPattern: \".*\"\n\n  MarketplaceTechAdminEmail:\n    Type: String\n    AllowedPattern: \".*\"\n\n  MarketplaceSellerEmail:\n    Type: String\n    AllowedPattern: \".*\"\n    Default: \"\"\n\n  EntitlementSNSTopic:\n    Type: String\n    Default: \"\"\n\n  SubscriptionSNSTopic:\n    Type: String\n    Default: \"\"\n\n  CreateRegistrationWebPage:\n    Default: true\n    Type: String\n    AllowedValues: [true, false]\n\nConditions:\n  CreateEntitlementLogic:\n    Fn::Or:\n      - !Equals [!Ref TypeOfSaaSListing, contracts_with_subscription]\n      - !Equals [!Ref TypeOfSaaSListing, contracts]\n\n  CreateSubscriptionLogic:\n    Fn::Or:\n      - !Equals [!Ref TypeOfSaaSListing, contracts_with_subscription]\n      - !Equals [!Ref TypeOfSaaSListing, subscriptions]\n\n  CreateWeb: !Equals [!Ref CreateRegistrationWebPage, true]\n  Buyernotificationemail: !Not [!Equals [!Ref MarketplaceSellerEmail, \"\"]]\n\nResources:\n  CloudFrontOriginAccessIdentity:\n    Type: \"AWS::CloudFront::CloudFrontOriginAccessIdentity\"\n    Condition: CreateWeb\n    Properties:\n      CloudFrontOriginAccessIdentityConfig:\n        Comment: \"Serverless website OA\"\n\n  CloudfrontDistribution:\n    Type: \"AWS::CloudFront::Distribution\"\n    Condition: CreateWeb\n    Properties:\n      DistributionConfig:\n        Comment: \"Cloudfront distribution for serverless website\"\n        DefaultRootObject: \"index.html\"\n        Enabled: true\n        HttpVersion: http2\n        # List of origins that Cloudfront will connect to\n        Origins:\n          - Id: s3-website\n            DomainName: !GetAtt WebsiteS3Bucket.DomainName\n            S3OriginConfig:\n              # Restricting Bucket access through an origin access identity\n              OriginAccessIdentity:\n                Fn::Sub: \"origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}\"\n        # To connect the CDN to the origins you need to specify behaviours\n        DefaultCacheBehavior:\n          # Compress resources automatically ( gzip )\n          Compress: true\n          AllowedMethods:\n            - HEAD\n            - DELETE\n            - POST\n            - GET\n            - OPTIONS\n            - PUT\n            - PATCH\n          ForwardedValues:\n            QueryString: false\n          LambdaFunctionAssociations:\n            - EventType: viewer-request\n              LambdaFunctionARN: !Ref LambdaEdgeRedirectPostRequests.Version\n              IncludeBody: true\n          TargetOriginId: s3-website\n          ViewerProtocolPolicy: redirect-to-https\n        Logging:\n          Bucket: !GetAtt WebsiteS3BucketLog.DomainName\n          IncludeCookies: false\n          Prefix: \"access-logs\"\n\n  WebsiteS3Bucket:\n    Type: AWS::S3::Bucket\n    Condition: CreateWeb\n    Properties:\n      BucketName: !Ref WebsiteS3BucketName\n\n  WebsiteS3BucketLog:\n    Type: AWS::S3::Bucket\n    Condition: CreateWeb\n    Properties:\n      BucketName: !Join [\"-\", [!Ref WebsiteS3BucketName, \"log\"]]\n      IntelligentTieringConfigurations:\n        - Id: !Join [\"-\", [!Ref WebsiteS3BucketName, \"log\"]]\n          Status: Enabled\n          Tierings:\n            - AccessTier: ARCHIVE_ACCESS\n              Days: 90\n\n  S3BucketPolicy:\n    Type: AWS::S3::BucketPolicy\n    Condition: CreateWeb\n    Properties:\n      Bucket: !Ref WebsiteS3Bucket\n      PolicyDocument:\n        # Restricting access to cloudfront only.\n        Statement:\n          - Effect: Allow\n            Action: \"s3:GetObject\"\n            Resource:\n              - !Sub \"arn:aws:s3:::${WebsiteS3Bucket}/*\"\n            Principal:\n              AWS: !Sub \"arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}\"\n\n  LambdaEdgeRedirectPostRequests:\n    Type: AWS::Serverless::Function\n    Condition: CreateWeb\n    UpdateReplacePolicy: Delete\n    DeletionPolicy: Delete\n    Properties:\n      Runtime: nodejs18.x\n      CodeUri: src/lambda-edge/\n      Handler: edge-redirect.lambdaHandler\n      Timeout: 5\n      AutoPublishAlias: live\n      AssumeRolePolicyDocument:\n        Version: \"2012-10-17\"\n        Statement:\n          - Effect: \"Allow\"\n            Action: \"sts:AssumeRole\"\n            Principal:\n              Service:\n                - \"lambda.amazonaws.com\"\n                - \"edgelambda.amazonaws.com\"\n\n  AWSMarketplaceMeteringRecords:\n    Type: AWS::DynamoDB::Table\n    Condition: CreateSubscriptionLogic\n    Properties:\n      AttributeDefinitions:\n        - AttributeName: \"customerIdentifier\"\n          AttributeType: \"S\"\n        - AttributeName: \"create_timestamp\"\n          AttributeType: \"N\"\n        - AttributeName: \"metering_pending\"\n          AttributeType: \"S\"\n\n      BillingMode: PAY_PER_REQUEST\n      KeySchema:\n        - AttributeName: \"customerIdentifier\"\n          KeyType: \"HASH\"\n        - AttributeName: \"create_timestamp\"\n          KeyType: \"RANGE\"\n      GlobalSecondaryIndexes:\n        - IndexName: PendingMeteringRecordsIndex\n          KeySchema:\n            - AttributeName: \"metering_pending\"\n              KeyType: \"HASH\"\n          Projection:\n            ProjectionType: ALL\n      TableName: !Ref AWSMarketplaceMeteringRecordsTableName\n\n  AWSMarketplaceSubscribers:\n    Type: AWS::DynamoDB::Table\n    Properties:\n      AttributeDefinitions:\n        - AttributeName: \"customerIdentifier\"\n          AttributeType: \"S\"\n      BillingMode: PAY_PER_REQUEST\n      KeySchema:\n        - AttributeName: \"customerIdentifier\"\n          KeyType: \"HASH\"\n      TableName: !Ref NewSubscribersTableName\n      StreamSpecification:\n        StreamViewType: NEW_AND_OLD_IMAGES\n\n  RegisterNewMarketplaceCustomer:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: src/\n      Handler: register-new-subscriber.registerNewSubscriber\n      Runtime: nodejs18.x\n      Environment:\n        Variables:\n          NewSubscribersTableName: !Ref NewSubscribersTableName\n          EntitlementQueueUrl:\n            !If [CreateEntitlementLogic, !Ref EntitlementSQSQueue, \"\"]\n          MarketplaceSellerEmail:\n            Fn::If:\n              - Buyernotificationemail\n              - Ref: MarketplaceSellerEmail\n              - Ref: AWS::NoValue\n\n      Policies:\n        - DynamoDBWritePolicy:\n            TableName: !Ref NewSubscribersTableName\n        - Statement:\n            - Sid: AWSMarketplaceResolveCustomer\n              Effect: Allow\n              Action:\n                - aws-marketplace:ResolveCustomer\n              Resource: \"*\"\n        - !If\n          - CreateEntitlementLogic\n          - Statement:\n              - Sid: SQSPolicy\n                Effect: Allow\n                Action:\n                  - sqs:SendMessage\n                Resource: !GetAtt EntitlementSQSQueue.Arn\n          - !Ref \"AWS::NoValue\"\n\n        - Statement:\n            - Sid: Sendemail\n              Effect: Allow\n              Action:\n                - ses:SendEmail\n              Resource: \"*\"\n      Events:\n        RegisterCustomer:\n          Type: Api\n          Properties:\n            Path: /subscriber\n            Method: post\n\n  EntitlementSQSQueue:\n    Type: AWS::SQS::Queue\n    Condition: CreateEntitlementLogic\n\n  EntitlementSQSHandler:\n    Type: AWS::Serverless::Function\n    Condition: CreateEntitlementLogic\n    Properties:\n      CodeUri: src\n      Handler: entitlement-sqs.handler\n      Runtime: nodejs18.x\n      Environment:\n        Variables:\n          NewSubscribersTableName: !Ref NewSubscribersTableName\n      Policies:\n        - DynamoDBWritePolicy:\n            TableName: !Ref NewSubscribersTableName\n        - SQSSendMessagePolicy:\n            QueueName: !GetAtt EntitlementSQSQueue.Arn\n        - Statement:\n            - Sid: AWSMarketplaceEntitlements\n              Effect: Allow\n              Action:\n                - aws-marketplace:GetEntitlements\n              Resource: \"*\"\n      Events:\n        MySQSEvent:\n          Type: SNS\n          Properties:\n            Topic: !Ref EntitlementSNSTopic\n            SqsSubscription:\n              BatchSize: 1\n              QueueArn: !GetAtt EntitlementSQSQueue.Arn\n              QueueUrl: !Ref EntitlementSQSQueue\n\n  SubscriptionSQSHandler:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: src\n      Handler: subscription-sqs.SQSHandler\n      Runtime: nodejs18.x\n      Environment:\n        Variables:\n          NewSubscribersTableName: !Ref NewSubscribersTableName\n          SupportSNSArn: !Ref SupportSNSTopic\n      Policies:\n        - DynamoDBWritePolicy:\n            TableName: !Ref NewSubscribersTableName\n        - Statement:\n            - Sid: SNSPublish\n              Effect: Allow\n              Action:\n                - sns:Publish\n              Resource: !Ref SupportSNSTopic\n      Events:\n        MySQSEvent:\n          Type: SNS\n          Properties:\n            Topic: !Ref SubscriptionSNSTopic\n            SqsSubscription: true\n\n  SupportSNSTopic:\n    Type: AWS::SNS::Topic\n    Properties:\n      Subscription:\n        - Endpoint: !Ref MarketplaceTechAdminEmail\n          Protocol: email\n\n  GrantOrRevokeAccess:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: src\n      Handler: grant-revoke-access-to-product.dynamodbStreamHandler\n      Runtime: nodejs18.x\n      Environment:\n        Variables:\n          SupportSNSArn: !Ref SupportSNSTopic\n          LOG_LEVEL: \"info\"\n      Policies:\n        - AWSLambdaDynamoDBExecutionRole\n        - Statement:\n            - Sid: SNSPublish\n              Effect: Allow\n              Action:\n                - sns:Publish\n              Resource: !Ref SupportSNSTopic\n      Events:\n        Stream:\n          Type: DynamoDB\n          Properties:\n            Stream: !GetAtt AWSMarketplaceSubscribers.StreamArn\n            BatchSize: 1\n            StartingPosition: TRIM_HORIZON\n\n  Hourly:\n    Type: AWS::Serverless::Function\n    Condition: CreateSubscriptionLogic\n    Properties:\n      CodeUri: src\n      Handler: metering-hourly-job.job\n      Runtime: nodejs18.x\n      Environment:\n        Variables:\n          SQSMeteringRecordsUrl: !Ref SQSMeteringRecords\n          AWSMarketplaceMeteringRecordsTableName: !Ref AWSMarketplaceMeteringRecordsTableName\n      Policies:\n        - DynamoDBReadPolicy:\n            TableName: !Ref AWSMarketplaceMeteringRecordsTableName\n        - SQSSendMessagePolicy:\n            QueueName: !GetAtt SQSMeteringRecords.QueueName\n      Events:\n        CWSchedule:\n          Type: Schedule\n          Properties:\n            Schedule: \"rate(1 hour)\"\n            Name: !Join [\"-\", [MeteringSchedule, !Ref AWS::StackName]]\n            Description: SaaS Metering\n            Enabled: TRUE\n\n  SQSMeteringRecords:\n    Type: AWS::SQS::Queue\n    Properties:\n      QueueName: !Join [\"-\", [!Ref AWS::StackName, SQSMeteringRecords.fifo]]\n      ContentBasedDeduplication: true\n      FifoQueue: true\n      MessageRetentionPeriod: 3000\n    Condition: CreateSubscriptionLogic\n\n  MeteringSQSHandler:\n    Type: AWS::Serverless::Function\n    Condition: CreateSubscriptionLogic\n    Properties:\n      CodeUri: src\n      Handler: metering-sqs.handler\n      Runtime: nodejs18.x\n      Environment:\n        Variables:\n          ProductCode: !Ref ProductCode\n          AWSMarketplaceMeteringRecordsTableName: !Ref AWSMarketplaceMeteringRecordsTableName\n      Policies:\n        - DynamoDBWritePolicy:\n            TableName: !Ref AWSMarketplaceMeteringRecordsTableName\n        - Statement:\n            - Sid: AWSMarketplaceMetering\n              Effect: Allow\n              Action:\n                - aws-marketplace:BatchMeterUsage\n              Resource: \"*\"\n      Events:\n        MySQSEvent:\n          Type: SQS\n          Properties:\n            Queue: !GetAtt SQSMeteringRecords.Arn\n            BatchSize: 1\nOutputs:\n  APIUrl:\n    Description: API gateway URL to replace baseUrl value in web/script.js\n    Value: !Sub \"https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/\"\n\n  LandingPageUrl:\n    Description: URL to access your landing page and update SaaS URL field in your listing.\n    Value:\n      !If [\n        CreateWeb,\n        !Sub \"https://${CloudfrontDistribution.DomainName}/index.html\",\n        \"N/A\",\n      ]\n",
                                "diffs": [
                                    [
                                        "     Type: String",
                                        "     AllowedPattern: \".*\"",
                                        "     Default: \"AWSMarketplaceSubscribers\"",
                                        "-  ",
                                        "+",
                                        "   AWSMarketplaceMeteringRecordsTableName:",
                                        "     Type: String",
                                        "     AllowedPattern: \".*\""
                                    ],
                                    [
                                        "   MarketplaceTechAdminEmail:",
                                        "     Type: String",
                                        "     AllowedPattern: \".*\"",
                                        "-  ",
                                        "+",
                                        "   MarketplaceSellerEmail:",
                                        "     Type: String",
                                        "     AllowedPattern: \".*\""
                                    ],
                                    [
                                        " ",
                                        "   CreateWeb: !Equals [!Ref CreateRegistrationWebPage, true]",
                                        "   Buyernotificationemail: !Not [!Equals [!Ref MarketplaceSellerEmail, \"\"]]",
                                        "-    ",
                                        " ",
                                        " Resources:",
                                        "   CloudFrontOriginAccessIdentity:"
                                    ],
                                    [
                                        "     Condition: CreateWeb",
                                        "     Properties:",
                                        "       BucketName: !Ref WebsiteS3BucketName",
                                        "-  ",
                                        "+",
                                        "   WebsiteS3BucketLog:",
                                        "     Type: AWS::S3::Bucket",
                                        "     Condition: CreateWeb",
                                        "     Properties:",
                                        "-      BucketName: !Join [ \"-\", [!Ref WebsiteS3BucketName, \"log\"]]",
                                        "+      BucketName: !Join [\"-\", [!Ref WebsiteS3BucketName, \"log\"]]",
                                        "       IntelligentTieringConfigurations:",
                                        "-        - Id: !Join [ \"-\", [!Ref WebsiteS3BucketName, \"log\"]]",
                                        "+        - Id: !Join [\"-\", [!Ref WebsiteS3BucketName, \"log\"]]",
                                        "           Status: Enabled",
                                        "-          Tierings: ",
                                        "+          Tierings:",
                                        "             - AccessTier: ARCHIVE_ACCESS",
                                        "-              Days : 90",
                                        "-      ",
                                        "+              Days: 90",
                                        "+",
                                        "   S3BucketPolicy:",
                                        "     Type: AWS::S3::BucketPolicy",
                                        "     Condition: CreateWeb"
                                    ],
                                    [
                                        "     UpdateReplacePolicy: Delete",
                                        "     DeletionPolicy: Delete",
                                        "     Properties:",
                                        "-      Runtime: nodejs12.x",
                                        "+      Runtime: nodejs18.x",
                                        "       CodeUri: src/lambda-edge/",
                                        "       Handler: edge-redirect.lambdaHandler",
                                        "       Timeout: 5"
                                    ],
                                    [
                                        "     Properties:",
                                        "       CodeUri: src/",
                                        "       Handler: register-new-subscriber.registerNewSubscriber",
                                        "-      Runtime: nodejs12.x",
                                        "+      Runtime: nodejs18.x",
                                        "       Environment:",
                                        "         Variables:",
                                        "           NewSubscribersTableName: !Ref NewSubscribersTableName",
                                        "-          EntitlementQueueUrl: !If [CreateEntitlementLogic, !Ref  EntitlementSQSQueue, '' ] ",
                                        "+          EntitlementQueueUrl:",
                                        "+            !If [CreateEntitlementLogic, !Ref EntitlementSQSQueue, \"\"]",
                                        "           MarketplaceSellerEmail:",
                                        "             Fn::If:",
                                        "-            - Buyernotificationemail",
                                        "-            - Ref: MarketplaceSellerEmail  ",
                                        "-            - Ref: AWS::NoValue ",
                                        "+              - Buyernotificationemail",
                                        "+              - Ref: MarketplaceSellerEmail",
                                        "+              - Ref: AWS::NoValue",
                                        " ",
                                        "       Policies:",
                                        "         - DynamoDBWritePolicy:"
                                    ],
                                    [
                                        "         - !If",
                                        "           - CreateEntitlementLogic",
                                        "           - Statement:",
                                        "-            - Sid: SQSPolicy",
                                        "-              Effect: Allow",
                                        "-              Action:",
                                        "-                - sqs:SendMessage",
                                        "-              Resource: !GetAtt EntitlementSQSQueue.Arn",
                                        "+              - Sid: SQSPolicy",
                                        "+                Effect: Allow",
                                        "+                Action:",
                                        "+                  - sqs:SendMessage",
                                        "+                Resource: !GetAtt EntitlementSQSQueue.Arn",
                                        "           - !Ref \"AWS::NoValue\"",
                                        " ",
                                        "-    ",
                                        "         - Statement:",
                                        "-          - Sid: Sendemail",
                                        "-            Effect: Allow",
                                        "-            Action:",
                                        "-              - ses:SendEmail",
                                        "-            Resource: \"*\" ",
                                        "+            - Sid: Sendemail",
                                        "+              Effect: Allow",
                                        "+              Action:",
                                        "+                - ses:SendEmail",
                                        "+              Resource: \"*\"",
                                        "       Events:",
                                        "         RegisterCustomer:",
                                        "           Type: Api"
                                    ],
                                    [
                                        "     Properties:",
                                        "       CodeUri: src",
                                        "       Handler: entitlement-sqs.handler",
                                        "-      Runtime: nodejs12.x",
                                        "+      Runtime: nodejs18.x",
                                        "       Environment:",
                                        "         Variables:",
                                        "           NewSubscribersTableName: !Ref NewSubscribersTableName"
                                    ],
                                    [
                                        "     Properties:",
                                        "       CodeUri: src",
                                        "       Handler: subscription-sqs.SQSHandler",
                                        "-      Runtime: nodejs12.x",
                                        "+      Runtime: nodejs18.x",
                                        "       Environment:",
                                        "         Variables:",
                                        "           NewSubscribersTableName: !Ref NewSubscribersTableName"
                                    ],
                                    [
                                        "     Type: AWS::SNS::Topic",
                                        "     Properties:",
                                        "       Subscription:",
                                        "-      - Endpoint: !Ref MarketplaceTechAdminEmail",
                                        "-        Protocol: email",
                                        "-  ",
                                        "+        - Endpoint: !Ref MarketplaceTechAdminEmail",
                                        "+          Protocol: email",
                                        "+",
                                        "   GrantOrRevokeAccess:",
                                        "     Type: AWS::Serverless::Function",
                                        "     Properties:",
                                        "       CodeUri: src",
                                        "       Handler: grant-revoke-access-to-product.dynamodbStreamHandler",
                                        "-      Runtime: nodejs12.x",
                                        "+      Runtime: nodejs18.x",
                                        "       Environment:",
                                        "         Variables:",
                                        "           SupportSNSArn: !Ref SupportSNSTopic",
                                        "-      Policies: ",
                                        "+          LOG_LEVEL: \"info\"",
                                        "+      Policies:",
                                        "         - AWSLambdaDynamoDBExecutionRole",
                                        "         - Statement:",
                                        "             - Sid: SNSPublish"
                                    ],
                                    [
                                        "     Properties:",
                                        "       CodeUri: src",
                                        "       Handler: metering-hourly-job.job",
                                        "-      Runtime: nodejs12.x",
                                        "+      Runtime: nodejs18.x",
                                        "       Environment:",
                                        "         Variables:",
                                        "           SQSMeteringRecordsUrl: !Ref SQSMeteringRecords"
                                    ],
                                    [
                                        "           Type: Schedule",
                                        "           Properties:",
                                        "             Schedule: \"rate(1 hour)\"",
                                        "-            Name: !Join [ \"-\", [MeteringSchedule,  !Ref AWS::StackName]]",
                                        "+            Name: !Join [\"-\", [MeteringSchedule, !Ref AWS::StackName]]",
                                        "             Description: SaaS Metering",
                                        "             Enabled: TRUE",
                                        " ",
                                        "   SQSMeteringRecords:",
                                        "     Type: AWS::SQS::Queue",
                                        "     Properties:",
                                        "-      QueueName: !Join [ \"-\", [!Ref AWS::StackName, SQSMeteringRecords.fifo]]",
                                        "+      QueueName: !Join [\"-\", [!Ref AWS::StackName, SQSMeteringRecords.fifo]]",
                                        "       ContentBasedDeduplication: true",
                                        "       FifoQueue: true",
                                        "       MessageRetentionPeriod: 3000"
                                    ],
                                    [
                                        "     Properties:",
                                        "       CodeUri: src",
                                        "       Handler: metering-sqs.handler",
                                        "-      Runtime: nodejs12.x",
                                        "+      Runtime: nodejs18.x",
                                        "       Environment:",
                                        "         Variables:",
                                        "           ProductCode: !Ref ProductCode"
                                    ],
                                    [
                                        " ",
                                        "   LandingPageUrl:",
                                        "     Description: URL to access your landing page and update SaaS URL field in your listing.",
                                        "-    Value: !If [ CreateWeb,  !Sub \"https://${CloudfrontDistribution.DomainName}/index.html\", \"N/A\" ]",
                                        "+    Value:",
                                        "+      !If [",
                                        "+        CreateWeb,",
                                        "+        !Sub \"https://${CloudfrontDistribution.DomainName}/index.html\",",
                                        "+        \"N/A\",",
                                        "+      ]",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "e66fd3be328fc0cac95737aacc37eeff0ac00658",
                    "link": "https://github.com/aws-samples/aws-marketplace-serverless-saas-integration/commit/e66fd3be328fc0cac95737aacc37eeff0ac00658",
                    "files": [
                        {
                            "name": "README.md",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        " SubscriptionSNSTopic | SNS topic ARN provided from AWS Marketplace. Must exist.",
                                        " CreateRegistrationWebPage | true or false; Default value: true",
                                        " MarketplaceTechAdminEmail | Email to be notified on changes requiring action",
                                        "-MarketplaceSellerEmail | Seller SES verified email address",
                                        "+MarketplaceSellerEmail | Seller email address, verified in SES and in 'Production' mode",
                                        " ",
                                        " ",
                                        " ### Diagram of created resources",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "repo_name": "azure-search-python-samples",
            "org_name": "Azure-Samples",
            "commits": [
                {
                    "message": "",
                    "sha": "c9473ba9a9072283f48782f82d6f34d0c66187de",
                    "link": "https://github.com/Azure-Samples/azure-search-python-samples/commit/c9473ba9a9072283f48782f82d6f34d0c66187de",
                    "files": [
                        {
                            "name": "search-website/bulk-upload/.devcontainer/Dockerfile",
                            "content": {
                                "current": "# See here for image contents: https://github.com/microsoft/vscode-dev-containers/tree/v0.163.1/containers/python-3/.devcontainer/base.Dockerfile\n\n# [Choice] Python version: 3, 3.9, 3.8, 3.7, 3.6\nARG VARIANT=\"3\"\nFROM mcr.microsoft.com/vscode/devcontainers/python:0-${VARIANT}\n\n# [Option] Install Node.js\nARG INSTALL_NODE=\"true\"\nARG NODE_VERSION=\"lts/*\"\nRUN if [ \"${INSTALL_NODE}\" = \"true\" ]; then su vscode -c \"umask 0002 && . /usr/local/share/nvm/nvm.sh && nvm install ${NODE_VERSION} 2>&1\"; fi\n\n# [Optional] If your pip requirements rarely change, uncomment this section to add them to the image.\n# COPY requirements.txt /tmp/pip-tmp/\n# RUN pip3 --disable-pip-version-check --no-cache-dir install -r /tmp/pip-tmp/requirements.txt \\\n#    && rm -rf /tmp/pip-tmp\n\n# [Optional] Uncomment this section to install additional OS packages.\n# RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \\\n#     && apt-get -y install --no-install-recommends <your-package-list-here>\n\n# [Optional] Uncomment this line to install global node packages.\n# RUN su vscode -c \"source /usr/local/share/nvm/nvm.sh && npm install -g <your-package-here>\" 2>&1",
                                "diffs": [
                                    [
                                        "+# See here for image contents: https://github.com/microsoft/vscode-dev-containers/tree/v0.163.1/containers/python-3/.devcontainer/base.Dockerfile",
                                        "+",
                                        "+# [Choice] Python version: 3, 3.9, 3.8, 3.7, 3.6",
                                        "+ARG VARIANT=\"3\"",
                                        "+FROM mcr.microsoft.com/vscode/devcontainers/python:0-${VARIANT}",
                                        "+",
                                        "+# [Option] Install Node.js",
                                        "+ARG INSTALL_NODE=\"true\"",
                                        "+ARG NODE_VERSION=\"lts/*\"",
                                        "+RUN if [ \"${INSTALL_NODE}\" = \"true\" ]; then su vscode -c \"umask 0002 && . /usr/local/share/nvm/nvm.sh && nvm install ${NODE_VERSION} 2>&1\"; fi",
                                        "+",
                                        "+# [Optional] If your pip requirements rarely change, uncomment this section to add them to the image.",
                                        "+# COPY requirements.txt /tmp/pip-tmp/",
                                        "+# RUN pip3 --disable-pip-version-check --no-cache-dir install -r /tmp/pip-tmp/requirements.txt \\",
                                        "+#    && rm -rf /tmp/pip-tmp",
                                        "+",
                                        "+# [Optional] Uncomment this section to install additional OS packages.",
                                        "+# RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \\",
                                        "+#     && apt-get -y install --no-install-recommends <your-package-list-here>",
                                        "+",
                                        "+# [Optional] Uncomment this line to install global node packages.",
                                        "+# RUN su vscode -c \"source /usr/local/share/nvm/nvm.sh && npm install -g <your-package-here>\" 2>&1",
                                        "\\ No newline at end of file",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "search-website/bulk-upload/.devcontainer/devcontainer.json",
                            "content": {
                                "current": "// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:\n// https://github.com/microsoft/vscode-dev-containers/tree/v0.163.1/containers/python-3\n{\n\t\"name\": \"Python 3\",\n\t\"build\": {\n\t\t\"dockerfile\": \"Dockerfile\",\n\t\t\"context\": \"..\",\n\t\t\"args\": { \n\t\t\t// Update 'VARIANT' to pick a Python version: 3, 3.6, 3.7, 3.8, 3.9\n\t\t\t\"VARIANT\": \"3.9\",\n\t\t\t// Options\n\t\t\t\"INSTALL_NODE\": \"false\",\n\t\t\t\"NODE_VERSION\": \"lts/*\"\n\t\t}\n\t},\n\n\t// Set *default* container specific settings.json values on container create.\n\t\"settings\": { \n\t\t\"terminal.integrated.shell.linux\": \"/bin/bash\",\n\t\t\"python.pythonPath\": \"/usr/local/bin/python\",\n\t\t\"python.linting.enabled\": true,\n\t\t\"python.linting.pylintEnabled\": true,\n\t\t\"python.formatting.autopep8Path\": \"/usr/local/py-utils/bin/autopep8\",\n\t\t\"python.formatting.blackPath\": \"/usr/local/py-utils/bin/black\",\n\t\t\"python.formatting.yapfPath\": \"/usr/local/py-utils/bin/yapf\",\n\t\t\"python.linting.banditPath\": \"/usr/local/py-utils/bin/bandit\",\n\t\t\"python.linting.flake8Path\": \"/usr/local/py-utils/bin/flake8\",\n\t\t\"python.linting.mypyPath\": \"/usr/local/py-utils/bin/mypy\",\n\t\t\"python.linting.pycodestylePath\": \"/usr/local/py-utils/bin/pycodestyle\",\n\t\t\"python.linting.pydocstylePath\": \"/usr/local/py-utils/bin/pydocstyle\",\n\t\t\"python.linting.pylintPath\": \"/usr/local/py-utils/bin/pylint\"\n\t},\n\n\t// Add the IDs of extensions you want installed when the container is created.\n\t\"extensions\": [\n\t\t\"ms-python.python\"\n\t],\n\n\t// Use 'forwardPorts' to make a list of ports inside the container available locally.\n\t// \"forwardPorts\": [],\n\n\t// Use 'postCreateCommand' to run commands after the container is created.\n\t// \"postCreateCommand\": \"pip3 install --user -r requirements.txt\",\n\n\t// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.\n\t\"remoteUser\": \"vscode\"\n}\n",
                                "diffs": [
                                    [
                                        "+// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:",
                                        "+// https://github.com/microsoft/vscode-dev-containers/tree/v0.163.1/containers/python-3",
                                        "+{",
                                        "+\t\"name\": \"Python 3\",",
                                        "+\t\"build\": {",
                                        "+\t\t\"dockerfile\": \"Dockerfile\",",
                                        "+\t\t\"context\": \"..\",",
                                        "+\t\t\"args\": { ",
                                        "+\t\t\t// Update 'VARIANT' to pick a Python version: 3, 3.6, 3.7, 3.8, 3.9",
                                        "+\t\t\t\"VARIANT\": \"3.9\",",
                                        "+\t\t\t// Options",
                                        "+\t\t\t\"INSTALL_NODE\": \"false\",",
                                        "+\t\t\t\"NODE_VERSION\": \"lts/*\"",
                                        "+\t\t}",
                                        "+\t},",
                                        "+",
                                        "+\t// Set *default* container specific settings.json values on container create.",
                                        "+\t\"settings\": { ",
                                        "+\t\t\"terminal.integrated.shell.linux\": \"/bin/bash\",",
                                        "+\t\t\"python.pythonPath\": \"/usr/local/bin/python\",",
                                        "+\t\t\"python.linting.enabled\": true,",
                                        "+\t\t\"python.linting.pylintEnabled\": true,",
                                        "+\t\t\"python.formatting.autopep8Path\": \"/usr/local/py-utils/bin/autopep8\",",
                                        "+\t\t\"python.formatting.blackPath\": \"/usr/local/py-utils/bin/black\",",
                                        "+\t\t\"python.formatting.yapfPath\": \"/usr/local/py-utils/bin/yapf\",",
                                        "+\t\t\"python.linting.banditPath\": \"/usr/local/py-utils/bin/bandit\",",
                                        "+\t\t\"python.linting.flake8Path\": \"/usr/local/py-utils/bin/flake8\",",
                                        "+\t\t\"python.linting.mypyPath\": \"/usr/local/py-utils/bin/mypy\",",
                                        "+\t\t\"python.linting.pycodestylePath\": \"/usr/local/py-utils/bin/pycodestyle\",",
                                        "+\t\t\"python.linting.pydocstylePath\": \"/usr/local/py-utils/bin/pydocstyle\",",
                                        "+\t\t\"python.linting.pylintPath\": \"/usr/local/py-utils/bin/pylint\"",
                                        "+\t},",
                                        "+",
                                        "+\t// Add the IDs of extensions you want installed when the container is created.",
                                        "+\t\"extensions\": [",
                                        "+\t\t\"ms-python.python\"",
                                        "+\t],",
                                        "+",
                                        "+\t// Use 'forwardPorts' to make a list of ports inside the container available locally.",
                                        "+\t// \"forwardPorts\": [],",
                                        "+",
                                        "+\t// Use 'postCreateCommand' to run commands after the container is created.",
                                        "+\t// \"postCreateCommand\": \"pip3 install --user -r requirements.txt\",",
                                        "+",
                                        "+\t// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.",
                                        "+\t\"remoteUser\": \"vscode\"",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "search-website/bulk-upload/bulk-upload.py",
                            "content": {
                                "current": "import json\r\nimport requests\r\nimport pandas as pd\r\nfrom azure.core.credentials import AzureKeyCredential\r\nfrom azure.search.documents import SearchClient\r\nfrom azure.search.documents.indexes import SearchIndexClient\r\nfrom azure.search.documents.indexes.models import SearchIndex\r\n\r\n\r\n# Get the service endpoint and API key from the environment\r\nendpoint = 'https://YOUR-SEARCH-RESOURCE-NAME.search.windows.net'\r\nkey = 'YOUR-SEARCH-ADMIN-KEY'\r\n\r\n\r\n# Give your index a name\r\n# You can also supply this at runtime in __main__\r\nindex_name = 'good-books'\r\n\r\n# Books catalog\r\nbooks_url = \"https://raw.githubusercontent.com/zygmuntz/goodbooks-10k/master/books.csv\";\r\nbatch_size = 1000\r\n\r\n# Instantiate a client\r\nclass CreateClient(object):\r\n    def __init__(self, endpoint, key, index_name):\r\n        self.endpoint = endpoint\r\n        self.index_name = index_name\r\n        self.key = key\r\n        self.credentials = AzureKeyCredential(key)\r\n\r\n    # Create a SearchClient\r\n    # Use this to upload docs to the Index\r\n    def create_search_client(self):\r\n        return SearchClient(endpoint=self.endpoint,\r\n                            index_name=self.index_name,\r\n                            credential=self.credentials)\r\n\r\n    # Create a SearchIndexClient\r\n    # This is used to create, manage, and delete an index\r\n    def create_admin_client(self):\r\n        return SearchIndexClient(endpoint=endpoint,\r\n                                 credential=self.credentials)\r\n\r\n\r\n# Create Search Index from the schema\r\n# If reading the schema from a URL, set url=True\r\ndef create_schema_from_json_and_upload(schema, index_name, admin_client, url=False):\r\n    if not url:\r\n        with open(schema) as json_file:\r\n            schema_data = json.load(json_file)\r\n            upload_schema = admin_client.create_index(SearchIndex(name=index_name, fields=schema_data['fields']))\r\n            if upload_schema:\r\n                print(f'Schema uploaded; Index created for {index_name}.')\r\n            else:\r\n                exit(0)\r\n    else:\r\n        data_from_url = requests.get(schema)\r\n        schema_data = json.loads(data_from_url.content)\r\n        upload_schema = admin_client.create_index(SearchIndex(name=index_name, fields=schema_data['fields']))\r\n        if upload_schema:\r\n            print(f'Schema uploaded; Index created for {index_name}.')\r\n        else:\r\n            exit(0)\r\n\r\n\r\n# Convert CSV data to JSON\r\ndef convert_csv_to_json(url):\r\n    df = pd.read_csv(url)\r\n    convert = df.to_json(orient='records')\r\n    return json.loads(convert)\r\n\r\n\r\n# Batch your uploads to Azure Search\r\ndef batch_upload_json_data_to_index(json_file, client):\r\n    batch_array = []\r\n    count = 0\r\n    batch_counter = 0\r\n    for i in json_file:\r\n        count += 1\r\n        batch_array.append({\r\n            \"id\": str(i['book_id']),\r\n            \"goodreads_book_id\": int(i['goodreads_book_id']),\r\n            \"best_book_id\": int(i['best_book_id']),\r\n            \"work_id\": int(i['work_id']),\r\n            \"books_count\": i['books_count'] if i['books_count'] else 0,\r\n            \"isbn\": str(i['isbn']),\r\n            \"isbn13\": str(i['isbn13']),\r\n            \"authors\": i['authors'].split(',') if i['authors'] else None,\r\n            \"original_publication_year\": int(i['original_publication_year']) if i['original_publication_year'] else 0,\r\n            \"original_title\": i['original_title'],\r\n            \"title\": i['title'],\r\n            \"language_code\": i['language_code'],\r\n            \"average_rating\": int(i['average_rating']) if i['average_rating'] else 0,\r\n            \"ratings_count\": int(i['ratings_count']) if i['ratings_count'] else 0,\r\n            \"work_ratings_count\": int(i['work_ratings_count']) if i['work_ratings_count'] else 0,\r\n            \"work_text_reviews_count\": i['work_text_reviews_count'] if i['work_text_reviews_count'] else 0,\r\n            \"ratings_1\": int(i['ratings_1']) if i['ratings_1'] else 0,\r\n            \"ratings_2\": int(i['ratings_2']) if i['ratings_2'] else 0,\r\n            \"ratings_3\": int(i['ratings_3']) if i['ratings_3'] else 0,\r\n            \"ratings_4\": int(i['ratings_4']) if i['ratings_4'] else 0,\r\n            \"ratings_5\": int(i['ratings_5']) if i['ratings_5'] else 0,\r\n            \"image_url\": i['image_url'],\r\n            \"small_image_url\": i['small_image_url']\r\n        })\r\n\r\n        # In this sample, we limit batches to 1000 records.\r\n        # When the counter hits a number divisible by 1000, the batch is sent.\r\n        if count % batch_size == 0:\r\n            client.upload_documents(documents=batch_array)\r\n            batch_counter += 1\r\n            print(f'Batch sent! - #{batch_counter}')\r\n            batch_array = []\r\n\r\n    # This will catch any records left over, when not divisible by 1000\r\n    if len(batch_array) > 0:\r\n        client.upload_documents(documents=batch_array)\r\n        batch_counter += 1\r\n        print(f'Final batch sent! - #{batch_counter}')\r\n\r\n    print('Done!')\r\n\r\n\r\nif __name__ == '__main__':\r\n    start_client = CreateClient(endpoint, key, index_name)\r\n    admin_client = start_client.create_admin_client()\r\n    search_client = start_client.create_search_client()\r\n    schema = create_schema_from_json_and_upload(\r\n        './good-books-index.json',\r\n        index_name,\r\n        admin_client,\r\n        url=False)\r\n    books_data = convert_csv_to_json(books_url)\r\n    batch_upload = batch_upload_json_data_to_index(books_data, search_client)\r\n    print('Upload complete')\r\n",
                                "diffs": [
                                    [
                                        " ",
                                        " ",
                                        " # Get the service endpoint and API key from the environment",
                                        "-endpoint = 'YOUR-ENDPOINT-URL'",
                                        "-key = 'YOUR-KEY'",
                                        "+endpoint = 'https://YOUR-SEARCH-RESOURCE-NAME.search.windows.net'",
                                        "+key = 'YOUR-SEARCH-ADMIN-KEY'",
                                        " ",
                                        " ",
                                        " # Give your index a name",
                                        " # You can also supply this at runtime in __main__",
                                        "-index_name = 'YOUR-INDEX-NAME'",
                                        "+index_name = 'good-books'",
                                        " ",
                                        "+# Books catalog",
                                        "+books_url = \"https://raw.githubusercontent.com/zygmuntz/goodbooks-10k/master/books.csv\";",
                                        "+batch_size = 1000",
                                        " ",
                                        " # Instantiate a client",
                                        " class CreateClient(object):"
                                    ],
                                    [
                                        " # Batch your uploads to Azure Search",
                                        " def batch_upload_json_data_to_index(json_file, client):",
                                        "     batch_array = []",
                                        "-    batch_size = 1000",
                                        "     count = 0",
                                        "     batch_counter = 0",
                                        "     for i in json_file:"
                                    ],
                                    [
                                        "         './good-books-index.json',",
                                        "         index_name,",
                                        "         admin_client,",
                                        "-        url=True)",
                                        "-    books_data = convert_csv_to_json(",
                                        "-        'https://raw.githubusercontent.com/Azure-Samples/js-e2e/main/search/bulk-insert-books-from-csv/books.csv')",
                                        "+        url=False)",
                                        "+    books_data = convert_csv_to_json(books_url)",
                                        "     batch_upload = batch_upload_json_data_to_index(books_data, search_client)",
                                        "+    print('Upload complete')",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "search-website/bulk-upload/readme.md",
                            "content": {
                                "current": "# Bulk insert from CSV to Cognitive Search\n\n## Run program\n\n```bash\npip install -r requirements.txt && \\\npython bulk-upload.py\n```",
                                "diffs": [
                                    [
                                        "+# Bulk insert from CSV to Cognitive Search",
                                        "+",
                                        "+## Run program",
                                        "+",
                                        "+```bash",
                                        "+pip install -r requirements.txt && \\",
                                        "+python bulk-upload.py",
                                        "+```",
                                        "\\ No newline at end of file",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "60c948ac8334e35cee97e1ace8065b4226815202",
                    "link": "https://github.com/Azure-Samples/azure-search-python-samples/commit/60c948ac8334e35cee97e1ace8065b4226815202",
                    "files": [
                        {
                            "name": "search-website-functions-v4/README.md",
                            "content": {
                                "current": "---\npage_type: sample\nlanguages:\n  - python\nname: Add search to a Python app\nproducts:\n  - azure\n  - azure-cognitive-search\n  - azure-static-web-app\ndescription: |\n  Add document search to a web app. This Python sample uses the Azure.Search.Documents library to create, load, and query the index.\nurlFragment: python-sample-search-web-app\n---\n\n# Add search to a web app in Python\n\n![Flask sample MIT license badge](https://img.shields.io/badge/license-MIT-green.svg)\n\nThis Python sample shows you how to add document search to a web app using Azure Cognitive Search.\n\nFor this sample, you will use the [**azure-search-documents**](https://pypi.org/project/azure-search-documents/) library in the Azure SDK for Python to create, load, and query a search index containing the goodbooks-10k dataset, publicly available at [https://github.com/zygmuntz/goodbooks-10k](https://github.com/zygmuntz/goodbooks-10k). The search index runs on an [Azure Cognitive Search](https://docs.microsoft.com/azure/search/search-what-is-azure-search) service that you create. You can use the free tier for this sample.\n\nOptionally, this sample includes a devcontainer.json file so that you can run the code locally, as a developer, with the assurance that the environment is correctly configured and your local system doesn't need anything beyond docker. You'll need the [Docker extension](https://code.visualstudio.com/docs/containers/overview) to do this. If you don't want to us Docker, you can run your code in a virtual environment instead. \n\nThe application itself is deployed as an Azure Static web app (which you can run locally), using the JavaScript React library to build the user interface and Azure Functions to handle the query requests against the search index.\n\nThis README is an shortened version of the [full Python tutorial](https://docs.microsoft.com//azure/search/tutorial-python-overview). \n\nRelated resources:\n\n* [Demo](https://victorious-beach-0ab88b51e.azurestaticapps.net/)\n\n* [Conceptual documentation](https://docs.microsoft.com/azure/search/)\n\n* [API reference](https://docs.microsoft.com/python/api/overview/azure/search-documents-readme?view=azure-python)\n\n* New to Python in Visual Studio Code? See [Getting Started with Python in Visual Studio Code](https://code.visualstudio.com/docs/python/python-tutorial)\n\nBelow is a screenshot of the app created through this sample code.\n\n![Screenshot of sample web app](./docs/images/web-app.png)\n\nYou can deploy the sample onto Azure or run it locally by following the steps below.\n\n## Prerequisites\n\n* [Python 3.7 or later](https://www.python.org/downloads/)\n* [Visual Studio Code](https://code.visualstudio.com/Download)\n* [Visual Studio  Code extension: Python](https://marketplace.visualstudio.com/items?itemName=ms-python.python)\n* [Visual Studio  Code extension: Azure Functions](https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-azurefunctions&WT.mc_id=shopathome-github-jopapa)\n* [Visual Studio Code extension: Azure Static Web Apps](https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-azurestaticwebapps)\n* [Azure Cognitive Search](https://docs.microsoft.com/azure/search/search-create-service-portal)\n\n[Visual Studio Code extension: Docker](https://code.visualstudio.com/docs/containers/overview) is optional, but necessary if you want to run the Python code in a container.\n\nAzure Static Web Apps is also required but you do not need to have this resource in advance. These instructions include inline steps for creating and configuring the web app in a later section.\n\n## Setup\n\n1. Clone (or Fork and Clone) this repository.\n1. Open `./search-website` in Visual Studio Code.\n\nThis sample code runs the Azure Function API remotely on your cloned repository. If you intend to run it locally, you need to [install azure-functions-core-tools](https://docs.microsoft.com/azure/azure-functions/functions-run-local?WT.mc_id=shopathome-github-jopapa) globally with the following bash command: `npm install -g azure-functions-core-tools@3 --unsafe-perm true`\n\n## Create and load the index\n\n1. In Visual Studio Code, create a virtual environment.\n\n   * Ctrl+Shift+P > Terminal: Create New Integrated Terminal\n   * At the PS terminal command line, run these commands:\n\n     * `py -3 -m venv .venv`\n     * `.venv\\scripts\\activate`\n\n   You should see `(.venv)` in the PS command prompt. For example, `(.venv) PS C:\\Users\\user-name\\azure-search-python-samples\\search-website>`\n\n1. Run bulk-upload.py to load data.\n\n   * Change the following values in the `bulk_upload.py` file:\n\n     * Search service name (short name)\n     * Admin API key ([find the key in the portal](https://docs.microsoft.com/azure/search/search-security-api-keys#find-existing-keys))\n\n   * Install Python libraries and load the data. At the PS command line:\n\n     * `cd \\bulk-upload`  \n     * `py -m pip install -r requirements.txt`\n     * `py bulk-upload.py`\n\n   You should see status messages when the script runs, and you should have a good-books index created on your search service.\n\n## Deploy the web app\n\nDeploy the search-enabled website as an Azure Static web app. This deployment includes both the React app and the Function app for the user interface and business layer, respectively.\n\nThe following instructions create and configure the Azure Static Web App resource.\n\n1. Select **Azure** from the Activity Bar, then select **Static Web Apps** from the Side bar.\n\n1. Right-click on the subscription name then select **Create Static Web App (Advanced)**.\n\n1. Follow the prompts to provide the following information:\n\n    |Prompt|Enter|\n    |--|--|\n    |How do you want to create a Static Web App?|Use existing GitHub repository|\n    |Choose organization|Select your _own_ GitHub alias as the organization.|\n    |Choose repository|Select **azure-search-python-samples** from the list. |\n    |Choose branch of repository|Select **main** from the list. |\n    |Enter the name for the new Static Web App.|Create a unique name for your resource. For example, you can prepend your name to the repository name such as, `joansmith-azure-search-python-samples`. |\n    |Select a resource group for new resources.|Use the resource group you created for this tutorial.|\n    |Choose build preset to configure default project structure.|Select **Custom**|\n    |Select the location of your application code|`search-website/client`|\n    |Enter the path of your build output...|build|\n    |Select a location for new resources.|Select a region close to you.|\n\n1. The resource is created, select **Open Actions in GitHub** from the Notifications. This opens a browser window pointed to your forked repo. \n\n    The list of actions indicates your web app, both client and functions, were successfully pushed to your Azure Static Web App. \n\n    Wait until the build and deployment complete before continuing. This may take a minute or two to finish.\n\n1. Select **Azure** from the Activity Bar. \n\n1. Right-click on your Static web app resource then select **Open in Portal**.\n\n1. Select **Configuration** then select **+ Add**.\n\n1. Add each of the following settings:\n\n    |Setting|Your Search resource value|\n    |--|--|\n    |SearchApiKey|Your Search query key. You can [find query keys in the Azure portal](https://docs.microsoft.com/azure/search/search-security-api-keys#find-existing-keys)|\n    |SearchServiceName|Your Search resource name|\n    |SearchIndexName|`good-books`|\n    |SearchFacets|`authors*,language_code`|\n\n    For the `authors*` facet, adding a `*` after a field name denotes that the field is of type `Collection(Edm.String)`. This allows the Azure Function to add filters correctly to queries. \n\n1. Select **Save** to save the settings. \n\n1. Return to Visual Studio Code. \n\n1. Refresh your Static web app to see the Static web app's application settings. \n\n## Run queries in your app\n\n1. In Visual Studio Code, select **Azure** from the Activity Bar.\n\n1. In the Side bar, **right-click on your Azure subscription** under the `Static web apps` area and find the Static web app you created.\n\n1. Right-click the Static Web App name and select **Browse site**.\n\n1. Select **Open** in the pop-up dialog.\n\n1. In the website search bar, enter a search query such as `code`, _slowly_ so the suggest feature suggests book titles. Select a suggestion or continue entering your own query. Press enter when you've completed your search query. \n\n1. Review the results then select one of the books to see more details. \n\n## Clean up\n\nIf you no longer need Azure Cognitive Search or Azure Static Web Apps, remember to delete both resources in your subscription.\n",
                                "diffs": [
                                    [
                                        "      * Search service name (short name)",
                                        "      * Admin API key ([find the key in the portal](https://docs.microsoft.com/azure/search/search-security-api-keys#find-existing-keys))",
                                        " ",
                                        "-   * Set the Python interpreter to your virtual environment. Ctrl+Shift+P > Python: Select Interpreter, choosing your .venv environment. Refresh the list if you don't see a .venv option.",
                                        "-",
                                        "    * Install Python libraries and load the data. At the PS command line:",
                                        " ",
                                        "      * `cd \\bulk-upload`  ",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "8728dd278f41b55b2ad17b6b5878d0bba5ce8690",
                    "link": "https://github.com/Azure-Samples/azure-search-python-samples/commit/8728dd278f41b55b2ad17b6b5878d0bba5ce8690",
                    "files": [
                        {
                            "name": "Image-Processing/BFR_Sample_Rest.ipynb",
                            "content": {
                                "current": "{\n \"cells\": [\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"# Azure Cognitive Search sample \\n\",\n    \"## Passing Images as Binary File References\\n\",\n    \"\\n\",\n    \"Cognitive Search skillsets that need to pass images to custom skills use a binary file reference to serialize the images to pass them to and from skills. This sample demosntrates an example of how skills can be configured to accept an image as an input from the skillset and return images as outputs to the skillset. This example does nothing more than segment an image based on the layout from OCR. The sole purpose of this sample is to demosntrate how you pass images to skills and how skills can return images.\\n\",\n    \"\\n\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"### Configure service \\n\",\n    \"\\n\",\n    \"Provision the required services:\\n\",\n    \"1. Cognitive Search\\n\",\n    \"3. Azure Functions (Or any other compute environment you plan to host your API endpoint on). \\n\",\n    \"\\n\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"### Deploy the Azure functions app \\n\",\n    \"The ```SplitImage``` folder contains an Azure function that will accept an input in the [custom skill format](https://docs.microsoft.com/en-us/azure/search/cognitive-search-custom-skill-web-api#skill-inputs). \\n\",\n    \"Each input record contains an image that is serialized as a ```Base64``` encoded string and the layout text returned from the OCR skill.\\n\",\n    \"The skill then segments the image into smaller images based on the coordinates of the layout text. It then returns a list of images, each ```Base64``` encoded back to the skillset. While this is not very useful, you could build a [Custom Vision](https://github.com/Azure-Samples/azure-search-power-skills/tree/master/Vision/CustomVision) skill to perform a useful inference on your images.\\n\",\n    \"\\n\",\n    \"Follow the [Azure Functions tutorial](https://docs.microsoft.com/en-us/azure/developer/python/tutorial-vs-code-serverless-python-05) to deploy the function. Once the deployment completes, navigate to the function app in the portal, select the function (SplitImage) and click the Get Function Url button. Save the function url as we will use it in the next step.\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"### Create the enrichment pipeline\\n\",\n    \"In the next few steps we will configure the Cognitive Search enrichment pipeline with the following steps:\\n\",\n    \"1. Create a blob storage data source. Ensure you have a blob storage container with at least one file containing images.\\n\",\n    \"2. Create a skillset to enrich the documents in the data source\\n\",\n    \"3. Create an index\\n\",\n    \"4. Create an indexer to move documents from the data source to the index while invoking the skillset\\n\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"!pip install azure-storage-blob\\n\",\n    \"\\n\",\n    \"import os\\n\",\n    \"import json\\n\",\n    \"import requests\\n\",\n    \"\\n\",\n    \"# Configure all required variables for Cognitive Search. Replace each with the credentials from your accounts.\\n\",\n    \"\\n\",\n    \"# Replace with Search Service name, API key, and endpoint from the Azure portal.\\n\",\n    \"search_service = \\\"\\\" # In the format \\\"https://searchservicename.search.windows.net\\\"\\n\",\n    \"api_key = 'your search service API key'\\n\",\n    \"\\n\",\n    \"# Leave the API version and content_type as they are listed here.\\n\",\n    \"api_version = '2020-06-30-Preview'\\n\",\n    \"content_type = 'application/json'\\n\",\n    \"\\n\",\n    \"# Replace with a cognitive services key.\\n\",\n    \"cog_svcs_key = '' #Required only if processing more than 20 documents\\n\",\n    \"cog_svcs_acct = 'your cog services account name'\\n\",\n    \"\\n\",\n    \"#Connection string to the storage account. This will be used for the datasource, knowledge store and cache\\n\",\n    \"STORAGECONNSTRING = \\\"DefaultEndpointsProtocol=https;AccountName=<Storage Acct>;AccountKey=<KEY>;EndpointSuffix=core.windows.net\\\"\\n\",\n    \"# The container with your files containing images\\n\",\n    \"datasource_container = 'bfrsample' # Replace with the container containging your files\\n\",\n    \"# This sample assumes you will use the same storage account for the datasource, knowledge store and indexer cache. The knowledge store will contain the projected images\\n\",\n    \"know_store_cache = STORAGECONNSTRING\\n\",\n    \"# Contaimer where the sliced images will be projected to\\n\",\n    \"know_store_container = \\\"obfuscated\\\"\\n\",\n    \"skill_uri = \\\"https://<skillname>.azurewebsites.net/api/SplitImage?code=CODE\\\"\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Create a helper function to invoke the Cognitive Search REST API\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"def construct_Url(service, resource, resource_name, action, api_version):\\n\",\n    \"    if resource_name:\\n\",\n    \"        \\n\",\n    \"        if action:\\n\",\n    \"            return service + '/'+ resource + '/' + resource_name + '/' + action + '?api-version=' + api_version\\n\",\n    \"        else:\\n\",\n    \"            return service + '/'+ resource + '/' + resource_name + '?api-version=' + api_version\\n\",\n    \"    else:\\n\",\n    \"        return service + '/'+ resource + '?api-version=' + api_version\\n\",\n    \"\\n\",\n    \"\\n\",\n    \"headers = {'api-key': api_key, 'Content-Type': content_type}\\n\",\n    \"# Test out the URLs to ensure that the configuration works\\n\",\n    \"print(construct_Url(search_service, \\\"indexes\\\", \\\"bfr-sample\\\", \\\"analyze\\\", api_version))\\n\",\n    \"print(construct_Url(search_service, \\\"indexes\\\", \\\"bfr-sample\\\", None, api_version))\\n\",\n    \"print(construct_Url(search_service, \\\"indexers\\\", None, None, api_version))\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"#### Create the data source\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"container = datasource_container\\n\",\n    \"\\n\",\n    \"datsource_def = {\\n\",\n    \"    'name': f'{datasource_container}-ds',\\n\",\n    \"    'description': f'Datasource containing files with sample images',\\n\",\n    \"    'type': 'azureblob',\\n\",\n    \"    'subtype': None,\\n\",\n    \"    'credentials': {\\n\",\n    \"        'connectionString': f'{STORAGECONNSTRING}'\\n\",\n    \"    },\\n\",\n    \"    'container': {\\n\",\n    \"        'name': f'{datasource_container}'\\n\",\n    \"    },\\n\",\n    \"\\n\",\n    \"}\\n\",\n    \"r = requests.post(construct_Url(search_service, \\\"datasources\\\", None, None, api_version), data=json.dumps(datsource_def),  headers=headers)\\n\",\n    \"print(r)\\n\",\n    \"res = r.json()\\n\",\n    \"print(json.dumps(res, indent=2))\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"#### Create the skillset\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"skillset_name = f'{datasource_container}-ss'\\n\",\n    \"skillset_def = {\\n\",\n    \"    'name': f'{skillset_name}',\\n\",\n    \"    'description': 'Skillset to enrich hotel reviews with aspect based sentiment',\\n\",\n    \"    'skills': [\\n\",\n    \"        {\\n\",\n    \"          \\\"@odata.type\\\": \\\"#Microsoft.Skills.Vision.OcrSkill\\\",\\n\",\n    \"          \\\"name\\\": \\\"OCRSkill\\\",\\n\",\n    \"          \\\"description\\\": \\\"OCR Skill\\\",\\n\",\n    \"          \\\"context\\\": \\\"/document/normalized_images/*\\\",\\n\",\n    \"          \\\"textExtractionAlgorithm\\\": None,\\n\",\n    \"          \\\"lineEnding\\\": \\\"Space\\\",\\n\",\n    \"          \\\"defaultLanguageCode\\\": \\\"en\\\",\\n\",\n    \"          \\\"detectOrientation\\\": True,\\n\",\n    \"          \\\"inputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"image\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/normalized_images/*\\\"\\n\",\n    \"            }\\n\",\n    \"          ],\\n\",\n    \"          \\\"outputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"text\\\",\\n\",\n    \"              \\\"targetName\\\": \\\"text\\\"\\n\",\n    \"            },\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"layoutText\\\",\\n\",\n    \"              \\\"targetName\\\": \\\"layoutText\\\"\\n\",\n    \"            }\\n\",\n    \"          ]\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"          \\\"@odata.type\\\": \\\"#Microsoft.Skills.Text.PIIDetectionSkill\\\",\\n\",\n    \"          \\\"name\\\": \\\"#1\\\",\\n\",\n    \"          \\\"description\\\": \\\"\\\",\\n\",\n    \"          \\\"context\\\": \\\"/document/merged_content\\\",\\n\",\n    \"          \\\"defaultLanguageCode\\\": \\\"en\\\",\\n\",\n    \"          \\\"minimumPrecision\\\": 0.5,\\n\",\n    \"          \\\"maskingMode\\\": \\\"replace\\\",\\n\",\n    \"          \\\"maskingCharacter\\\": \\\"*\\\",\\n\",\n    \"          \\\"inputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"text\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/merged_content\\\"\\n\",\n    \"            }\\n\",\n    \"          ],\\n\",\n    \"          \\\"outputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"piiEntities\\\",\\n\",\n    \"              \\\"targetName\\\": \\\"pii_entities\\\"\\n\",\n    \"            },\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"maskedText\\\",\\n\",\n    \"              \\\"targetName\\\": \\\"masked_text\\\"\\n\",\n    \"            }\\n\",\n    \"          ]\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"          \\\"@odata.type\\\": \\\"#Microsoft.Skills.Custom.WebApiSkill\\\",\\n\",\n    \"          \\\"name\\\": \\\"ImageSkill\\\",\\n\",\n    \"          \\\"description\\\": \\\"Segment Images\\\",\\n\",\n    \"          \\\"context\\\": \\\"/document/normalized_images/*\\\",\\n\",\n    \"          \\\"uri\\\": f'{skill_uri}',\\n\",\n    \"          \\\"httpMethod\\\": \\\"POST\\\",\\n\",\n    \"          \\\"timeout\\\": \\\"PT30S\\\",\\n\",\n    \"          \\\"batchSize\\\": 1000,\\n\",\n    \"          \\\"degreeOfParallelism\\\": 1,\\n\",\n    \"          \\\"inputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"image\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/normalized_images/*\\\"\\n\",\n    \"            },\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"layoutText\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/normalized_images/*/layoutText\\\"\\n\",\n    \"            },\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"pii_entities\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/merged_content/pii_entities\\\"\\n\",\n    \"            }\\n\",\n    \"          ],\\n\",\n    \"          \\\"outputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"slices\\\",\\n\",\n    \"              \\\"targetName\\\": \\\"slices\\\"\\n\",\n    \"            },\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"original\\\",\\n\",\n    \"              \\\"targetName\\\": \\\"original\\\"\\n\",\n    \"            }\\n\",\n    \"          ],\\n\",\n    \"          \\\"httpHeaders\\\": {}\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"          \\\"@odata.type\\\": \\\"#Microsoft.Skills.Text.MergeSkill\\\",\\n\",\n    \"          \\\"name\\\": \\\"MergeSkill\\\",\\n\",\n    \"          \\\"description\\\": \\\"Merge results from cracking with OCR text\\\",\\n\",\n    \"          \\\"context\\\": \\\"/document\\\",\\n\",\n    \"          \\\"insertPreTag\\\": \\\" \\\",\\n\",\n    \"          \\\"insertPostTag\\\": \\\" \\\",\\n\",\n    \"          \\\"inputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"text\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/content\\\"\\n\",\n    \"            },\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"itemsToInsert\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/normalized_images/*/text\\\"\\n\",\n    \"            },\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"offsets\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/normalized_images/*/contentOffset\\\"\\n\",\n    \"            }\\n\",\n    \"          ],\\n\",\n    \"          \\\"outputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"mergedText\\\",\\n\",\n    \"              \\\"targetName\\\": \\\"merged_content\\\"\\n\",\n    \"            }\\n\",\n    \"          ]\\n\",\n    \"        }\\n\",\n    \"        \\n\",\n    \"    ],\\n\",\n    \"    'cognitiveServices':None,\\n\",\n    \"    'knowledgeStore': {\\n\",\n    \"        'storageConnectionString': f'{STORAGECONNSTRING}',\\n\",\n    \"        'projections': [\\n\",\n    \"          {\\n\",\n    \"        \\\"tables\\\": [],\\n\",\n    \"        \\\"objects\\\": [\\n\",\n    \"          {\\n\",\n    \"            \\\"storageContainer\\\": \\\"layout\\\",\\n\",\n    \"            \\\"referenceKeyName\\\": None,\\n\",\n    \"            \\\"generatedKeyName\\\": \\\"layoutKey\\\",\\n\",\n    \"            \\\"source\\\": \\\"/document/normalized_images/*/layoutText\\\",\\n\",\n    \"            \\\"sourceContext\\\": None,\\n\",\n    \"            \\\"inputs\\\": []\\n\",\n    \"          }\\n\",\n    \"        ],\\n\",\n    \"        \\\"files\\\": [\\n\",\n    \"          {\\n\",\n    \"            \\\"storageContainer\\\": \\\"slices\\\",\\n\",\n    \"            \\\"referenceKeyName\\\": None,\\n\",\n    \"            \\\"generatedKeyName\\\": \\\"slicesKey\\\",\\n\",\n    \"            \\\"source\\\": \\\"/document/normalized_images/*/slices/*\\\",\\n\",\n    \"            \\\"sourceContext\\\": None,\\n\",\n    \"            \\\"inputs\\\": []\\n\",\n    \"          },\\n\",\n    \"          {\\n\",\n    \"            \\\"storageContainer\\\": \\\"images\\\",\\n\",\n    \"            \\\"referenceKeyName\\\": None,\\n\",\n    \"            \\\"generatedKeyName\\\": \\\"imageKey\\\",\\n\",\n    \"            \\\"source\\\": \\\"/document/normalized_images/*\\\",\\n\",\n    \"            \\\"sourceContext\\\": None,\\n\",\n    \"            \\\"inputs\\\": []\\n\",\n    \"          },\\n\",\n    \"          {\\n\",\n    \"            \\\"storageContainer\\\": f'{know_store_container}',\\n\",\n    \"            \\\"referenceKeyName\\\": None,\\n\",\n    \"            \\\"generatedKeyName\\\": \\\"originalKey\\\",\\n\",\n    \"            \\\"source\\\": \\\"/document/normalized_images/*/original\\\",\\n\",\n    \"            \\\"sourceContext\\\": None,\\n\",\n    \"            \\\"inputs\\\": []\\n\",\n    \"          }\\n\",\n    \"        ]\\n\",\n    \"      }\\n\",\n    \"        ]\\n\",\n    \"    }\\n\",\n    \"}\\n\",\n    \"\\n\",\n    \"\\n\",\n    \"r = requests.put(construct_Url(search_service, \\\"skillsets\\\", skillset_name, None, api_version), data=json.dumps(skillset_def),  headers=headers)\\n\",\n    \"print(r)\\n\",\n    \"\\n\",\n    \"res = r.json()\\n\",\n    \"print(json.dumps(res, indent=2))\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"#### Create the index\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"indexname = f'{datasource_container}-idx'\\n\",\n    \"index_def = {\\n\",\n    \"    \\\"name\\\":f'{indexname}',\\n\",\n    \"      \\\"defaultScoringProfile\\\": \\\"\\\",\\n\",\n    \"    \\\"fields\\\": [\\n\",\n    \"        {\\n\",\n    \"          \\\"name\\\": \\\"image_text\\\",\\n\",\n    \"          \\\"type\\\": \\\"Collection(Edm.String)\\\",\\n\",\n    \"          \\\"facetable\\\": False,\\n\",\n    \"          \\\"filterable\\\": False,\\n\",\n    \"          \\\"retrievable\\\": True,\\n\",\n    \"          \\\"searchable\\\": True,\\n\",\n    \"          \\\"analyzer\\\": \\\"standard.lucene\\\",\\n\",\n    \"          \\\"indexAnalyzer\\\": None,\\n\",\n    \"          \\\"searchAnalyzer\\\": None,\\n\",\n    \"          \\\"synonymMaps\\\": [],\\n\",\n    \"          \\\"fields\\\": []\\n\",\n    \"        },\\n\",\n    \"  \\n\",\n    \"        {\\n\",\n    \"          \\\"name\\\": \\\"content\\\",\\n\",\n    \"          \\\"type\\\": \\\"Edm.String\\\",\\n\",\n    \"          \\\"facetable\\\": False,\\n\",\n    \"          \\\"filterable\\\": False,\\n\",\n    \"          \\\"key\\\": False,\\n\",\n    \"          \\\"retrievable\\\": True,\\n\",\n    \"          \\\"searchable\\\": True,\\n\",\n    \"          \\\"sortable\\\": False,\\n\",\n    \"          \\\"analyzer\\\": \\\"standard.lucene\\\",\\n\",\n    \"          \\\"indexAnalyzer\\\": None,\\n\",\n    \"          \\\"searchAnalyzer\\\": None,\\n\",\n    \"          \\\"synonymMaps\\\": [],\\n\",\n    \"          \\\"fields\\\": []\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"metadata_storage_content_type\\\",\\n\",\n    \"            \\\"type\\\": \\\"Edm.String\\\",\\n\",\n    \"            \\\"searchable\\\": False,\\n\",\n    \"            \\\"filterable\\\": False,\\n\",\n    \"            \\\"retrievable\\\": True,\\n\",\n    \"            \\\"sortable\\\": False,\\n\",\n    \"            \\\"facetable\\\": False,\\n\",\n    \"            \\\"key\\\": False,\\n\",\n    \"            \\\"indexAnalyzer\\\": None,\\n\",\n    \"            \\\"searchAnalyzer\\\": None,\\n\",\n    \"            \\\"analyzer\\\": None,\\n\",\n    \"            \\\"synonymMaps\\\": []\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"metadata_storage_size\\\",\\n\",\n    \"            \\\"type\\\": \\\"Edm.Int64\\\",\\n\",\n    \"            \\\"searchable\\\": False,\\n\",\n    \"            \\\"filterable\\\": False,\\n\",\n    \"            \\\"retrievable\\\": True,\\n\",\n    \"            \\\"sortable\\\": False,\\n\",\n    \"            \\\"facetable\\\": False,\\n\",\n    \"            \\\"key\\\": False,\\n\",\n    \"            \\\"indexAnalyzer\\\": None,\\n\",\n    \"            \\\"searchAnalyzer\\\": None,\\n\",\n    \"            \\\"analyzer\\\": None,\\n\",\n    \"            \\\"synonymMaps\\\": []\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"metadata_storage_last_modified\\\",\\n\",\n    \"            \\\"type\\\": \\\"Edm.DateTimeOffset\\\",\\n\",\n    \"            \\\"searchable\\\": False,\\n\",\n    \"            \\\"filterable\\\": False,\\n\",\n    \"            \\\"retrievable\\\": True,\\n\",\n    \"            \\\"sortable\\\": False,\\n\",\n    \"            \\\"facetable\\\": False,\\n\",\n    \"            \\\"key\\\": False,\\n\",\n    \"            \\\"indexAnalyzer\\\": None,\\n\",\n    \"            \\\"searchAnalyzer\\\": None,\\n\",\n    \"            \\\"analyzer\\\": None,\\n\",\n    \"            \\\"synonymMaps\\\": []\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"metadata_storage_content_md5\\\",\\n\",\n    \"            \\\"type\\\": \\\"Edm.String\\\",\\n\",\n    \"            \\\"searchable\\\": False,\\n\",\n    \"            \\\"filterable\\\": False,\\n\",\n    \"            \\\"retrievable\\\": True,\\n\",\n    \"            \\\"sortable\\\": False,\\n\",\n    \"            \\\"facetable\\\": False,\\n\",\n    \"            \\\"key\\\": False,\\n\",\n    \"            \\\"indexAnalyzer\\\": None,\\n\",\n    \"            \\\"searchAnalyzer\\\": None,\\n\",\n    \"            \\\"analyzer\\\": None,\\n\",\n    \"            \\\"synonymMaps\\\": []\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"metadata_storage_name\\\",\\n\",\n    \"            \\\"type\\\": \\\"Edm.String\\\",\\n\",\n    \"            \\\"searchable\\\": False,\\n\",\n    \"            \\\"filterable\\\": False,\\n\",\n    \"            \\\"retrievable\\\": True,\\n\",\n    \"            \\\"sortable\\\": False,\\n\",\n    \"            \\\"facetable\\\": False,\\n\",\n    \"            \\\"key\\\": False,\\n\",\n    \"            \\\"indexAnalyzer\\\": None,\\n\",\n    \"            \\\"searchAnalyzer\\\": None,\\n\",\n    \"            \\\"analyzer\\\": None,\\n\",\n    \"            \\\"synonymMaps\\\": []\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"metadata_storage_path\\\",\\n\",\n    \"            \\\"type\\\": \\\"Edm.String\\\",\\n\",\n    \"            \\\"searchable\\\": False,\\n\",\n    \"            \\\"filterable\\\": False,\\n\",\n    \"            \\\"retrievable\\\": True,\\n\",\n    \"            \\\"sortable\\\": False,\\n\",\n    \"            \\\"facetable\\\": False,\\n\",\n    \"            \\\"key\\\": True,\\n\",\n    \"            \\\"indexAnalyzer\\\": None,\\n\",\n    \"            \\\"searchAnalyzer\\\": None,\\n\",\n    \"            \\\"analyzer\\\": None,\\n\",\n    \"            \\\"synonymMaps\\\": []\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"metadata_storage_file_extension\\\",\\n\",\n    \"            \\\"type\\\": \\\"Edm.String\\\",\\n\",\n    \"            \\\"searchable\\\": False,\\n\",\n    \"            \\\"filterable\\\": False,\\n\",\n    \"            \\\"retrievable\\\": True,\\n\",\n    \"            \\\"sortable\\\": False,\\n\",\n    \"            \\\"facetable\\\": False,\\n\",\n    \"            \\\"key\\\": False,\\n\",\n    \"            \\\"indexAnalyzer\\\": None,\\n\",\n    \"            \\\"searchAnalyzer\\\": None,\\n\",\n    \"            \\\"analyzer\\\": None,\\n\",\n    \"            \\\"synonymMaps\\\": []\\n\",\n    \"        }\\n\",\n    \"        \\n\",\n    \"    ],\\n\",\n    \"    \\\"scoringProfiles\\\": [],\\n\",\n    \"    \\\"corsOptions\\\": None,\\n\",\n    \"    \\\"suggesters\\\": [\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"sg\\\",\\n\",\n    \"            \\\"searchMode\\\": \\\"analyzingInfixMatching\\\",\\n\",\n    \"            \\\"sourceFields\\\": [\\n\",\n    \"                \\\"metadata_storage_path\\\"\\n\",\n    \"            ]\\n\",\n    \"        }\\n\",\n    \"    ],\\n\",\n    \"    \\\"analyzers\\\": [],\\n\",\n    \"    \\\"tokenizers\\\": [],\\n\",\n    \"    \\\"tokenFilters\\\": [],\\n\",\n    \"    \\\"charFilters\\\": [],\\n\",\n    \"    \\\"encryptionKey\\\": None,\\n\",\n    \"    \\\"similarity\\\": None\\n\",\n    \"}\\n\",\n    \"r = requests.post(construct_Url(search_service, \\\"indexes\\\", None, None, api_version), data=json.dumps(index_def),  headers=headers)\\n\",\n    \"print(r)\\n\",\n    \"res = r.json()\\n\",\n    \"print(json.dumps(res, indent=2))\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"#### Create the indexer\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"indexername = f'{datasource_container}-idxr'\\n\",\n    \"indexer_def = {\\n\",\n    \"    \\\"name\\\": f'{indexername}',\\n\",\n    \"    \\\"description\\\": \\\"Indexer to enrich hotel reviews\\\",\\n\",\n    \"    \\\"dataSourceName\\\": f'{datasource_container}-ds',\\n\",\n    \"    \\\"skillsetName\\\": f'{datasource_container}-ss',\\n\",\n    \"    \\\"targetIndexName\\\": f'{datasource_container}-idx',\\n\",\n    \"    \\\"disabled\\\": None,\\n\",\n    \"    \\\"schedule\\\": {\\n\",\n    \"        \\\"interval\\\": \\\"PT2H\\\",\\n\",\n    \"        \\\"startTime\\\": \\\"0001-01-01T00:00:00Z\\\"\\n\",\n    \"      },\\n\",\n    \"    \\\"parameters\\\": {\\n\",\n    \"    \\\"batchSize\\\": None,\\n\",\n    \"    \\\"maxFailedItems\\\": 0,\\n\",\n    \"    \\\"maxFailedItemsPerBatch\\\": 0,\\n\",\n    \"    \\\"base64EncodeKeys\\\": None,\\n\",\n    \"    \\\"configuration\\\": {\\n\",\n    \"      \\\"dataToExtract\\\": \\\"contentAndMetadata\\\",\\n\",\n    \"      \\\"parsingMode\\\": \\\"default\\\",\\n\",\n    \"      \\\"imageAction\\\": \\\"generateNormalizedImages\\\"\\n\",\n    \"        }\\n\",\n    \"    },\\n\",\n    \"   \\\"fieldMappings\\\": [\\n\",\n    \"    {\\n\",\n    \"      \\\"sourceFieldName\\\": \\\"metadata_storage_path\\\",\\n\",\n    \"      \\\"targetFieldName\\\": \\\"metadata_storage_path\\\",\\n\",\n    \"      \\\"mappingFunction\\\": {\\n\",\n    \"        \\\"name\\\": \\\"base64Encode\\\"\\n\",\n    \"      }\\n\",\n    \"    }\\n\",\n    \"    ],\\n\",\n    \"    \\\"outputFieldMappings\\\": [\\n\",\n    \"        {\\n\",\n    \"          \\\"sourceFieldName\\\": \\\"/document/normalized_images/*/text\\\",\\n\",\n    \"          \\\"targetFieldName\\\": \\\"image_text\\\"\\n\",\n    \"        }\\n\",\n    \"    ],\\n\",\n    \"    \\\"cache\\\": {\\n\",\n    \"        \\\"enableReprocessing\\\": True,\\n\",\n    \"        \\\"storageConnectionString\\\": f'{know_store_cache}'\\n\",\n    \"    }\\n\",\n    \"}\\n\",\n    \"r = requests.post(construct_Url(search_service, \\\"indexers\\\", None, None, api_version), data=json.dumps(indexer_def), headers=headers)\\n\",\n    \"print(r)\\n\",\n    \"res = r.json()\\n\",\n    \"print(json.dumps(res, indent=2))\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"#### Run the indexer\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"r = requests.post(construct_Url(search_service, \\\"indexers\\\", indexername, \\\"run\\\", api_version), data=None,  headers=headers)\\n\",\n    \"print(r)\\n\",\n    \"#res = r.json()\\n\",\n    \"#print(json.dumps(res, indent=2))\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"### View Results\\n\",\n    \"Once the indexer completes execution, you will find the image slices in the knowledge store. The following cell downloads a few images to validate the skill did work.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"from IPython.display import Image\\n\",\n    \"import base64\\n\",\n    \"from azure.storage.blob import ContainerClient\\n\",\n    \"count = 0\\n\",\n    \"container = ContainerClient.from_connection_string(conn_str=STORAGECONNSTRING, container_name=know_store_container)\\n\",\n    \"blob_list = container.list_blobs()\\n\",\n    \"for blob in blob_list:\\n\",\n    \"    print(blob.name + '\\\\n')\\n\",\n    \"    blob_client = container.get_blob_client(blob.name)\\n\",\n    \"    with open(\\\"image\\\" + str(count) + \\\".jpg\\\", \\\"wb\\\") as my_blob:\\n\",\n    \"                download_stream = blob_client.download_blob()\\n\",\n    \"                my_blob.write(download_stream.readall())\\n\",\n    \"    count = count + 1\\n\",\n    \"    if(count == 3):\\n\",\n    \"        break\\n\",\n    \"\\n\",\n    \"Image(filename='image2.jpg') \"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"### Next Steps\\n\",\n    \"You now know how to pass images into skills and even return images to the skillset. As a next step, you can start from scratch and build a [custom AML Skill](https://docs.microsoft.com/en-us/azure/search/cognitive-search-aml-skill) to perform inferences on images or use the Custom Vision service to build a skill. The power skills github repository has a [sample custom vision skill](https://github.com/Azure-Samples/azure-search-power-skills/tree/master/Vision/CustomVision) to help you get started.\"\n   ]\n  }\n ],\n \"metadata\": {\n  \"kernelspec\": {\n   \"display_name\": \"Python 3\",\n   \"language\": \"python\",\n   \"name\": \"python3\"\n  },\n  \"language_info\": {\n   \"codemirror_mode\": {\n    \"name\": \"ipython\",\n    \"version\": 3\n   },\n   \"file_extension\": \".py\",\n   \"mimetype\": \"text/x-python\",\n   \"name\": \"python\",\n   \"nbconvert_exporter\": \"python\",\n   \"pygments_lexer\": \"ipython3\",\n   \"version\": \"3.7.4\"\n  }\n },\n \"nbformat\": 4,\n \"nbformat_minor\": 2\n}\n",
                                "diffs": [
                                    [
                                        "     \"# This sample assumes you will use the same storage account for the datasource, knowledge store and indexer cache. The knowledge store will contain the projected images\\n\",",
                                        "     \"know_store_cache = STORAGECONNSTRING\\n\",",
                                        "     \"# Contaimer where the sliced images will be projected to\\n\",",
                                        "-    \"know_store_container = \\\"slices\\\"\\n\",",
                                        "+    \"know_store_container = \\\"obfuscated\\\"\\n\",",
                                        "     \"skill_uri = \\\"https://<skillname>.azurewebsites.net/api/SplitImage?code=CODE\\\"\"",
                                        "    ]",
                                        "   },"
                                    ],
                                    [
                                        "     \"        {\\n\",",
                                        "     \"          \\\"@odata.type\\\": \\\"#Microsoft.Skills.Text.PIIDetectionSkill\\\",\\n\",",
                                        "     \"          \\\"name\\\": \\\"#1\\\",\\n\",",
                                        "-    \"          \\\"description\\\": null,\\n\",",
                                        "+    \"          \\\"description\\\": \\\"\\\",\\n\",",
                                        "     \"          \\\"context\\\": \\\"/document/merged_content\\\",\\n\",",
                                        "     \"          \\\"defaultLanguageCode\\\": \\\"en\\\",\\n\",",
                                        "     \"          \\\"minimumPrecision\\\": 0.5,\\n\","
                                    ],
                                    [
                                        "     \"            }\\n\",",
                                        "     \"          ],\\n\",",
                                        "     \"          \\\"httpHeaders\\\": {}\\n\",",
                                        "+    \"        },\\n\",",
                                        "+    \"        {\\n\",",
                                        "+    \"          \\\"@odata.type\\\": \\\"#Microsoft.Skills.Text.MergeSkill\\\",\\n\",",
                                        "+    \"          \\\"name\\\": \\\"MergeSkill\\\",\\n\",",
                                        "+    \"          \\\"description\\\": \\\"Merge results from cracking with OCR text\\\",\\n\",",
                                        "+    \"          \\\"context\\\": \\\"/document\\\",\\n\",",
                                        "+    \"          \\\"insertPreTag\\\": \\\" \\\",\\n\",",
                                        "+    \"          \\\"insertPostTag\\\": \\\" \\\",\\n\",",
                                        "+    \"          \\\"inputs\\\": [\\n\",",
                                        "+    \"            {\\n\",",
                                        "+    \"              \\\"name\\\": \\\"text\\\",\\n\",",
                                        "+    \"              \\\"source\\\": \\\"/document/content\\\"\\n\",",
                                        "+    \"            },\\n\",",
                                        "+    \"            {\\n\",",
                                        "+    \"              \\\"name\\\": \\\"itemsToInsert\\\",\\n\",",
                                        "+    \"              \\\"source\\\": \\\"/document/normalized_images/*/text\\\"\\n\",",
                                        "+    \"            },\\n\",",
                                        "+    \"            {\\n\",",
                                        "+    \"              \\\"name\\\": \\\"offsets\\\",\\n\",",
                                        "+    \"              \\\"source\\\": \\\"/document/normalized_images/*/contentOffset\\\"\\n\",",
                                        "+    \"            }\\n\",",
                                        "+    \"          ],\\n\",",
                                        "+    \"          \\\"outputs\\\": [\\n\",",
                                        "+    \"            {\\n\",",
                                        "+    \"              \\\"name\\\": \\\"mergedText\\\",\\n\",",
                                        "+    \"              \\\"targetName\\\": \\\"merged_content\\\"\\n\",",
                                        "+    \"            }\\n\",",
                                        "+    \"          ]\\n\",",
                                        "     \"        }\\n\",",
                                        "     \"        \\n\",",
                                        "     \"    ],\\n\","
                                    ],
                                    [
                                        "     \"        \\\"objects\\\": [\\n\",",
                                        "     \"          {\\n\",",
                                        "     \"            \\\"storageContainer\\\": \\\"layout\\\",\\n\",",
                                        "-    \"            \\\"referenceKeyName\\\": null,\\n\",",
                                        "+    \"            \\\"referenceKeyName\\\": None,\\n\",",
                                        "     \"            \\\"generatedKeyName\\\": \\\"layoutKey\\\",\\n\",",
                                        "     \"            \\\"source\\\": \\\"/document/normalized_images/*/layoutText\\\",\\n\",",
                                        "-    \"            \\\"sourceContext\\\": null,\\n\",",
                                        "+    \"            \\\"sourceContext\\\": None,\\n\",",
                                        "     \"            \\\"inputs\\\": []\\n\",",
                                        "     \"          }\\n\",",
                                        "     \"        ],\\n\",",
                                        "     \"        \\\"files\\\": [\\n\",",
                                        "     \"          {\\n\",",
                                        "     \"            \\\"storageContainer\\\": \\\"slices\\\",\\n\",",
                                        "-    \"            \\\"referenceKeyName\\\": null,\\n\",",
                                        "+    \"            \\\"referenceKeyName\\\": None,\\n\",",
                                        "     \"            \\\"generatedKeyName\\\": \\\"slicesKey\\\",\\n\",",
                                        "     \"            \\\"source\\\": \\\"/document/normalized_images/*/slices/*\\\",\\n\",",
                                        "-    \"            \\\"sourceContext\\\": null,\\n\",",
                                        "+    \"            \\\"sourceContext\\\": None,\\n\",",
                                        "     \"            \\\"inputs\\\": []\\n\",",
                                        "     \"          },\\n\",",
                                        "     \"          {\\n\",",
                                        "     \"            \\\"storageContainer\\\": \\\"images\\\",\\n\",",
                                        "-    \"            \\\"referenceKeyName\\\": null,\\n\",",
                                        "+    \"            \\\"referenceKeyName\\\": None,\\n\",",
                                        "     \"            \\\"generatedKeyName\\\": \\\"imageKey\\\",\\n\",",
                                        "     \"            \\\"source\\\": \\\"/document/normalized_images/*\\\",\\n\",",
                                        "-    \"            \\\"sourceContext\\\": null,\\n\",",
                                        "+    \"            \\\"sourceContext\\\": None,\\n\",",
                                        "     \"            \\\"inputs\\\": []\\n\",",
                                        "     \"          },\\n\",",
                                        "     \"          {\\n\",",
                                        "     \"            \\\"storageContainer\\\": f'{know_store_container}',\\n\",",
                                        "-    \"            \\\"referenceKeyName\\\": null,\\n\",",
                                        "+    \"            \\\"referenceKeyName\\\": None,\\n\",",
                                        "     \"            \\\"generatedKeyName\\\": \\\"originalKey\\\",\\n\",",
                                        "     \"            \\\"source\\\": \\\"/document/normalized_images/*/original\\\",\\n\",",
                                        "-    \"            \\\"sourceContext\\\": null,\\n\",",
                                        "+    \"            \\\"sourceContext\\\": None,\\n\",",
                                        "     \"            \\\"inputs\\\": []\\n\",",
                                        "     \"          }\\n\",",
                                        "     \"        ]\\n\",",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "041fdf2765f3eb6339252928145c0a8e0c738ab8",
                    "link": "https://github.com/Azure-Samples/azure-search-python-samples/commit/041fdf2765f3eb6339252928145c0a8e0c738ab8",
                    "files": [
                        {
                            "name": "README.md",
                            "content": {
                                "current": "---\r\ntopic: sample\r\nservices: azure-search\r\nlanguages:\r\n  - python\r\nname: Azure Search Sample Data\r\ndescription: |\r\n  Find Python samples for Azure Search in this repo.\r\nproducts:\r\n  - azure-search\r\n---\r\n# Azure Search Python Samples repository\r\n\r\nThis repository contains Python sample code used in Azure Search quickstarts, tutorials, and examples.\r\n\r\n## Quickstart-Jupyter-Notebook\r\n\r\nThis sample is a .ipynb file containing a Python3 notebook used in [Quickstart: Create and query an Azure Search index using a Jupyter Python notebook](https://docs.microsoft.com/azure/search/search-get-started-python). There are two placeholder values for an Azure Search service and admin API key. Replace them with valid values to create, load, and query an index on your own service.\r\n\r\n## Tutorial-AI-Enrichment-Jupyter-Notebook\r\n\r\nThis sample is a .ipynb file containing a Python3 notebook used in [Tutorial: Python Tutorial: Call Cognitive Services APIs in an Azure Search indexing pipeline](https://docs.microsoft.com/azure/search/cognitive-search-tutorial-blob-python). There are three placeholder values to insert: an Azure Search service, an admin API key, and a connection string to a blob storage resource that you will create in the tutorial. Replace them with valid values to create an indexing pipeline that searches for and extracts text and text representations of images and scanned documents. This sample leverages cognitive skills from the Azure Cognitive Services API, such as entity recognition and language detection.",
                                "diffs": [
                                    [
                                        " ",
                                        " ## Quickstart-Jupyter-Notebook",
                                        " ",
                                        "-This sample is a .ipynb file containing a Python3 notebook used in [Quickstart: Create and query an Azure Search index using a Jupyter Python notebook](https://docs.microsoft.com/azure/search/search-get-started-python). There are two placeholder values for an Azure Search service and admin API key. Replace them with valid values to create, load, and query an index on your own service.",
                                        "\\ No newline at end of file",
                                        "+This sample is a .ipynb file containing a Python3 notebook used in [Quickstart: Create and query an Azure Search index using a Jupyter Python notebook](https://docs.microsoft.com/azure/search/search-get-started-python). There are two placeholder values for an Azure Search service and admin API key. Replace them with valid values to create, load, and query an index on your own service.",
                                        "+",
                                        "+## Tutorial-AI-Enrichment-Jupyter-Notebook",
                                        "+",
                                        "+This sample is a .ipynb file containing a Python3 notebook used in [Tutorial: Python Tutorial: Call Cognitive Services APIs in an Azure Search indexing pipeline](https://docs.microsoft.com/azure/search/cognitive-search-tutorial-blob-python). There are three placeholder values to insert: an Azure Search service, an admin API key, and a connection string to a blob storage resource that you will create in the tutorial. Replace them with valid values to create an indexing pipeline that searches for and extracts text and text representations of images and scanned documents. This sample leverages cognitive skills from the Azure Cognitive Services API, such as entity recognition and language detection.",
                                        "\\ No newline at end of file",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "Tutorial-AI-Enrichment-Jupyter-Notebook/PythonTutorial-AzureSearch-AIEnrichment.ipynb",
                            "content": {
                                "current": "{\n \"cells\": [\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"import json\\n\",\n    \"import requests\\n\",\n    \"from pprint import pprint\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"#Define the names for the data source, skillset, index and indexer\\n\",\n    \"datasource_name=\\\"cogsrch-py-datasource\\\"\\n\",\n    \"skillset_name=\\\"cogsrch-py-skillset\\\"\\n\",\n    \"index_name=\\\"cogsrch-py-index\\\"\\n\",\n    \"indexer_name=\\\"cogsrch-py-indexer\\\"\\n\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"#Setup the endpoint\\n\",\n    \"endpoint = 'https://<YOUR-SERVICE-NAME>.search.windows.net/'\\n\",\n    \"headers = {'Content-Type': 'application/json',\\n\",\n    \"        'api-key': '<YOUR-ADMIN-API-KEY>' }\\n\",\n    \"params = {\\n\",\n    \"    'api-version': '2019-05-06'\\n\",\n    \"}\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"#Create a data source\\n\",\n    \"datasourceConnectionString = \\\"<YOUR-BLOB-RESOURCE-CONNECTION-STRING>\\\"\\n\",\n    \"datasource_payload = {\\n\",\n    \"    \\\"name\\\": datasource_name,\\n\",\n    \"    \\\"description\\\": \\\"Demo files to demonstrate cognitive search capabilities.\\\",\\n\",\n    \"    \\\"type\\\": \\\"azureblob\\\",\\n\",\n    \"    \\\"credentials\\\": {\\n\",\n    \"    \\\"connectionString\\\": datasourceConnectionString\\n\",\n    \"   },\\n\",\n    \"    \\\"container\\\": {\\n\",\n    \"     \\\"name\\\": \\\"basic-demo-data-pr\\\"\\n\",\n    \"   }\\n\",\n    \"}\\n\",\n    \"r = requests.put( endpoint + \\\"/datasources/\\\" + datasource_name, data=json.dumps(datasource_payload), headers=headers, params=params )\\n\",\n    \"pprint (r.json())\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"#Create a skillset\\n\",\n    \"skillset_payload = {\\n\",\n    \"  \\\"name\\\": skillset_name,\\n\",\n    \"  \\\"description\\\":\\n\",\n    \"  \\\"Extract entities, detect language and extract key-phrases\\\",\\n\",\n    \"  \\\"skills\\\":\\n\",\n    \"  [\\n\",\n    \"    {\\n\",\n    \"      \\\"@odata.type\\\": \\\"#Microsoft.Skills.Text.EntityRecognitionSkill\\\",\\n\",\n    \"      \\\"categories\\\": [ \\\"Organization\\\" ],\\n\",\n    \"      \\\"defaultLanguageCode\\\": \\\"en\\\",\\n\",\n    \"      \\\"inputs\\\": [\\n\",\n    \"        {\\n\",\n    \"          \\\"name\\\": \\\"text\\\", \\\"source\\\": \\\"/document/content\\\"\\n\",\n    \"        }\\n\",\n    \"      ],\\n\",\n    \"      \\\"outputs\\\": [\\n\",\n    \"        {\\n\",\n    \"          \\\"name\\\": \\\"organizations\\\", \\\"targetName\\\": \\\"organizations\\\"\\n\",\n    \"        }\\n\",\n    \"      ]\\n\",\n    \"    },\\n\",\n    \"    {\\n\",\n    \"      \\\"@odata.type\\\": \\\"#Microsoft.Skills.Text.LanguageDetectionSkill\\\",\\n\",\n    \"      \\\"inputs\\\": [\\n\",\n    \"        {\\n\",\n    \"          \\\"name\\\": \\\"text\\\", \\\"source\\\": \\\"/document/content\\\"\\n\",\n    \"        }\\n\",\n    \"      ],\\n\",\n    \"      \\\"outputs\\\": [\\n\",\n    \"        {\\n\",\n    \"          \\\"name\\\": \\\"languageCode\\\",\\n\",\n    \"          \\\"targetName\\\": \\\"languageCode\\\"\\n\",\n    \"        }\\n\",\n    \"      ]\\n\",\n    \"    },\\n\",\n    \"    {\\n\",\n    \"      \\\"@odata.type\\\": \\\"#Microsoft.Skills.Text.SplitSkill\\\",\\n\",\n    \"      \\\"textSplitMode\\\" : \\\"pages\\\",\\n\",\n    \"      \\\"maximumPageLength\\\": 4000,\\n\",\n    \"      \\\"inputs\\\": [\\n\",\n    \"        {\\n\",\n    \"          \\\"name\\\": \\\"text\\\",\\n\",\n    \"          \\\"source\\\": \\\"/document/content\\\"\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"          \\\"name\\\": \\\"languageCode\\\",\\n\",\n    \"          \\\"source\\\": \\\"/document/languageCode\\\"\\n\",\n    \"        }\\n\",\n    \"      ],\\n\",\n    \"      \\\"outputs\\\": [\\n\",\n    \"        {\\n\",\n    \"          \\\"name\\\": \\\"textItems\\\",\\n\",\n    \"          \\\"targetName\\\": \\\"pages\\\"\\n\",\n    \"        }\\n\",\n    \"      ]\\n\",\n    \"    },\\n\",\n    \"    {\\n\",\n    \"      \\\"@odata.type\\\": \\\"#Microsoft.Skills.Text.KeyPhraseExtractionSkill\\\",\\n\",\n    \"      \\\"context\\\": \\\"/document/pages/*\\\",\\n\",\n    \"      \\\"inputs\\\": [\\n\",\n    \"        {\\n\",\n    \"          \\\"name\\\": \\\"text\\\", \\\"source\\\": \\\"/document/pages/*\\\"\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"          \\\"name\\\":\\\"languageCode\\\", \\\"source\\\": \\\"/document/languageCode\\\"\\n\",\n    \"        }\\n\",\n    \"      ],\\n\",\n    \"      \\\"outputs\\\": [\\n\",\n    \"        {\\n\",\n    \"          \\\"name\\\": \\\"keyPhrases\\\",\\n\",\n    \"          \\\"targetName\\\": \\\"keyPhrases\\\"\\n\",\n    \"        }\\n\",\n    \"      ]\\n\",\n    \"    }\\n\",\n    \"  ]\\n\",\n    \"}\\n\",\n    \"\\n\",\n    \"r = requests.put(endpoint + \\\"/skillsets/\\\" + skillset_name, data=json.dumps(skillset_payload), headers=headers, params=params)\\n\",\n    \"pprint(r.json())\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"#Create an index\\n\",\n    \"index_payload = {\\n\",\n    \"    \\\"name\\\": index_name,\\n\",\n    \"    \\\"fields\\\": [\\n\",\n    \"      {\\n\",\n    \"        \\\"name\\\": \\\"id\\\",\\n\",\n    \"        \\\"type\\\": \\\"Edm.String\\\",\\n\",\n    \"        \\\"key\\\": \\\"true\\\",\\n\",\n    \"        \\\"searchable\\\": \\\"true\\\",\\n\",\n    \"        \\\"filterable\\\": \\\"false\\\",\\n\",\n    \"        \\\"facetable\\\": \\\"false\\\",\\n\",\n    \"        \\\"sortable\\\": \\\"true\\\"\\n\",\n    \"      },\\n\",\n    \"      {\\n\",\n    \"        \\\"name\\\": \\\"content\\\",\\n\",\n    \"        \\\"type\\\": \\\"Edm.String\\\",\\n\",\n    \"        \\\"sortable\\\": \\\"false\\\",\\n\",\n    \"        \\\"searchable\\\": \\\"true\\\",\\n\",\n    \"        \\\"filterable\\\": \\\"false\\\",\\n\",\n    \"        \\\"facetable\\\": \\\"false\\\"\\n\",\n    \"      },\\n\",\n    \"      {\\n\",\n    \"        \\\"name\\\": \\\"languageCode\\\",\\n\",\n    \"        \\\"type\\\": \\\"Edm.String\\\",\\n\",\n    \"        \\\"searchable\\\": \\\"true\\\",\\n\",\n    \"        \\\"filterable\\\": \\\"false\\\",\\n\",\n    \"        \\\"facetable\\\": \\\"false\\\"\\n\",\n    \"      },\\n\",\n    \"      {\\n\",\n    \"        \\\"name\\\": \\\"keyPhrases\\\",\\n\",\n    \"        \\\"type\\\": \\\"Collection(Edm.String)\\\",\\n\",\n    \"        \\\"searchable\\\": \\\"true\\\",\\n\",\n    \"        \\\"filterable\\\": \\\"false\\\",\\n\",\n    \"        \\\"facetable\\\": \\\"false\\\"\\n\",\n    \"      },\\n\",\n    \"      {\\n\",\n    \"        \\\"name\\\": \\\"organizations\\\",\\n\",\n    \"        \\\"type\\\": \\\"Collection(Edm.String)\\\",\\n\",\n    \"        \\\"searchable\\\": \\\"true\\\",\\n\",\n    \"        \\\"sortable\\\": \\\"false\\\",\\n\",\n    \"        \\\"filterable\\\": \\\"false\\\",\\n\",\n    \"        \\\"facetable\\\": \\\"false\\\"\\n\",\n    \"      }\\n\",\n    \"   ]\\n\",\n    \"}\\n\",\n    \"\\n\",\n    \"r = requests.put(endpoint + \\\"/indexes/\\\" + index_name, data=json.dumps(index_payload), headers=headers, params=params)\\n\",\n    \"pprint(r.json())\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"# Create an indexer\\n\",\n    \"indexer_payload = {\\n\",\n    \"    \\\"name\\\": indexer_name,\\n\",\n    \"    \\\"dataSourceName\\\": datasource_name,\\n\",\n    \"    \\\"targetIndexName\\\": index_name,\\n\",\n    \"    \\\"skillsetName\\\": skillset_name,\\n\",\n    \"    \\\"fieldMappings\\\" : [\\n\",\n    \"    {\\n\",\n    \"      \\\"sourceFieldName\\\" : \\\"metadata_storage_path\\\",\\n\",\n    \"      \\\"targetFieldName\\\" : \\\"id\\\",\\n\",\n    \"      \\\"mappingFunction\\\" :\\n\",\n    \"        { \\\"name\\\" : \\\"base64Encode\\\" }\\n\",\n    \"    },\\n\",\n    \"    {\\n\",\n    \"      \\\"sourceFieldName\\\" : \\\"content\\\",\\n\",\n    \"      \\\"targetFieldName\\\" : \\\"content\\\"\\n\",\n    \"    }\\n\",\n    \"  ],\\n\",\n    \"   \\\"outputFieldMappings\\\" :\\n\",\n    \"  [\\n\",\n    \"    {\\n\",\n    \"      \\\"sourceFieldName\\\" : \\\"/document/organizations\\\",\\n\",\n    \"      \\\"targetFieldName\\\" : \\\"organizations\\\"\\n\",\n    \"    },\\n\",\n    \"    {\\n\",\n    \"      \\\"sourceFieldName\\\" : \\\"/document/pages/*/keyPhrases/*\\\",\\n\",\n    \"      \\\"targetFieldName\\\" : \\\"keyPhrases\\\"\\n\",\n    \"    },\\n\",\n    \"    {\\n\",\n    \"      \\\"sourceFieldName\\\": \\\"/document/languageCode\\\",\\n\",\n    \"      \\\"targetFieldName\\\": \\\"languageCode\\\"\\n\",\n    \"    }\\n\",\n    \"  ],\\n\",\n    \"   \\\"parameters\\\":\\n\",\n    \"  {\\n\",\n    \"    \\\"maxFailedItems\\\":-1,\\n\",\n    \"    \\\"maxFailedItemsPerBatch\\\":-1,\\n\",\n    \"    \\\"configuration\\\":\\n\",\n    \"    {\\n\",\n    \"      \\\"dataToExtract\\\": \\\"contentAndMetadata\\\",\\n\",\n    \"      \\\"imageAction\\\": \\\"generateNormalizedImages\\\"\\n\",\n    \"    }\\n\",\n    \"  }\\n\",\n    \"}\\n\",\n    \"\\n\",\n    \"r = requests.put(endpoint + \\\"/indexers/\\\" + indexer_name, data=json.dumps(indexer_payload), headers=headers, params=params)\\n\",\n    \"pprint(r.json())\\n\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"#Query the index for all fields\\n\",\n    \"r = requests.get(endpoint + \\\"/indexes/\\\" + index_name, headers=headers,params=params)\\n\",\n    \"print(json.dumps(r.json(), indent=1))\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"#Query the index to return the contents of organizations\\n\",\n    \"#Note: Index creation may take time. If this step returns no data, wait a few minutes\\n\",\n    \"#      and then try again\\n\",\n    \"r = requests.get(endpoint + \\\"/indexes/\\\" + index_name + \\\"/docs?&search=*&$select=organizations\\\", headers=headers, params=params)\\n\",\n    \"pprint(r.json())\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": []\n  }\n ],\n \"metadata\": {\n  \"kernelspec\": {\n   \"display_name\": \"Python 3\",\n   \"language\": \"python\",\n   \"name\": \"python3\"\n  },\n  \"language_info\": {\n   \"codemirror_mode\": {\n    \"name\": \"ipython\",\n    \"version\": 3\n   },\n   \"file_extension\": \".py\",\n   \"mimetype\": \"text/x-python\",\n   \"name\": \"python\",\n   \"nbconvert_exporter\": \"python\",\n   \"pygments_lexer\": \"ipython3\",\n   \"version\": \"3.7.3\"\n  }\n },\n \"nbformat\": 4,\n \"nbformat_minor\": 2\n}\n",
                                "diffs": [
                                    [
                                        "+{",
                                        "+ \"cells\": [",
                                        "+  {",
                                        "+   \"cell_type\": \"code\",",
                                        "+   \"execution_count\": null,",
                                        "+   \"metadata\": {},",
                                        "+   \"outputs\": [],",
                                        "+   \"source\": [",
                                        "+    \"import json\\n\",",
                                        "+    \"import requests\\n\",",
                                        "+    \"from pprint import pprint\"",
                                        "+   ]",
                                        "+  },",
                                        "+  {",
                                        "+   \"cell_type\": \"code\",",
                                        "+   \"execution_count\": null,",
                                        "+   \"metadata\": {},",
                                        "+   \"outputs\": [],",
                                        "+   \"source\": [",
                                        "+    \"#Define the names for the data source, skillset, index and indexer\\n\",",
                                        "+    \"datasource_name=\\\"cogsrch-py-datasource\\\"\\n\",",
                                        "+    \"skillset_name=\\\"cogsrch-py-skillset\\\"\\n\",",
                                        "+    \"index_name=\\\"cogsrch-py-index\\\"\\n\",",
                                        "+    \"indexer_name=\\\"cogsrch-py-indexer\\\"\\n\"",
                                        "+   ]",
                                        "+  },",
                                        "+  {",
                                        "+   \"cell_type\": \"code\",",
                                        "+   \"execution_count\": null,",
                                        "+   \"metadata\": {},",
                                        "+   \"outputs\": [],",
                                        "+   \"source\": [",
                                        "+    \"#Setup the endpoint\\n\",",
                                        "+    \"endpoint = 'https://<YOUR-SERVICE-NAME>.search.windows.net/'\\n\",",
                                        "+    \"headers = {'Content-Type': 'application/json',\\n\",",
                                        "+    \"        'api-key': '<YOUR-ADMIN-API-KEY>' }\\n\",",
                                        "+    \"params = {\\n\",",
                                        "+    \"    'api-version': '2019-05-06'\\n\",",
                                        "+    \"}\"",
                                        "+   ]",
                                        "+  },",
                                        "+  {",
                                        "+   \"cell_type\": \"code\",",
                                        "+   \"execution_count\": null,",
                                        "+   \"metadata\": {},",
                                        "+   \"outputs\": [],",
                                        "+   \"source\": [",
                                        "+    \"#Create a data source\\n\",",
                                        "+    \"datasourceConnectionString = \\\"<YOUR-BLOB-RESOURCE-CONNECTION-STRING>\\\"\\n\",",
                                        "+    \"datasource_payload = {\\n\",",
                                        "+    \"    \\\"name\\\": datasource_name,\\n\",",
                                        "+    \"    \\\"description\\\": \\\"Demo files to demonstrate cognitive search capabilities.\\\",\\n\",",
                                        "+    \"    \\\"type\\\": \\\"azureblob\\\",\\n\",",
                                        "+    \"    \\\"credentials\\\": {\\n\",",
                                        "+    \"    \\\"connectionString\\\": datasourceConnectionString\\n\",",
                                        "+    \"   },\\n\",",
                                        "+    \"    \\\"container\\\": {\\n\",",
                                        "+    \"     \\\"name\\\": \\\"basic-demo-data-pr\\\"\\n\",",
                                        "+    \"   }\\n\",",
                                        "+    \"}\\n\",",
                                        "+    \"r = requests.put( endpoint + \\\"/datasources/\\\" + datasource_name, data=json.dumps(datasource_payload), headers=headers, params=params )\\n\",",
                                        "+    \"pprint (r.json())\"",
                                        "+   ]",
                                        "+  },",
                                        "+  {",
                                        "+   \"cell_type\": \"code\",",
                                        "+   \"execution_count\": null,",
                                        "+   \"metadata\": {},",
                                        "+   \"outputs\": [],",
                                        "+   \"source\": [",
                                        "+    \"#Create a skillset\\n\",",
                                        "+    \"skillset_payload = {\\n\",",
                                        "+    \"  \\\"name\\\": skillset_name,\\n\",",
                                        "+    \"  \\\"description\\\":\\n\",",
                                        "+    \"  \\\"Extract entities, detect language and extract key-phrases\\\",\\n\",",
                                        "+    \"  \\\"skills\\\":\\n\",",
                                        "+    \"  [\\n\",",
                                        "+    \"    {\\n\",",
                                        "+    \"      \\\"@odata.type\\\": \\\"#Microsoft.Skills.Text.EntityRecognitionSkill\\\",\\n\",",
                                        "+    \"      \\\"categories\\\": [ \\\"Organization\\\" ],\\n\",",
                                        "+    \"      \\\"defaultLanguageCode\\\": \\\"en\\\",\\n\",",
                                        "+    \"      \\\"inputs\\\": [\\n\",",
                                        "+    \"        {\\n\",",
                                        "+    \"          \\\"name\\\": \\\"text\\\", \\\"source\\\": \\\"/document/content\\\"\\n\",",
                                        "+    \"        }\\n\",",
                                        "+    \"      ],\\n\",",
                                        "+    \"      \\\"outputs\\\": [\\n\",",
                                        "+    \"        {\\n\",",
                                        "+    \"          \\\"name\\\": \\\"organizations\\\", \\\"targetName\\\": \\\"organizations\\\"\\n\",",
                                        "+    \"        }\\n\",",
                                        "+    \"      ]\\n\",",
                                        "+    \"    },\\n\",",
                                        "+    \"    {\\n\",",
                                        "+    \"      \\\"@odata.type\\\": \\\"#Microsoft.Skills.Text.LanguageDetectionSkill\\\",\\n\",",
                                        "+    \"      \\\"inputs\\\": [\\n\",",
                                        "+    \"        {\\n\",",
                                        "+    \"          \\\"name\\\": \\\"text\\\", \\\"source\\\": \\\"/document/content\\\"\\n\",",
                                        "+    \"        }\\n\",",
                                        "+    \"      ],\\n\",",
                                        "+    \"      \\\"outputs\\\": [\\n\",",
                                        "+    \"        {\\n\",",
                                        "+    \"          \\\"name\\\": \\\"languageCode\\\",\\n\",",
                                        "+    \"          \\\"targetName\\\": \\\"languageCode\\\"\\n\",",
                                        "+    \"        }\\n\",",
                                        "+    \"      ]\\n\",",
                                        "+    \"    },\\n\",",
                                        "+    \"    {\\n\",",
                                        "+    \"      \\\"@odata.type\\\": \\\"#Microsoft.Skills.Text.SplitSkill\\\",\\n\",",
                                        "+    \"      \\\"textSplitMode\\\" : \\\"pages\\\",\\n\",",
                                        "+    \"      \\\"maximumPageLength\\\": 4000,\\n\",",
                                        "+    \"      \\\"inputs\\\": [\\n\",",
                                        "+    \"        {\\n\",",
                                        "+    \"          \\\"name\\\": \\\"text\\\",\\n\",",
                                        "+    \"          \\\"source\\\": \\\"/document/content\\\"\\n\",",
                                        "+    \"        },\\n\",",
                                        "+    \"        {\\n\",",
                                        "+    \"          \\\"name\\\": \\\"languageCode\\\",\\n\",",
                                        "+    \"          \\\"source\\\": \\\"/document/languageCode\\\"\\n\",",
                                        "+    \"        }\\n\",",
                                        "+    \"      ],\\n\",",
                                        "+    \"      \\\"outputs\\\": [\\n\",",
                                        "+    \"        {\\n\",",
                                        "+    \"          \\\"name\\\": \\\"textItems\\\",\\n\",",
                                        "+    \"          \\\"targetName\\\": \\\"pages\\\"\\n\",",
                                        "+    \"        }\\n\",",
                                        "+    \"      ]\\n\",",
                                        "+    \"    },\\n\",",
                                        "+    \"    {\\n\",",
                                        "+    \"      \\\"@odata.type\\\": \\\"#Microsoft.Skills.Text.KeyPhraseExtractionSkill\\\",\\n\",",
                                        "+    \"      \\\"context\\\": \\\"/document/pages/*\\\",\\n\",",
                                        "+    \"      \\\"inputs\\\": [\\n\",",
                                        "+    \"        {\\n\",",
                                        "+    \"          \\\"name\\\": \\\"text\\\", \\\"source\\\": \\\"/document/pages/*\\\"\\n\",",
                                        "+    \"        },\\n\",",
                                        "+    \"        {\\n\",",
                                        "+    \"          \\\"name\\\":\\\"languageCode\\\", \\\"source\\\": \\\"/document/languageCode\\\"\\n\",",
                                        "+    \"        }\\n\",",
                                        "+    \"      ],\\n\",",
                                        "+    \"      \\\"outputs\\\": [\\n\",",
                                        "+    \"        {\\n\",",
                                        "+    \"          \\\"name\\\": \\\"keyPhrases\\\",\\n\",",
                                        "+    \"          \\\"targetName\\\": \\\"keyPhrases\\\"\\n\",",
                                        "+    \"        }\\n\",",
                                        "+    \"      ]\\n\",",
                                        "+    \"    }\\n\",",
                                        "+    \"  ]\\n\",",
                                        "+    \"}\\n\",",
                                        "+    \"\\n\",",
                                        "+    \"r = requests.put(endpoint + \\\"/skillsets/\\\" + skillset_name, data=json.dumps(skillset_payload), headers=headers, params=params)\\n\",",
                                        "+    \"pprint(r.json())\"",
                                        "+   ]",
                                        "+  },",
                                        "+  {",
                                        "+   \"cell_type\": \"code\",",
                                        "+   \"execution_count\": null,",
                                        "+   \"metadata\": {},",
                                        "+   \"outputs\": [],",
                                        "+   \"source\": [",
                                        "+    \"#Create an index\\n\",",
                                        "+    \"index_payload = {\\n\",",
                                        "+    \"    \\\"name\\\": index_name,\\n\",",
                                        "+    \"    \\\"fields\\\": [\\n\",",
                                        "+    \"      {\\n\",",
                                        "+    \"        \\\"name\\\": \\\"id\\\",\\n\",",
                                        "+    \"        \\\"type\\\": \\\"Edm.String\\\",\\n\",",
                                        "+    \"        \\\"key\\\": \\\"true\\\",\\n\",",
                                        "+    \"        \\\"searchable\\\": \\\"true\\\",\\n\",",
                                        "+    \"        \\\"filterable\\\": \\\"false\\\",\\n\",",
                                        "+    \"        \\\"facetable\\\": \\\"false\\\",\\n\",",
                                        "+    \"        \\\"sortable\\\": \\\"true\\\"\\n\",",
                                        "+    \"      },\\n\",",
                                        "+    \"      {\\n\",",
                                        "+    \"        \\\"name\\\": \\\"content\\\",\\n\",",
                                        "+    \"        \\\"type\\\": \\\"Edm.String\\\",\\n\",",
                                        "+    \"        \\\"sortable\\\": \\\"false\\\",\\n\",",
                                        "+    \"        \\\"searchable\\\": \\\"true\\\",\\n\",",
                                        "+    \"        \\\"filterable\\\": \\\"false\\\",\\n\",",
                                        "+    \"        \\\"facetable\\\": \\\"false\\\"\\n\",",
                                        "+    \"      },\\n\",",
                                        "+    \"      {\\n\",",
                                        "+    \"        \\\"name\\\": \\\"languageCode\\\",\\n\",",
                                        "+    \"        \\\"type\\\": \\\"Edm.String\\\",\\n\",",
                                        "+    \"        \\\"searchable\\\": \\\"true\\\",\\n\",",
                                        "+    \"        \\\"filterable\\\": \\\"false\\\",\\n\",",
                                        "+    \"        \\\"facetable\\\": \\\"false\\\"\\n\",",
                                        "+    \"      },\\n\",",
                                        "+    \"      {\\n\",",
                                        "+    \"        \\\"name\\\": \\\"keyPhrases\\\",\\n\",",
                                        "+    \"        \\\"type\\\": \\\"Collection(Edm.String)\\\",\\n\",",
                                        "+    \"        \\\"searchable\\\": \\\"true\\\",\\n\",",
                                        "+    \"        \\\"filterable\\\": \\\"false\\\",\\n\",",
                                        "+    \"        \\\"facetable\\\": \\\"false\\\"\\n\",",
                                        "+    \"      },\\n\",",
                                        "+    \"      {\\n\",",
                                        "+    \"        \\\"name\\\": \\\"organizations\\\",\\n\",",
                                        "+    \"        \\\"type\\\": \\\"Collection(Edm.String)\\\",\\n\",",
                                        "+    \"        \\\"searchable\\\": \\\"true\\\",\\n\",",
                                        "+    \"        \\\"sortable\\\": \\\"false\\\",\\n\",",
                                        "+    \"        \\\"filterable\\\": \\\"false\\\",\\n\",",
                                        "+    \"        \\\"facetable\\\": \\\"false\\\"\\n\",",
                                        "+    \"      }\\n\",",
                                        "+    \"   ]\\n\",",
                                        "+    \"}\\n\",",
                                        "+    \"\\n\",",
                                        "+    \"r = requests.put(endpoint + \\\"/indexes/\\\" + index_name, data=json.dumps(index_payload), headers=headers, params=params)\\n\",",
                                        "+    \"pprint(r.json())\"",
                                        "+   ]",
                                        "+  },",
                                        "+  {",
                                        "+   \"cell_type\": \"code\",",
                                        "+   \"execution_count\": null,",
                                        "+   \"metadata\": {},",
                                        "+   \"outputs\": [],",
                                        "+   \"source\": [",
                                        "+    \"# Create an indexer\\n\",",
                                        "+    \"indexer_payload = {\\n\",",
                                        "+    \"    \\\"name\\\": indexer_name,\\n\",",
                                        "+    \"    \\\"dataSourceName\\\": datasource_name,\\n\",",
                                        "+    \"    \\\"targetIndexName\\\": index_name,\\n\",",
                                        "+    \"    \\\"skillsetName\\\": skillset_name,\\n\",",
                                        "+    \"    \\\"fieldMappings\\\" : [\\n\",",
                                        "+    \"    {\\n\",",
                                        "+    \"      \\\"sourceFieldName\\\" : \\\"metadata_storage_path\\\",\\n\",",
                                        "+    \"      \\\"targetFieldName\\\" : \\\"id\\\",\\n\",",
                                        "+    \"      \\\"mappingFunction\\\" :\\n\",",
                                        "+    \"        { \\\"name\\\" : \\\"base64Encode\\\" }\\n\",",
                                        "+    \"    },\\n\",",
                                        "+    \"    {\\n\",",
                                        "+    \"      \\\"sourceFieldName\\\" : \\\"content\\\",\\n\",",
                                        "+    \"      \\\"targetFieldName\\\" : \\\"content\\\"\\n\",",
                                        "+    \"    }\\n\",",
                                        "+    \"  ],\\n\",",
                                        "+    \"   \\\"outputFieldMappings\\\" :\\n\",",
                                        "+    \"  [\\n\",",
                                        "+    \"    {\\n\",",
                                        "+    \"      \\\"sourceFieldName\\\" : \\\"/document/organizations\\\",\\n\",",
                                        "+    \"      \\\"targetFieldName\\\" : \\\"organizations\\\"\\n\",",
                                        "+    \"    },\\n\",",
                                        "+    \"    {\\n\",",
                                        "+    \"      \\\"sourceFieldName\\\" : \\\"/document/pages/*/keyPhrases/*\\\",\\n\",",
                                        "+    \"      \\\"targetFieldName\\\" : \\\"keyPhrases\\\"\\n\",",
                                        "+    \"    },\\n\",",
                                        "+    \"    {\\n\",",
                                        "+    \"      \\\"sourceFieldName\\\": \\\"/document/languageCode\\\",\\n\",",
                                        "+    \"      \\\"targetFieldName\\\": \\\"languageCode\\\"\\n\",",
                                        "+    \"    }\\n\",",
                                        "+    \"  ],\\n\",",
                                        "+    \"   \\\"parameters\\\":\\n\",",
                                        "+    \"  {\\n\",",
                                        "+    \"    \\\"maxFailedItems\\\":-1,\\n\",",
                                        "+    \"    \\\"maxFailedItemsPerBatch\\\":-1,\\n\",",
                                        "+    \"    \\\"configuration\\\":\\n\",",
                                        "+    \"    {\\n\",",
                                        "+    \"      \\\"dataToExtract\\\": \\\"contentAndMetadata\\\",\\n\",",
                                        "+    \"      \\\"imageAction\\\": \\\"generateNormalizedImages\\\"\\n\",",
                                        "+    \"    }\\n\",",
                                        "+    \"  }\\n\",",
                                        "+    \"}\\n\",",
                                        "+    \"\\n\",",
                                        "+    \"r = requests.put(endpoint + \\\"/indexers/\\\" + indexer_name, data=json.dumps(indexer_payload), headers=headers, params=params)\\n\",",
                                        "+    \"pprint(r.json())\\n\"",
                                        "+   ]",
                                        "+  },",
                                        "+  {",
                                        "+   \"cell_type\": \"code\",",
                                        "+   \"execution_count\": null,",
                                        "+   \"metadata\": {},",
                                        "+   \"outputs\": [],",
                                        "+   \"source\": [",
                                        "+    \"#Query the index for all fields\\n\",",
                                        "+    \"r = requests.get(endpoint + \\\"/indexes/\\\" + index_name, headers=headers,params=params)\\n\",",
                                        "+    \"print(json.dumps(r.json(), indent=1))\"",
                                        "+   ]",
                                        "+  },",
                                        "+  {",
                                        "+   \"cell_type\": \"code\",",
                                        "+   \"execution_count\": null,",
                                        "+   \"metadata\": {},",
                                        "+   \"outputs\": [],",
                                        "+   \"source\": [",
                                        "+    \"#Query the index to return the contents of organizations\\n\",",
                                        "+    \"#Note: Index creation may take time. If this step returns no data, wait a few minutes\\n\",",
                                        "+    \"#      and then try again\\n\",",
                                        "+    \"r = requests.get(endpoint + \\\"/indexes/\\\" + index_name + \\\"/docs?&search=*&$select=organizations\\\", headers=headers, params=params)\\n\",",
                                        "+    \"pprint(r.json())\"",
                                        "+   ]",
                                        "+  },",
                                        "+  {",
                                        "+   \"cell_type\": \"code\",",
                                        "+   \"execution_count\": null,",
                                        "+   \"metadata\": {},",
                                        "+   \"outputs\": [],",
                                        "+   \"source\": []",
                                        "+  }",
                                        "+ ],",
                                        "+ \"metadata\": {",
                                        "+  \"kernelspec\": {",
                                        "+   \"display_name\": \"Python 3\",",
                                        "+   \"language\": \"python\",",
                                        "+   \"name\": \"python3\"",
                                        "+  },",
                                        "+  \"language_info\": {",
                                        "+   \"codemirror_mode\": {",
                                        "+    \"name\": \"ipython\",",
                                        "+    \"version\": 3",
                                        "+   },",
                                        "+   \"file_extension\": \".py\",",
                                        "+   \"mimetype\": \"text/x-python\",",
                                        "+   \"name\": \"python\",",
                                        "+   \"nbconvert_exporter\": \"python\",",
                                        "+   \"pygments_lexer\": \"ipython3\",",
                                        "+   \"version\": \"3.7.3\"",
                                        "+  }",
                                        "+ },",
                                        "+ \"nbformat\": 4,",
                                        "+ \"nbformat_minor\": 2",
                                        "+}",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "e58b5c70079b61a3c20b46b93f359848cf2d1ccc",
                    "link": "https://github.com/Azure-Samples/azure-search-python-samples/commit/e58b5c70079b61a3c20b46b93f359848cf2d1ccc",
                    "files": [
                        {
                            "name": "Image-Processing/BFR_Sample_Rest.ipynb",
                            "content": {
                                "current": "{\n \"cells\": [\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"# Azure Cognitive Search sample \\n\",\n    \"## Passing Images as Binary File References\\n\",\n    \"\\n\",\n    \"Cognitive Search skillsets that need to pass images to custom skills use a binary file reference to serialize the images to pass them to and from skills. This sample demonstrates an example of how skills can be configured to accept an image as an input from the skillset and return images as outputs to the skillset. This example does nothing more than segment an image based on the layout from OCR. The sole purpose of this sample is to demonstrate how you pass images to skills and how skills can return images.\\n\",\n    \"\\n\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"### Prerequisites \\n\",\n    \"\\n\",\n    \"Provision the required services:\\n\",\n    \"1. [Azure Cognitive Search](https://docs.microsoft.com/azure/search/search-create-service-portal)\\n\",\n    \"2. [Azure Functions](https://docs.microsoft.com/azure/azure-functions/) used for hosting an API endpoint.\\n\",\n    \"3. [Storage Account](https://docs.microsoft.com/azure/storage/blobs/)\\n\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"### Deploy the Azure functions app \\n\",\n    \"The ```SplitImage``` folder contains an Azure function that will accept an input in the [custom skill format](https://docs.microsoft.com/azure/search/cognitive-search-custom-skill-web-api#skill-inputs). \\n\",\n    \"Each input record contains an image that is serialized as a ```Base64``` encoded string and the layout text returned from the OCR skill.\\n\",\n    \"The skill then segments the image into smaller images based on the coordinates of the layout text. It then returns a list of images, each ```Base64``` encoded back to the skillset. While this is not very useful, you could build a [Custom Vision](https://github.com/Azure-Samples/azure-search-power-skills/tree/master/Vision/CustomVision) skill to perform a useful inference on your images.\\n\",\n    \"\\n\",\n    \"Follow the [Azure Functions tutorial](https://docs.microsoft.com/azure/developer/python/tutorial-vs-code-serverless-python-05) to deploy the function. Once the deployment completes, navigate to the function app in the portal, select the function (SplitImage) and click the Get Function Url button. Save the function url as we will use it in the next step.\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"### Create the enrichment pipeline\\n\",\n    \"In the next few steps we will configure the Cognitive Search enrichment pipeline with the following steps:\\n\",\n    \"1. Create a blob storage data source. Ensure you have a blob storage container with at least one file containing images.\\n\",\n    \"2. Create a skillset to enrich the documents in the data source\\n\",\n    \"3. Create an index\\n\",\n    \"4. Create an indexer to move documents from the data source to the index while invoking the skillset\\n\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"!pip install azure-storage-blob\\n\",\n    \"\\n\",\n    \"import os\\n\",\n    \"import json\\n\",\n    \"import requests\\n\",\n    \"\\n\",\n    \"# Configure all required variables for Cognitive Search. Replace each with the credentials from your accounts.\\n\",\n    \"\\n\",\n    \"# Replace with Search Service name, API key, and endpoint from the Azure portal.\\n\",\n    \"search_service = \\\"\\\" # In the format \\\"https://searchservicename.search.windows.net\\\"\\n\",\n    \"api_key = 'your search service API key'\\n\",\n    \"\\n\",\n    \"# Leave the API version and content_type as they are listed here.\\n\",\n    \"api_version = '2020-06-30'\\n\",\n    \"content_type = 'application/json'\\n\",\n    \"\\n\",\n    \"# Replace with a Cognitive Services all in one key.\\n\",\n    \"cog_svcs_key = '' #Required only if processing more than 20 documents\\n\",\n    \"cog_svcs_acct = 'your cog services account name'\\n\",\n    \"\\n\",\n    \"#Connection string to the storage account. This will be used for the datasource, knowledge store and cache\\n\",\n    \"STORAGECONNSTRING = \\\"DefaultEndpointsProtocol=https;AccountName=<Storage Acct>;AccountKey=<KEY>;EndpointSuffix=core.windows.net\\\"\\n\",\n    \"# The container with your files containing images\\n\",\n    \"datasource_container = 'bfrsample' # Replace with the container containging your files\\n\",\n    \"# This sample assumes you will use the same storage account for the datasource, knowledge store and indexer cache. The knowledge store will contain the projected images\\n\",\n    \"know_store_cache = STORAGECONNSTRING\\n\",\n    \"# Container where the sliced images will be projected to\\n\",\n    \"know_store_container = \\\"obfuscated\\\"\\n\",\n    \"skill_uri = \\\"https://<skillname>.azurewebsites.net/api/SplitImage?code=CODE\\\"\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Create a helper function to invoke the Cognitive Search REST API\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"def construct_Url(service, resource, resource_name, action, api_version):\\n\",\n    \"    if resource_name:\\n\",\n    \"        \\n\",\n    \"        if action:\\n\",\n    \"            return service + '/'+ resource + '/' + resource_name + '/' + action + '?api-version=' + api_version\\n\",\n    \"        else:\\n\",\n    \"            return service + '/'+ resource + '/' + resource_name + '?api-version=' + api_version\\n\",\n    \"    else:\\n\",\n    \"        return service + '/'+ resource + '?api-version=' + api_version\\n\",\n    \"\\n\",\n    \"\\n\",\n    \"headers = {'api-key': api_key, 'Content-Type': content_type}\\n\",\n    \"# Test out the URLs to ensure that the configuration works\\n\",\n    \"print(construct_Url(search_service, \\\"indexes\\\", \\\"bfr-sample\\\", \\\"analyze\\\", api_version))\\n\",\n    \"print(construct_Url(search_service, \\\"indexes\\\", \\\"bfr-sample\\\", None, api_version))\\n\",\n    \"print(construct_Url(search_service, \\\"indexers\\\", None, None, api_version))\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"#### Create the data source\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"container = datasource_container\\n\",\n    \"\\n\",\n    \"datsource_def = {\\n\",\n    \"    'name': f'{datasource_container}-ds',\\n\",\n    \"    'description': f'Datasource containing files with sample images',\\n\",\n    \"    'type': 'azureblob',\\n\",\n    \"    'subtype': None,\\n\",\n    \"    'credentials': {\\n\",\n    \"        'connectionString': f'{STORAGECONNSTRING}'\\n\",\n    \"    },\\n\",\n    \"    'container': {\\n\",\n    \"        'name': f'{datasource_container}'\\n\",\n    \"    },\\n\",\n    \"\\n\",\n    \"}\\n\",\n    \"r = requests.post(construct_Url(search_service, \\\"datasources\\\", None, None, api_version), data=json.dumps(datsource_def),  headers=headers)\\n\",\n    \"print(r)\\n\",\n    \"res = r.json()\\n\",\n    \"print(json.dumps(res, indent=2))\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"#### Create the skillset\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"skillset_name = f'{datasource_container}-ss'\\n\",\n    \"skillset_def = {\\n\",\n    \"    'name': f'{skillset_name}',\\n\",\n    \"    'description': 'Skillset to enrich hotel reviews with aspect based sentiment',\\n\",\n    \"    'skills': [\\n\",\n    \"        {\\n\",\n    \"          \\\"@odata.type\\\": \\\"#Microsoft.Skills.Vision.OcrSkill\\\",\\n\",\n    \"          \\\"name\\\": \\\"OCRSkill\\\",\\n\",\n    \"          \\\"description\\\": \\\"OCR Skill\\\",\\n\",\n    \"          \\\"context\\\": \\\"/document/normalized_images/*\\\",\\n\",\n    \"          \\\"textExtractionAlgorithm\\\": None,\\n\",\n    \"          \\\"lineEnding\\\": \\\"Space\\\",\\n\",\n    \"          \\\"defaultLanguageCode\\\": \\\"en\\\",\\n\",\n    \"          \\\"detectOrientation\\\": True,\\n\",\n    \"          \\\"inputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"image\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/normalized_images/*\\\"\\n\",\n    \"            }\\n\",\n    \"          ],\\n\",\n    \"          \\\"outputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"text\\\",\\n\",\n    \"              \\\"targetName\\\": \\\"text\\\"\\n\",\n    \"            },\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"layoutText\\\",\\n\",\n    \"              \\\"targetName\\\": \\\"layoutText\\\"\\n\",\n    \"            }\\n\",\n    \"          ]\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"          \\\"@odata.type\\\": \\\"#Microsoft.Skills.Text.PIIDetectionSkill\\\",\\n\",\n    \"          \\\"name\\\": \\\"#1\\\",\\n\",\n    \"          \\\"description\\\": \\\"\\\",\\n\",\n    \"          \\\"context\\\": \\\"/document/merged_content\\\",\\n\",\n    \"          \\\"defaultLanguageCode\\\": \\\"en\\\",\\n\",\n    \"          \\\"minimumPrecision\\\": 0.5,\\n\",\n    \"          \\\"maskingMode\\\": \\\"replace\\\",\\n\",\n    \"          \\\"maskingCharacter\\\": \\\"*\\\",\\n\",\n    \"          \\\"inputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"text\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/merged_content\\\"\\n\",\n    \"            }\\n\",\n    \"          ],\\n\",\n    \"          \\\"outputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"piiEntities\\\",\\n\",\n    \"              \\\"targetName\\\": \\\"pii_entities\\\"\\n\",\n    \"            },\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"maskedText\\\",\\n\",\n    \"              \\\"targetName\\\": \\\"masked_text\\\"\\n\",\n    \"            }\\n\",\n    \"          ]\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"          \\\"@odata.type\\\": \\\"#Microsoft.Skills.Custom.WebApiSkill\\\",\\n\",\n    \"          \\\"name\\\": \\\"ImageSkill\\\",\\n\",\n    \"          \\\"description\\\": \\\"Segment Images\\\",\\n\",\n    \"          \\\"context\\\": \\\"/document/normalized_images/*\\\",\\n\",\n    \"          \\\"uri\\\": f'{skill_uri}',\\n\",\n    \"          \\\"httpMethod\\\": \\\"POST\\\",\\n\",\n    \"          \\\"timeout\\\": \\\"PT30S\\\",\\n\",\n    \"          \\\"batchSize\\\": 1000,\\n\",\n    \"          \\\"degreeOfParallelism\\\": 1,\\n\",\n    \"          \\\"inputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"image\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/normalized_images/*\\\"\\n\",\n    \"            },\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"layoutText\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/normalized_images/*/layoutText\\\"\\n\",\n    \"            },\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"pii_entities\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/merged_content/pii_entities\\\"\\n\",\n    \"            }\\n\",\n    \"          ],\\n\",\n    \"          \\\"outputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"slices\\\",\\n\",\n    \"              \\\"targetName\\\": \\\"slices\\\"\\n\",\n    \"            },\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"original\\\",\\n\",\n    \"              \\\"targetName\\\": \\\"original\\\"\\n\",\n    \"            }\\n\",\n    \"          ],\\n\",\n    \"          \\\"httpHeaders\\\": {}\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"          \\\"@odata.type\\\": \\\"#Microsoft.Skills.Text.MergeSkill\\\",\\n\",\n    \"          \\\"name\\\": \\\"MergeSkill\\\",\\n\",\n    \"          \\\"description\\\": \\\"Merge results from cracking with OCR text\\\",\\n\",\n    \"          \\\"context\\\": \\\"/document\\\",\\n\",\n    \"          \\\"insertPreTag\\\": \\\" \\\",\\n\",\n    \"          \\\"insertPostTag\\\": \\\" \\\",\\n\",\n    \"          \\\"inputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"text\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/content\\\"\\n\",\n    \"            },\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"itemsToInsert\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/normalized_images/*/text\\\"\\n\",\n    \"            },\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"offsets\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/normalized_images/*/contentOffset\\\"\\n\",\n    \"            }\\n\",\n    \"          ],\\n\",\n    \"          \\\"outputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"mergedText\\\",\\n\",\n    \"              \\\"targetName\\\": \\\"merged_content\\\"\\n\",\n    \"            }\\n\",\n    \"          ]\\n\",\n    \"        }\\n\",\n    \"        \\n\",\n    \"    ],\\n\",\n    \"    'cognitiveServices':None,\\n\",\n    \"    'knowledgeStore': {\\n\",\n    \"        'storageConnectionString': f'{STORAGECONNSTRING}',\\n\",\n    \"        'projections': [\\n\",\n    \"          {\\n\",\n    \"        \\\"tables\\\": [],\\n\",\n    \"        \\\"objects\\\": [\\n\",\n    \"          {\\n\",\n    \"            \\\"storageContainer\\\": \\\"layout\\\",\\n\",\n    \"            \\\"referenceKeyName\\\": None,\\n\",\n    \"            \\\"generatedKeyName\\\": \\\"layoutKey\\\",\\n\",\n    \"            \\\"source\\\": \\\"/document/normalized_images/*/layoutText\\\",\\n\",\n    \"            \\\"sourceContext\\\": None,\\n\",\n    \"            \\\"inputs\\\": []\\n\",\n    \"          }\\n\",\n    \"        ],\\n\",\n    \"        \\\"files\\\": [\\n\",\n    \"          {\\n\",\n    \"            \\\"storageContainer\\\": \\\"slices\\\",\\n\",\n    \"            \\\"referenceKeyName\\\": None,\\n\",\n    \"            \\\"generatedKeyName\\\": \\\"slicesKey\\\",\\n\",\n    \"            \\\"source\\\": \\\"/document/normalized_images/*/slices/*\\\",\\n\",\n    \"            \\\"sourceContext\\\": None,\\n\",\n    \"            \\\"inputs\\\": []\\n\",\n    \"          },\\n\",\n    \"          {\\n\",\n    \"            \\\"storageContainer\\\": \\\"images\\\",\\n\",\n    \"            \\\"referenceKeyName\\\": None,\\n\",\n    \"            \\\"generatedKeyName\\\": \\\"imageKey\\\",\\n\",\n    \"            \\\"source\\\": \\\"/document/normalized_images/*\\\",\\n\",\n    \"            \\\"sourceContext\\\": None,\\n\",\n    \"            \\\"inputs\\\": []\\n\",\n    \"          },\\n\",\n    \"          {\\n\",\n    \"            \\\"storageContainer\\\": f'{know_store_container}',\\n\",\n    \"            \\\"referenceKeyName\\\": None,\\n\",\n    \"            \\\"generatedKeyName\\\": \\\"originalKey\\\",\\n\",\n    \"            \\\"source\\\": \\\"/document/normalized_images/*/original\\\",\\n\",\n    \"            \\\"sourceContext\\\": None,\\n\",\n    \"            \\\"inputs\\\": []\\n\",\n    \"          }\\n\",\n    \"        ]\\n\",\n    \"      }\\n\",\n    \"        ]\\n\",\n    \"    }\\n\",\n    \"}\\n\",\n    \"\\n\",\n    \"\\n\",\n    \"r = requests.put(construct_Url(search_service, \\\"skillsets\\\", skillset_name, None, api_version), data=json.dumps(skillset_def),  headers=headers)\\n\",\n    \"print(r)\\n\",\n    \"\\n\",\n    \"res = r.json()\\n\",\n    \"print(json.dumps(res, indent=2))\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"#### Create the index\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"indexname = f'{datasource_container}-idx'\\n\",\n    \"index_def = {\\n\",\n    \"    \\\"name\\\":f'{indexname}',\\n\",\n    \"      \\\"defaultScoringProfile\\\": \\\"\\\",\\n\",\n    \"    \\\"fields\\\": [\\n\",\n    \"        {\\n\",\n    \"          \\\"name\\\": \\\"image_text\\\",\\n\",\n    \"          \\\"type\\\": \\\"Collection(Edm.String)\\\",\\n\",\n    \"          \\\"facetable\\\": False,\\n\",\n    \"          \\\"filterable\\\": False,\\n\",\n    \"          \\\"retrievable\\\": True,\\n\",\n    \"          \\\"searchable\\\": True,\\n\",\n    \"          \\\"analyzer\\\": \\\"standard.lucene\\\",\\n\",\n    \"          \\\"indexAnalyzer\\\": None,\\n\",\n    \"          \\\"searchAnalyzer\\\": None,\\n\",\n    \"          \\\"synonymMaps\\\": [],\\n\",\n    \"          \\\"fields\\\": []\\n\",\n    \"        },\\n\",\n    \"  \\n\",\n    \"        {\\n\",\n    \"          \\\"name\\\": \\\"content\\\",\\n\",\n    \"          \\\"type\\\": \\\"Edm.String\\\",\\n\",\n    \"          \\\"facetable\\\": False,\\n\",\n    \"          \\\"filterable\\\": False,\\n\",\n    \"          \\\"key\\\": False,\\n\",\n    \"          \\\"retrievable\\\": True,\\n\",\n    \"          \\\"searchable\\\": True,\\n\",\n    \"          \\\"sortable\\\": False,\\n\",\n    \"          \\\"analyzer\\\": \\\"standard.lucene\\\",\\n\",\n    \"          \\\"indexAnalyzer\\\": None,\\n\",\n    \"          \\\"searchAnalyzer\\\": None,\\n\",\n    \"          \\\"synonymMaps\\\": [],\\n\",\n    \"          \\\"fields\\\": []\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"metadata_storage_content_type\\\",\\n\",\n    \"            \\\"type\\\": \\\"Edm.String\\\",\\n\",\n    \"            \\\"searchable\\\": False,\\n\",\n    \"            \\\"filterable\\\": False,\\n\",\n    \"            \\\"retrievable\\\": True,\\n\",\n    \"            \\\"sortable\\\": False,\\n\",\n    \"            \\\"facetable\\\": False,\\n\",\n    \"            \\\"key\\\": False,\\n\",\n    \"            \\\"indexAnalyzer\\\": None,\\n\",\n    \"            \\\"searchAnalyzer\\\": None,\\n\",\n    \"            \\\"analyzer\\\": None,\\n\",\n    \"            \\\"synonymMaps\\\": []\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"metadata_storage_size\\\",\\n\",\n    \"            \\\"type\\\": \\\"Edm.Int64\\\",\\n\",\n    \"            \\\"searchable\\\": False,\\n\",\n    \"            \\\"filterable\\\": False,\\n\",\n    \"            \\\"retrievable\\\": True,\\n\",\n    \"            \\\"sortable\\\": False,\\n\",\n    \"            \\\"facetable\\\": False,\\n\",\n    \"            \\\"key\\\": False,\\n\",\n    \"            \\\"indexAnalyzer\\\": None,\\n\",\n    \"            \\\"searchAnalyzer\\\": None,\\n\",\n    \"            \\\"analyzer\\\": None,\\n\",\n    \"            \\\"synonymMaps\\\": []\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"metadata_storage_last_modified\\\",\\n\",\n    \"            \\\"type\\\": \\\"Edm.DateTimeOffset\\\",\\n\",\n    \"            \\\"searchable\\\": False,\\n\",\n    \"            \\\"filterable\\\": False,\\n\",\n    \"            \\\"retrievable\\\": True,\\n\",\n    \"            \\\"sortable\\\": False,\\n\",\n    \"            \\\"facetable\\\": False,\\n\",\n    \"            \\\"key\\\": False,\\n\",\n    \"            \\\"indexAnalyzer\\\": None,\\n\",\n    \"            \\\"searchAnalyzer\\\": None,\\n\",\n    \"            \\\"analyzer\\\": None,\\n\",\n    \"            \\\"synonymMaps\\\": []\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"metadata_storage_content_md5\\\",\\n\",\n    \"            \\\"type\\\": \\\"Edm.String\\\",\\n\",\n    \"            \\\"searchable\\\": False,\\n\",\n    \"            \\\"filterable\\\": False,\\n\",\n    \"            \\\"retrievable\\\": True,\\n\",\n    \"            \\\"sortable\\\": False,\\n\",\n    \"            \\\"facetable\\\": False,\\n\",\n    \"            \\\"key\\\": False,\\n\",\n    \"            \\\"indexAnalyzer\\\": None,\\n\",\n    \"            \\\"searchAnalyzer\\\": None,\\n\",\n    \"            \\\"analyzer\\\": None,\\n\",\n    \"            \\\"synonymMaps\\\": []\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"metadata_storage_name\\\",\\n\",\n    \"            \\\"type\\\": \\\"Edm.String\\\",\\n\",\n    \"            \\\"searchable\\\": False,\\n\",\n    \"            \\\"filterable\\\": False,\\n\",\n    \"            \\\"retrievable\\\": True,\\n\",\n    \"            \\\"sortable\\\": False,\\n\",\n    \"            \\\"facetable\\\": False,\\n\",\n    \"            \\\"key\\\": False,\\n\",\n    \"            \\\"indexAnalyzer\\\": None,\\n\",\n    \"            \\\"searchAnalyzer\\\": None,\\n\",\n    \"            \\\"analyzer\\\": None,\\n\",\n    \"            \\\"synonymMaps\\\": []\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"metadata_storage_path\\\",\\n\",\n    \"            \\\"type\\\": \\\"Edm.String\\\",\\n\",\n    \"            \\\"searchable\\\": False,\\n\",\n    \"            \\\"filterable\\\": False,\\n\",\n    \"            \\\"retrievable\\\": True,\\n\",\n    \"            \\\"sortable\\\": False,\\n\",\n    \"            \\\"facetable\\\": False,\\n\",\n    \"            \\\"key\\\": True,\\n\",\n    \"            \\\"indexAnalyzer\\\": None,\\n\",\n    \"            \\\"searchAnalyzer\\\": None,\\n\",\n    \"            \\\"analyzer\\\": None,\\n\",\n    \"            \\\"synonymMaps\\\": []\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"metadata_storage_file_extension\\\",\\n\",\n    \"            \\\"type\\\": \\\"Edm.String\\\",\\n\",\n    \"            \\\"searchable\\\": False,\\n\",\n    \"            \\\"filterable\\\": False,\\n\",\n    \"            \\\"retrievable\\\": True,\\n\",\n    \"            \\\"sortable\\\": False,\\n\",\n    \"            \\\"facetable\\\": False,\\n\",\n    \"            \\\"key\\\": False,\\n\",\n    \"            \\\"indexAnalyzer\\\": None,\\n\",\n    \"            \\\"searchAnalyzer\\\": None,\\n\",\n    \"            \\\"analyzer\\\": None,\\n\",\n    \"            \\\"synonymMaps\\\": []\\n\",\n    \"        }\\n\",\n    \"        \\n\",\n    \"    ],\\n\",\n    \"    \\\"scoringProfiles\\\": [],\\n\",\n    \"    \\\"corsOptions\\\": None,\\n\",\n    \"    \\\"suggesters\\\": [\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"sg\\\",\\n\",\n    \"            \\\"searchMode\\\": \\\"analyzingInfixMatching\\\",\\n\",\n    \"            \\\"sourceFields\\\": [\\n\",\n    \"                \\\"metadata_storage_path\\\"\\n\",\n    \"            ]\\n\",\n    \"        }\\n\",\n    \"    ],\\n\",\n    \"    \\\"analyzers\\\": [],\\n\",\n    \"    \\\"tokenizers\\\": [],\\n\",\n    \"    \\\"tokenFilters\\\": [],\\n\",\n    \"    \\\"charFilters\\\": [],\\n\",\n    \"    \\\"encryptionKey\\\": None,\\n\",\n    \"    \\\"similarity\\\": None\\n\",\n    \"}\\n\",\n    \"r = requests.post(construct_Url(search_service, \\\"indexes\\\", None, None, api_version), data=json.dumps(index_def),  headers=headers)\\n\",\n    \"print(r)\\n\",\n    \"res = r.json()\\n\",\n    \"print(json.dumps(res, indent=2))\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"#### Create the indexer\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"indexername = f'{datasource_container}-idxr'\\n\",\n    \"indexer_def = {\\n\",\n    \"    \\\"name\\\": f'{indexername}',\\n\",\n    \"    \\\"description\\\": \\\"Indexer to enrich hotel reviews\\\",\\n\",\n    \"    \\\"dataSourceName\\\": f'{datasource_container}-ds',\\n\",\n    \"    \\\"skillsetName\\\": f'{datasource_container}-ss',\\n\",\n    \"    \\\"targetIndexName\\\": f'{datasource_container}-idx',\\n\",\n    \"    \\\"disabled\\\": None,\\n\",\n    \"    \\\"schedule\\\": {\\n\",\n    \"        \\\"interval\\\": \\\"PT2H\\\",\\n\",\n    \"        \\\"startTime\\\": \\\"0001-01-01T00:00:00Z\\\"\\n\",\n    \"      },\\n\",\n    \"    \\\"parameters\\\": {\\n\",\n    \"    \\\"batchSize\\\": None,\\n\",\n    \"    \\\"maxFailedItems\\\": 0,\\n\",\n    \"    \\\"maxFailedItemsPerBatch\\\": 0,\\n\",\n    \"    \\\"base64EncodeKeys\\\": None,\\n\",\n    \"    \\\"configuration\\\": {\\n\",\n    \"      \\\"dataToExtract\\\": \\\"contentAndMetadata\\\",\\n\",\n    \"      \\\"parsingMode\\\": \\\"default\\\",\\n\",\n    \"      \\\"imageAction\\\": \\\"generateNormalizedImages\\\"\\n\",\n    \"        }\\n\",\n    \"    },\\n\",\n    \"   \\\"fieldMappings\\\": [\\n\",\n    \"    {\\n\",\n    \"      \\\"sourceFieldName\\\": \\\"metadata_storage_path\\\",\\n\",\n    \"      \\\"targetFieldName\\\": \\\"metadata_storage_path\\\",\\n\",\n    \"      \\\"mappingFunction\\\": {\\n\",\n    \"        \\\"name\\\": \\\"base64Encode\\\"\\n\",\n    \"      }\\n\",\n    \"    }\\n\",\n    \"    ],\\n\",\n    \"    \\\"outputFieldMappings\\\": [\\n\",\n    \"        {\\n\",\n    \"          \\\"sourceFieldName\\\": \\\"/document/normalized_images/*/text\\\",\\n\",\n    \"          \\\"targetFieldName\\\": \\\"image_text\\\"\\n\",\n    \"        }\\n\",\n    \"    ],\\n\",\n    \"    \\\"cache\\\": {\\n\",\n    \"        \\\"enableReprocessing\\\": True,\\n\",\n    \"        \\\"storageConnectionString\\\": f'{know_store_cache}'\\n\",\n    \"    }\\n\",\n    \"}\\n\",\n    \"r = requests.post(construct_Url(search_service, \\\"indexers\\\", None, None, api_version), data=json.dumps(indexer_def), headers=headers)\\n\",\n    \"print(r)\\n\",\n    \"res = r.json()\\n\",\n    \"print(json.dumps(res, indent=2))\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"#### Run the indexer\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"r = requests.post(construct_Url(search_service, \\\"indexers\\\", indexername, \\\"run\\\", api_version), data=None,  headers=headers)\\n\",\n    \"print(r)\\n\",\n    \"#res = r.json()\\n\",\n    \"#print(json.dumps(res, indent=2))\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"### View Results\\n\",\n    \"The following cell downloads the image so that you can verify skillset success.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"from IPython.display import Image\\n\",\n    \"import base64\\n\",\n    \"from azure.storage.blob import ContainerClient\\n\",\n    \"count = 0\\n\",\n    \"container = ContainerClient.from_connection_string(conn_str=STORAGECONNSTRING, container_name=know_store_container)\\n\",\n    \"blob_list = container.list_blobs()\\n\",\n    \"for blob in blob_list:\\n\",\n    \"    print(blob.name + '\\\\n')\\n\",\n    \"    blob_client = container.get_blob_client(blob.name)\\n\",\n    \"    with open(\\\"image\\\" + str(count) + \\\".jpg\\\", \\\"wb\\\") as my_blob:\\n\",\n    \"                download_stream = blob_client.download_blob()\\n\",\n    \"                my_blob.write(download_stream.readall())\\n\",\n    \"    count = count + 1\\n\",\n    \"    if(count == 3):\\n\",\n    \"        break\\n\",\n    \"\\n\",\n    \"Image(filename='image2.jpg') \"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"### Next Steps\\n\",\n    \"You now know how to pass images into skills and even return images to the skillset. As a next step, you can start from scratch and build a [custom AML Skill](https://docs.microsoft.com/en-us/azure/search/cognitive-search-aml-skill) to perform inferences on images or use the Custom Vision service to build a skill. The power skills github repository has a [sample custom vision skill](https://github.com/Azure-Samples/azure-search-power-skills/tree/master/Vision/CustomVision) to help you get started.\"\n   ]\n  }\n ],\n \"metadata\": {\n  \"kernelspec\": {\n   \"display_name\": \"Python 3\",\n   \"language\": \"python\",\n   \"name\": \"python3\"\n  },\n  \"language_info\": {\n   \"codemirror_mode\": {\n    \"name\": \"ipython\",\n    \"version\": 3\n   },\n   \"file_extension\": \".py\",\n   \"mimetype\": \"text/x-python\",\n   \"name\": \"python\",\n   \"nbconvert_exporter\": \"python\",\n   \"pygments_lexer\": \"ipython3\",\n   \"version\": \"3.7.4\"\n  }\n },\n \"nbformat\": 4,\n \"nbformat_minor\": 2\n}\n",
                                "diffs": [
                                    [
                                        "   },",
                                        "   {",
                                        "    \"cell_type\": \"code\",",
                                        "-   \"execution_count\": 1,",
                                        "+   \"execution_count\": null,",
                                        "    \"metadata\": {},",
                                        "-   \"outputs\": [",
                                        "-    {",
                                        "-     \"ename\": \"NameError\",",
                                        "-     \"evalue\": \"name 'STORAGECONNSTRING' is not defined\",",
                                        "-     \"output_type\": \"error\",",
                                        "-     \"traceback\": [",
                                        "-      \"\\u001b[1;31m---------------------------------------------------------------------------\\u001b[0m\",",
                                        "-      \"\\u001b[1;31mNameError\\u001b[0m                                 Traceback (most recent call last)\",",
                                        "-      \"\\u001b[1;32m<ipython-input-1-7c149f3fc288>\\u001b[0m in \\u001b[0;36m<module>\\u001b[1;34m\\u001b[0m\\n\\u001b[0;32m      3\\u001b[0m \\u001b[1;32mfrom\\u001b[0m \\u001b[0mazure\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mstorage\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mblob\\u001b[0m \\u001b[1;32mimport\\u001b[0m \\u001b[0mContainerClient\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m      4\\u001b[0m \\u001b[0mcount\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[1;36m0\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m----> 5\\u001b[1;33m \\u001b[0mcontainer\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mContainerClient\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mfrom_connection_string\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mconn_str\\u001b[0m\\u001b[1;33m=\\u001b[0m\\u001b[0mSTORAGECONNSTRING\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0mcontainer_name\\u001b[0m\\u001b[1;33m=\\u001b[0m\\u001b[0mknow_store_container\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[0;32m      6\\u001b[0m \\u001b[0mblob_list\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mcontainer\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mlist_blobs\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m      7\\u001b[0m \\u001b[1;32mfor\\u001b[0m \\u001b[0mblob\\u001b[0m \\u001b[1;32min\\u001b[0m \\u001b[0mblob_list\\u001b[0m\\u001b[1;33m:\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\",",
                                        "-      \"\\u001b[1;31mNameError\\u001b[0m: name 'STORAGECONNSTRING' is not defined\"",
                                        "-     ]",
                                        "-    }",
                                        "-   ],",
                                        "+   \"outputs\": [],",
                                        "    \"source\": [",
                                        "     \"from IPython.display import Image\\n\",",
                                        "     \"import base64\\n\",",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "a2d4365eba95c1ab72c70841088439d0cdce53d6",
                    "link": "https://github.com/Azure-Samples/azure-search-python-samples/commit/a2d4365eba95c1ab72c70841088439d0cdce53d6",
                    "files": [
                        {
                            "name": "Quickstart/v11/README.md",
                            "content": {
                                "current": "---\npage_type: sample\nlanguages:\n  - python\nname: Quickstart in Python - Jupyter Notebook\nproducts:\n  - azure\n  - azure-cognitive-search\ndescription: |\n  Learn how to create, load, and query an Azure Cognitive Search index using Python and the latest-version REST APIs\nurlFragment: python-sample-quickstart\n---\n\n# Quickstart sample for Azure Cognitive Search using Python\n\n![Flask sample MIT license badge](https://img.shields.io/badge/license-MIT-green.svg)\n\nDemonstrates using Python and the Azure SDK for Python to create an Azure Cognitive Search index, load it with documents, and execute a few queries. The index is modeled on a subset of the Hotels dataset, reduced for readability and comprehension. Index definition and documents are included in the code.\n\nThis sample is a Jupyter Python3 .ipynb file to perform the actions against the Cognitive Search service.\n\n## Contents\n\n| File/folder | Description |\n|-------------|-------------|\n| `azure-search-quickstart.ipynb`       | Jupyter Python notebook. |\n| `.gitignore` | Define what to ignore at commit time. |\n| `CONTRIBUTING.md` | Guidelines for contributing to the sample. |\n| `README.md` | This README file. |\n| `LICENSE`   | The license for the sample. |\n\n## Prerequisites\n\n- [Anaconda 3.x](https://www.anaconda.com/distribution/#download-section) providing Python 3.x and Jupyter Notebooks\n- [Azure Cognitive Search service](https://docs.microsoft.com/azure/search/search-create-service-portal)\n- Azure Cognitive Search SDK for Python (pip install azure-search-documents --pre)\n\n## Setup\n\n1. Clone or download this sample repository.\n2. Extract contents if the download is a zip file. Make sure the files are read-write.\n\n## Running the sample\n1. On the Windows Start menu, select Anaconda3, and then select Jupyter Notebook.\n1. Open the azure-search-quickstart.ipynb file in Jupyter Notebook\n1. Replace <service_name> <admin_key> and <query_key> with the service and api-key details of your search service\n1. Run each step individually\n\n## Next steps\n\nYou can learn more about Azure Cognitive Search on the [official documentation site](https://docs.microsoft.com/azure/search).\n",
                                "diffs": [
                                    [
                                        " ",
                                        " ![Flask sample MIT license badge](https://img.shields.io/badge/license-MIT-green.svg)",
                                        " ",
                                        "-Demonstrates connecting to Azure Cognitive Search, creating and loading an index consisting of fictitious hotel data, and running queries. A Jupyter Python Notebook is used to run this code. Calls to Azure Cognitive Search are through the REST APIs.",
                                        "+Demonstrates using Python and the Azure SDK for Python to create an Azure Cognitive Search index, load it with documents, and execute a few queries. The index is modeled on a subset of the Hotels dataset, reduced for readability and comprehension. Index definition and documents are included in the code.",
                                        " ",
                                        "-This sample is a Jupyter Python3 .ipynb file used in [Quickstart: Create and query a search index using a Jupyter Python notebook](https://docs.microsoft.com/azure/search/search-get-started-python)",
                                        "+This sample is a Jupyter Python3 .ipynb file to perform the actions against the Cognitive Search service.",
                                        " ",
                                        " ## Contents",
                                        " "
                                    ],
                                    [
                                        " ",
                                        " - [Anaconda 3.x](https://www.anaconda.com/distribution/#download-section) providing Python 3.x and Jupyter Notebooks",
                                        " - [Azure Cognitive Search service](https://docs.microsoft.com/azure/search/search-create-service-portal)",
                                        "+- Azure Cognitive Search SDK for Python (pip install azure-search-documents --pre)",
                                        " ",
                                        " ## Setup",
                                        " "
                                    ],
                                    [
                                        " ## Running the sample",
                                        " 1. On the Windows Start menu, select Anaconda3, and then select Jupyter Notebook.",
                                        " 1. Open the azure-search-quickstart.ipynb file in Jupyter Notebook",
                                        "-1. Replace <YOUR-SERVICE-NAME> and <YOUR-ADMIN-API-KEY> with the service and api-key details of your search service",
                                        "+1. Replace <service_name> <admin_key> and <query_key> with the service and api-key details of your search service",
                                        " 1. Run each step individually",
                                        " ",
                                        " ## Next steps",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "d0eb94c7eabb236d70afb5263cc1fb482f89b02f",
                    "link": "https://github.com/Azure-Samples/azure-search-python-samples/commit/d0eb94c7eabb236d70afb5263cc1fb482f89b02f",
                    "files": [
                        {
                            "name": "Image-Processing/BFR_Sample_Rest.ipynb",
                            "content": {
                                "current": "{\n \"cells\": [\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"# Azure Cognitive Search sample \\n\",\n    \"## Passing Images as Binary File References\\n\",\n    \"\\n\",\n    \"Skillsets that pass images to custom skills use a binary file reference to serialize the images before passing them to other skills. This sample demonstrates how skills can be configured to accept image inputs and return image outputs. \\n\",\n    \"\\n\",\n    \"While the other steps in this skillset, such as OCR and redaction, have relevance, the key takeaway is configuring and passing binary file references. The custom skill does the heavy lifting. Each input record contains an image that is serialized as a `Base64` encoded string. The input also contains the layout text of image, as returned from the OCR skill. Upon receiving the input, the custom skill segments the image into smaller images based on the coordinates of the layout text. It then returns a list of images, each `Base64` encoded, back to the skillset. While this is not a particularly realistic exercise, it demonstrates techniques that could be leverage in more interesting ways, such as in a [Custom Vision](https://github.com/Azure-Samples/azure-search-power-skills/tree/master/Vision/CustomVision) skill that performs useful inferences on your images.\\n\",\n    \"\\n\",\n    \"For more information about the skills used in this example, see [OCR skill](https://docs.microsoft.com/azure/search/cognitive-search-skill-ocr), [PII skill](https://docs.microsoft.com/azure/search/cognitive-search-skill-pii-detection), and [custom skills](https://docs.microsoft.com/azure/search/cognitive-search-custom-skill-web-api).\\n\",\n    \"\\n\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"### Prerequisites \\n\",\n    \"\\n\",\n    \"+ [Azure subscription](https://Azure.Microsoft.com/subscription/free)\\n\",\n    \"+ [Azure Cognitive Search service](https://docs.microsoft.com/azure/search/search-create-service-portal) (get the full service endpoint and an admin API key)\\n\",\n    \"+ [Azure Blob storage service](https://docs.microsoft.com/azure/storage/common/storage-account-create) (get the connection string)\\n\",\n    \"+ [Python 3.6+](https://www.python.org/downloads/)\\n\",\n    \"+ [Jupyter Notebook](https://jupyter.org/install)\\n\",\n    \"+ [Visual Studio Code](https://code.visualstudio.com/download) with the [Azure Functions extension](https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-azurefunctions) and the [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)\\n\",\n    \"\\n\",\n    \"If you adapt this exercise to include more image files, add [Azure Cognitive Services](https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account).\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"### Configure inputs\\n\",\n    \"\\n\",\n    \"Follow the instructions in the [readme](https://github.com/Azure-Samples/azure-search-python-samples/blob/master/Image-Processing/README.md) to set up the inputs used by the indexer, data source, and skillset.\\n\",\n    \"\\n\",\n    \"Besides connection information, you will need a blob container for the sample JPEG file, and a function app that provides the code used in the custom skill. All the necessary files are provided. The `SplitImage` folder contains an Azure function that will accept an input in the [custom skill format](https://docs.microsoft.com/azure/search/cognitive-search-custom-skill-web-api#skill-inputs). \"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"### Create the enrichment pipeline\\n\",\n    \"In the next few steps, configure the Cognitive Search enrichment pipeline, creating these objects on your search service:\\n\",\n    \"1. Create an indexer data source. The data source references a blob storage container with at least one image file.\\n\",\n    \"2. Create a skillset that performs image analysis. The skillset references a Cognitive Services account, a custom function app, and a knowledge store.\\n\",\n    \"3. Create a search index.\\n\",\n    \"4. Create an indexer to move documents from the data source to the index while invoking the skillset.\\n\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"%pip install azure-storage-blob\\n\",\n    \"\\n\",\n    \"import os\\n\",\n    \"import json\\n\",\n    \"import requests\\n\",\n    \"\\n\",\n    \"# Configure all required variables. Placeholder values are expressed in upper case. Replace each with the credentials from your accounts.\\n\",\n    \"\\n\",\n    \"# Replace with a full search service endpoint the format \\\"https://searchservicename.search.windows.net\\\"\\n\",\n    \"# Paste in an admin API key. Both values can be obtained from the Azure portal.\\n\",\n    \"search_service = \\\"https://<YOUR-SEARCH-SERVICE-NAME>.search.windows.net\\\"\\n\",\n    \"api_key = '<YOUR-SEARCH-ADMIN-API-KEY>'\\n\",\n    \"\\n\",\n    \"# Leave the API version and content_type as they are listed here.\\n\",\n    \"api_version = '2020-06-30'\\n\",\n    \"content_type = 'application/json'\\n\",\n    \"\\n\",\n    \"# Replace with a Cognitive Services account name and all-in-one key.\\n\",\n    \"# Required only if processing more than 20 documents\\n\",\n    \"cog_svcs_key = '' \\n\",\n    \"cog_svcs_acct = '' \\n\",\n    \"\\n\",\n    \"# Your Azure Storage account will be used for the datasource input and knowledge store output\\n\",\n    \"# Replace with a connection string to your Azure Storage account. \\n\",\n    \"STORAGECONNSTRING = \\\"DefaultEndpointsProtocol=https;AccountName=<YOUR-STORAGE-ACCOUNT>;AccountKey=<YOUR-ACCOUNT-KEY>;EndpointSuffix=core.windows.net\\\"\\n\",\n    \"# Replace with the blob container containing your image file\\n\",\n    \"datasource_container = 'bfr-sample' \\n\",\n    \"# Container where the sliced images will be projected to. Use the value provided below.\\n\",\n    \"know_store_container = \\\"obfuscated\\\"\\n\",\n    \"\\n\",\n    \"# Replace with the Function HTTP URL of the app deployed to Azure Function\\n\",\n    \"skill_uri = \\\"<YOUR-FUNCTION-APP-URL>\\\"\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Create a helper function to invoke the Cognitive Search REST APIs. \"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"def construct_Url(service, resource, resource_name, action, api_version):\\n\",\n    \"    if resource_name:\\n\",\n    \"        \\n\",\n    \"        if action:\\n\",\n    \"            return service + '/'+ resource + '/' + resource_name + '/' + action + '?api-version=' + api_version\\n\",\n    \"        else:\\n\",\n    \"            return service + '/'+ resource + '/' + resource_name + '?api-version=' + api_version\\n\",\n    \"    else:\\n\",\n    \"        return service + '/'+ resource + '?api-version=' + api_version\\n\",\n    \"\\n\",\n    \"\\n\",\n    \"headers = {'api-key': api_key, 'Content-Type': content_type}\\n\",\n    \"# Test out the URLs to ensure that the configuration works\\n\",\n    \"print(construct_Url(search_service, \\\"indexes\\\", \\\"bfr-sample\\\", \\\"analyze\\\", api_version))\\n\",\n    \"print(construct_Url(search_service, \\\"indexes\\\", \\\"bfr-sample\\\", None, api_version))\\n\",\n    \"print(construct_Url(search_service, \\\"indexers\\\", None, None, api_version))\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"#### Create the data source\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"container = datasource_container\\n\",\n    \"\\n\",\n    \"datsource_def = {\\n\",\n    \"    'name': f'{datasource_container}-ds',\\n\",\n    \"    'description': f'Datasource containing files with sample images',\\n\",\n    \"    'type': 'azureblob',\\n\",\n    \"    'subtype': None,\\n\",\n    \"    'credentials': {\\n\",\n    \"        'connectionString': f'{STORAGECONNSTRING}'\\n\",\n    \"    },\\n\",\n    \"    'container': {\\n\",\n    \"        'name': f'{datasource_container}'\\n\",\n    \"    },\\n\",\n    \"\\n\",\n    \"}\\n\",\n    \"r = requests.post(construct_Url(search_service, \\\"datasources\\\", None, None, api_version), data=json.dumps(datsource_def),  headers=headers)\\n\",\n    \"print(r)\\n\",\n    \"res = r.json()\\n\",\n    \"print(json.dumps(res, indent=2))\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"#### Create the skillset\\n\",\n    \"\\n\",\n    \"Binary image references are passed as inputs and outputs, starting with \\\"/document/normalized_images/*\\\" in the OCR skill. OCR output is text and layout. Only the text component is passed to PIIDectection for analysis and redactive formatting. In the custom skill, the image is sliced into component parts (text and layout from OCR, and PII entity created in the PIIDetection step).\\n\",\n    \"\\n\",\n    \"Besides skills, a skillset also specifies the knowledge store projections that shape the final output in Blob storage.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"skillset_name = f'{datasource_container}-ss'\\n\",\n    \"skillset_def = {\\n\",\n    \"    'name': f'{skillset_name}',\\n\",\n    \"    'description': 'Skillset to demonstrate passing images to custom skills',\\n\",\n    \"    'skills': [\\n\",\n    \"        {\\n\",\n    \"          \\\"@odata.type\\\": \\\"#Microsoft.Skills.Vision.OcrSkill\\\",\\n\",\n    \"          \\\"name\\\": \\\"OCRSkill\\\",\\n\",\n    \"          \\\"description\\\": \\\"OCR Skill\\\",\\n\",\n    \"          \\\"context\\\": \\\"/document/normalized_images/*\\\",\\n\",\n    \"          \\\"textExtractionAlgorithm\\\": None,\\n\",\n    \"          \\\"lineEnding\\\": \\\"Space\\\",\\n\",\n    \"          \\\"defaultLanguageCode\\\": \\\"en\\\",\\n\",\n    \"          \\\"detectOrientation\\\": True,\\n\",\n    \"          \\\"inputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"image\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/normalized_images/*\\\"\\n\",\n    \"            }\\n\",\n    \"          ],\\n\",\n    \"          \\\"outputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"text\\\",\\n\",\n    \"              \\\"targetName\\\": \\\"text\\\"\\n\",\n    \"            },\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"layoutText\\\",\\n\",\n    \"              \\\"targetName\\\": \\\"layoutText\\\"\\n\",\n    \"            }\\n\",\n    \"          ]\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"          \\\"@odata.type\\\": \\\"#Microsoft.Skills.Text.PIIDetectionSkill\\\",\\n\",\n    \"          \\\"name\\\": \\\"#1\\\",\\n\",\n    \"          \\\"description\\\": \\\"\\\",\\n\",\n    \"          \\\"context\\\": \\\"/document/merged_content\\\",\\n\",\n    \"          \\\"defaultLanguageCode\\\": \\\"en\\\",\\n\",\n    \"          \\\"minimumPrecision\\\": 0.5,\\n\",\n    \"          \\\"maskingMode\\\": \\\"replace\\\",\\n\",\n    \"          \\\"maskingCharacter\\\": \\\"*\\\",\\n\",\n    \"          \\\"inputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"text\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/merged_content\\\"\\n\",\n    \"            }\\n\",\n    \"          ],\\n\",\n    \"          \\\"outputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"piiEntities\\\",\\n\",\n    \"              \\\"targetName\\\": \\\"pii_entities\\\"\\n\",\n    \"            },\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"maskedText\\\",\\n\",\n    \"              \\\"targetName\\\": \\\"masked_text\\\"\\n\",\n    \"            }\\n\",\n    \"          ]\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"          \\\"@odata.type\\\": \\\"#Microsoft.Skills.Custom.WebApiSkill\\\",\\n\",\n    \"          \\\"name\\\": \\\"ImageSkill\\\",\\n\",\n    \"          \\\"description\\\": \\\"Segment Images\\\",\\n\",\n    \"          \\\"context\\\": \\\"/document/normalized_images/*\\\",\\n\",\n    \"          \\\"uri\\\": f'{skill_uri}',\\n\",\n    \"          \\\"httpMethod\\\": \\\"POST\\\",\\n\",\n    \"          \\\"timeout\\\": \\\"PT30S\\\",\\n\",\n    \"          \\\"batchSize\\\": 1000,\\n\",\n    \"          \\\"degreeOfParallelism\\\": 1,\\n\",\n    \"          \\\"inputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"image\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/normalized_images/*\\\"\\n\",\n    \"            },\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"layoutText\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/normalized_images/*/layoutText\\\"\\n\",\n    \"            },\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"pii_entities\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/merged_content/pii_entities\\\"\\n\",\n    \"            }\\n\",\n    \"          ],\\n\",\n    \"          \\\"outputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"slices\\\",\\n\",\n    \"              \\\"targetName\\\": \\\"slices\\\"\\n\",\n    \"            },\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"original\\\",\\n\",\n    \"              \\\"targetName\\\": \\\"original\\\"\\n\",\n    \"            }\\n\",\n    \"          ],\\n\",\n    \"          \\\"httpHeaders\\\": {}\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"          \\\"@odata.type\\\": \\\"#Microsoft.Skills.Text.MergeSkill\\\",\\n\",\n    \"          \\\"name\\\": \\\"MergeSkill\\\",\\n\",\n    \"          \\\"description\\\": \\\"Merge results from cracking with OCR text\\\",\\n\",\n    \"          \\\"context\\\": \\\"/document\\\",\\n\",\n    \"          \\\"insertPreTag\\\": \\\" \\\",\\n\",\n    \"          \\\"insertPostTag\\\": \\\" \\\",\\n\",\n    \"          \\\"inputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"text\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/content\\\"\\n\",\n    \"            },\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"itemsToInsert\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/normalized_images/*/text\\\"\\n\",\n    \"            },\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"offsets\\\",\\n\",\n    \"              \\\"source\\\": \\\"/document/normalized_images/*/contentOffset\\\"\\n\",\n    \"            }\\n\",\n    \"          ],\\n\",\n    \"          \\\"outputs\\\": [\\n\",\n    \"            {\\n\",\n    \"              \\\"name\\\": \\\"mergedText\\\",\\n\",\n    \"              \\\"targetName\\\": \\\"merged_content\\\"\\n\",\n    \"            }\\n\",\n    \"          ]\\n\",\n    \"        }\\n\",\n    \"        \\n\",\n    \"    ],\\n\",\n    \"    'cognitiveServices':None,\\n\",\n    \"    'knowledgeStore': {\\n\",\n    \"        'storageConnectionString': f'{STORAGECONNSTRING}',\\n\",\n    \"        'projections': [\\n\",\n    \"          {\\n\",\n    \"        \\\"tables\\\": [],\\n\",\n    \"        \\\"objects\\\": [\\n\",\n    \"          {\\n\",\n    \"            \\\"storageContainer\\\": \\\"layout\\\",\\n\",\n    \"            \\\"referenceKeyName\\\": None,\\n\",\n    \"            \\\"generatedKeyName\\\": \\\"layoutKey\\\",\\n\",\n    \"            \\\"source\\\": \\\"/document/normalized_images/*/layoutText\\\",\\n\",\n    \"            \\\"sourceContext\\\": None,\\n\",\n    \"            \\\"inputs\\\": []\\n\",\n    \"          }\\n\",\n    \"        ],\\n\",\n    \"        \\\"files\\\": [\\n\",\n    \"          {\\n\",\n    \"            \\\"storageContainer\\\": \\\"slices\\\",\\n\",\n    \"            \\\"referenceKeyName\\\": None,\\n\",\n    \"            \\\"generatedKeyName\\\": \\\"slicesKey\\\",\\n\",\n    \"            \\\"source\\\": \\\"/document/normalized_images/*/slices/*\\\",\\n\",\n    \"            \\\"sourceContext\\\": None,\\n\",\n    \"            \\\"inputs\\\": []\\n\",\n    \"          },\\n\",\n    \"          {\\n\",\n    \"            \\\"storageContainer\\\": \\\"images\\\",\\n\",\n    \"            \\\"referenceKeyName\\\": None,\\n\",\n    \"            \\\"generatedKeyName\\\": \\\"imageKey\\\",\\n\",\n    \"            \\\"source\\\": \\\"/document/normalized_images/*\\\",\\n\",\n    \"            \\\"sourceContext\\\": None,\\n\",\n    \"            \\\"inputs\\\": []\\n\",\n    \"          },\\n\",\n    \"          {\\n\",\n    \"            \\\"storageContainer\\\": f'{know_store_container}',\\n\",\n    \"            \\\"referenceKeyName\\\": None,\\n\",\n    \"            \\\"generatedKeyName\\\": \\\"originalKey\\\",\\n\",\n    \"            \\\"source\\\": \\\"/document/normalized_images/*/original\\\",\\n\",\n    \"            \\\"sourceContext\\\": None,\\n\",\n    \"            \\\"inputs\\\": []\\n\",\n    \"          }\\n\",\n    \"        ]\\n\",\n    \"      }\\n\",\n    \"        ]\\n\",\n    \"    }\\n\",\n    \"}\\n\",\n    \"\\n\",\n    \"\\n\",\n    \"r = requests.put(construct_Url(search_service, \\\"skillsets\\\", skillset_name, None, api_version), data=json.dumps(skillset_def),  headers=headers)\\n\",\n    \"print(r)\\n\",\n    \"\\n\",\n    \"res = r.json()\\n\",\n    \"print(json.dumps(res, indent=2))\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"#### Create the index\\n\",\n    \"\\n\",\n    \"A search index isn't used in this exercise, but because it's an indexer requirement, you'll create one anyway. You can use Search Explorer in the Azure portal to query the index on your own. It will contain text extracted from the image.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"indexname = f'{datasource_container}-idx'\\n\",\n    \"index_def = {\\n\",\n    \"    \\\"name\\\":f'{indexname}',\\n\",\n    \"      \\\"defaultScoringProfile\\\": \\\"\\\",\\n\",\n    \"    \\\"fields\\\": [\\n\",\n    \"        {\\n\",\n    \"          \\\"name\\\": \\\"image_text\\\",\\n\",\n    \"          \\\"type\\\": \\\"Collection(Edm.String)\\\",\\n\",\n    \"          \\\"facetable\\\": False,\\n\",\n    \"          \\\"filterable\\\": False,\\n\",\n    \"          \\\"retrievable\\\": True,\\n\",\n    \"          \\\"searchable\\\": True,\\n\",\n    \"          \\\"analyzer\\\": \\\"standard.lucene\\\",\\n\",\n    \"          \\\"indexAnalyzer\\\": None,\\n\",\n    \"          \\\"searchAnalyzer\\\": None,\\n\",\n    \"          \\\"synonymMaps\\\": [],\\n\",\n    \"          \\\"fields\\\": []\\n\",\n    \"        },\\n\",\n    \"  \\n\",\n    \"        {\\n\",\n    \"          \\\"name\\\": \\\"content\\\",\\n\",\n    \"          \\\"type\\\": \\\"Edm.String\\\",\\n\",\n    \"          \\\"facetable\\\": False,\\n\",\n    \"          \\\"filterable\\\": False,\\n\",\n    \"          \\\"key\\\": False,\\n\",\n    \"          \\\"retrievable\\\": True,\\n\",\n    \"          \\\"searchable\\\": True,\\n\",\n    \"          \\\"sortable\\\": False,\\n\",\n    \"          \\\"analyzer\\\": \\\"standard.lucene\\\",\\n\",\n    \"          \\\"indexAnalyzer\\\": None,\\n\",\n    \"          \\\"searchAnalyzer\\\": None,\\n\",\n    \"          \\\"synonymMaps\\\": [],\\n\",\n    \"          \\\"fields\\\": []\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"metadata_storage_content_type\\\",\\n\",\n    \"            \\\"type\\\": \\\"Edm.String\\\",\\n\",\n    \"            \\\"searchable\\\": False,\\n\",\n    \"            \\\"filterable\\\": False,\\n\",\n    \"            \\\"retrievable\\\": True,\\n\",\n    \"            \\\"sortable\\\": False,\\n\",\n    \"            \\\"facetable\\\": False,\\n\",\n    \"            \\\"key\\\": False,\\n\",\n    \"            \\\"indexAnalyzer\\\": None,\\n\",\n    \"            \\\"searchAnalyzer\\\": None,\\n\",\n    \"            \\\"analyzer\\\": None,\\n\",\n    \"            \\\"synonymMaps\\\": []\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"metadata_storage_size\\\",\\n\",\n    \"            \\\"type\\\": \\\"Edm.Int64\\\",\\n\",\n    \"            \\\"searchable\\\": False,\\n\",\n    \"            \\\"filterable\\\": False,\\n\",\n    \"            \\\"retrievable\\\": True,\\n\",\n    \"            \\\"sortable\\\": False,\\n\",\n    \"            \\\"facetable\\\": False,\\n\",\n    \"            \\\"key\\\": False,\\n\",\n    \"            \\\"indexAnalyzer\\\": None,\\n\",\n    \"            \\\"searchAnalyzer\\\": None,\\n\",\n    \"            \\\"analyzer\\\": None,\\n\",\n    \"            \\\"synonymMaps\\\": []\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"metadata_storage_last_modified\\\",\\n\",\n    \"            \\\"type\\\": \\\"Edm.DateTimeOffset\\\",\\n\",\n    \"            \\\"searchable\\\": False,\\n\",\n    \"            \\\"filterable\\\": False,\\n\",\n    \"            \\\"retrievable\\\": True,\\n\",\n    \"            \\\"sortable\\\": False,\\n\",\n    \"            \\\"facetable\\\": False,\\n\",\n    \"            \\\"key\\\": False,\\n\",\n    \"            \\\"indexAnalyzer\\\": None,\\n\",\n    \"            \\\"searchAnalyzer\\\": None,\\n\",\n    \"            \\\"analyzer\\\": None,\\n\",\n    \"            \\\"synonymMaps\\\": []\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"metadata_storage_content_md5\\\",\\n\",\n    \"            \\\"type\\\": \\\"Edm.String\\\",\\n\",\n    \"            \\\"searchable\\\": False,\\n\",\n    \"            \\\"filterable\\\": False,\\n\",\n    \"            \\\"retrievable\\\": True,\\n\",\n    \"            \\\"sortable\\\": False,\\n\",\n    \"            \\\"facetable\\\": False,\\n\",\n    \"            \\\"key\\\": False,\\n\",\n    \"            \\\"indexAnalyzer\\\": None,\\n\",\n    \"            \\\"searchAnalyzer\\\": None,\\n\",\n    \"            \\\"analyzer\\\": None,\\n\",\n    \"            \\\"synonymMaps\\\": []\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"metadata_storage_name\\\",\\n\",\n    \"            \\\"type\\\": \\\"Edm.String\\\",\\n\",\n    \"            \\\"searchable\\\": False,\\n\",\n    \"            \\\"filterable\\\": False,\\n\",\n    \"            \\\"retrievable\\\": True,\\n\",\n    \"            \\\"sortable\\\": False,\\n\",\n    \"            \\\"facetable\\\": False,\\n\",\n    \"            \\\"key\\\": False,\\n\",\n    \"            \\\"indexAnalyzer\\\": None,\\n\",\n    \"            \\\"searchAnalyzer\\\": None,\\n\",\n    \"            \\\"analyzer\\\": None,\\n\",\n    \"            \\\"synonymMaps\\\": []\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"metadata_storage_path\\\",\\n\",\n    \"            \\\"type\\\": \\\"Edm.String\\\",\\n\",\n    \"            \\\"searchable\\\": False,\\n\",\n    \"            \\\"filterable\\\": False,\\n\",\n    \"            \\\"retrievable\\\": True,\\n\",\n    \"            \\\"sortable\\\": False,\\n\",\n    \"            \\\"facetable\\\": False,\\n\",\n    \"            \\\"key\\\": True,\\n\",\n    \"            \\\"indexAnalyzer\\\": None,\\n\",\n    \"            \\\"searchAnalyzer\\\": None,\\n\",\n    \"            \\\"analyzer\\\": None,\\n\",\n    \"            \\\"synonymMaps\\\": []\\n\",\n    \"        },\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"metadata_storage_file_extension\\\",\\n\",\n    \"            \\\"type\\\": \\\"Edm.String\\\",\\n\",\n    \"            \\\"searchable\\\": False,\\n\",\n    \"            \\\"filterable\\\": False,\\n\",\n    \"            \\\"retrievable\\\": True,\\n\",\n    \"            \\\"sortable\\\": False,\\n\",\n    \"            \\\"facetable\\\": False,\\n\",\n    \"            \\\"key\\\": False,\\n\",\n    \"            \\\"indexAnalyzer\\\": None,\\n\",\n    \"            \\\"searchAnalyzer\\\": None,\\n\",\n    \"            \\\"analyzer\\\": None,\\n\",\n    \"            \\\"synonymMaps\\\": []\\n\",\n    \"        }\\n\",\n    \"        \\n\",\n    \"    ],\\n\",\n    \"    \\\"scoringProfiles\\\": [],\\n\",\n    \"    \\\"corsOptions\\\": None,\\n\",\n    \"    \\\"suggesters\\\": [\\n\",\n    \"        {\\n\",\n    \"            \\\"name\\\": \\\"sg\\\",\\n\",\n    \"            \\\"searchMode\\\": \\\"analyzingInfixMatching\\\",\\n\",\n    \"            \\\"sourceFields\\\": [\\n\",\n    \"                \\\"metadata_storage_path\\\"\\n\",\n    \"            ]\\n\",\n    \"        }\\n\",\n    \"    ],\\n\",\n    \"    \\\"analyzers\\\": [],\\n\",\n    \"    \\\"tokenizers\\\": [],\\n\",\n    \"    \\\"tokenFilters\\\": [],\\n\",\n    \"    \\\"charFilters\\\": [],\\n\",\n    \"    \\\"encryptionKey\\\": None,\\n\",\n    \"    \\\"similarity\\\": None\\n\",\n    \"}\\n\",\n    \"r = requests.post(construct_Url(search_service, \\\"indexes\\\", None, None, api_version), data=json.dumps(index_def),  headers=headers)\\n\",\n    \"print(r)\\n\",\n    \"res = r.json()\\n\",\n    \"print(json.dumps(res, indent=2))\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"#### Create the indexer\\n\",\n    \"\\n\",\n    \"This step creates the index (you'll run it in a separate step). At run time, the indexer connects to the data source, invokes the skillset, and outputs results. This indexer is scheduled to run every two hours. \"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"indexername = f'{datasource_container}-idxr'\\n\",\n    \"indexer_def = {\\n\",\n    \"    \\\"name\\\": f'{indexername}',\\n\",\n    \"    \\\"description\\\": \\\"Indexer to enrich hotel reviews\\\",\\n\",\n    \"    \\\"dataSourceName\\\": f'{datasource_container}-ds',\\n\",\n    \"    \\\"skillsetName\\\": f'{datasource_container}-ss',\\n\",\n    \"    \\\"targetIndexName\\\": f'{datasource_container}-idx',\\n\",\n    \"    \\\"disabled\\\": None,\\n\",\n    \"    \\\"schedule\\\": {\\n\",\n    \"        \\\"interval\\\": \\\"PT2H\\\",\\n\",\n    \"        \\\"startTime\\\": \\\"0001-01-01T00:00:00Z\\\"\\n\",\n    \"      },\\n\",\n    \"    \\\"parameters\\\": {\\n\",\n    \"    \\\"batchSize\\\": None,\\n\",\n    \"    \\\"maxFailedItems\\\": 0,\\n\",\n    \"    \\\"maxFailedItemsPerBatch\\\": 0,\\n\",\n    \"    \\\"base64EncodeKeys\\\": None,\\n\",\n    \"    \\\"configuration\\\": {\\n\",\n    \"      \\\"dataToExtract\\\": \\\"contentAndMetadata\\\",\\n\",\n    \"      \\\"parsingMode\\\": \\\"default\\\",\\n\",\n    \"      \\\"imageAction\\\": \\\"generateNormalizedImages\\\"\\n\",\n    \"        }\\n\",\n    \"    },\\n\",\n    \"   \\\"fieldMappings\\\": [\\n\",\n    \"    {\\n\",\n    \"      \\\"sourceFieldName\\\": \\\"metadata_storage_path\\\",\\n\",\n    \"      \\\"targetFieldName\\\": \\\"metadata_storage_path\\\",\\n\",\n    \"      \\\"mappingFunction\\\": {\\n\",\n    \"        \\\"name\\\": \\\"base64Encode\\\"\\n\",\n    \"      }\\n\",\n    \"    }\\n\",\n    \"    ],\\n\",\n    \"    \\\"outputFieldMappings\\\": [\\n\",\n    \"        {\\n\",\n    \"          \\\"sourceFieldName\\\": \\\"/document/normalized_images/*/text\\\",\\n\",\n    \"          \\\"targetFieldName\\\": \\\"image_text\\\"\\n\",\n    \"        }\\n\",\n    \"    ]\\n\",\n    \"}\\n\",\n    \"r = requests.post(construct_Url(search_service, \\\"indexers\\\", None, None, api_version), data=json.dumps(indexer_def), headers=headers)\\n\",\n    \"print(r)\\n\",\n    \"res = r.json()\\n\",\n    \"print(json.dumps(res, indent=2))\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"#### Run the indexer\\n\",\n    \"\\n\",\n    \"This step executes the indexer you just created. It will take several minutes to process.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"r = requests.post(construct_Url(search_service, \\\"indexers\\\", indexername, \\\"run\\\", api_version), data=None,  headers=headers)\\n\",\n    \"print(r)\\n\",\n    \"#res = r.json()\\n\",\n    \"#print(json.dumps(res, indent=2))\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"#### Check status\\n\",\n    \"\\n\",\n    \"The final step in this exercise is to view results. Before doing so, make sure the lastResult status message indicates \\\"success\\\", which means that the indexer completed its work successfully, and the revised image now exists in blob storage.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"r = requests.get(construct_Url(search_service, \\\"indexers\\\", indexername, \\\"status\\\", api_version), data=None,  headers=headers)\\n\",\n    \"print(r)\\n\",\n    \"res = r.json()\\n\",\n    \"print(res[\\\"lastResult\\\"])\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"### View Results\\n\",\n    \"The following cell downloads the output image so that you can verify skillset success. If you get an error, check the indexer status to make sure the indexer is finished and that there were no errors.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"from IPython.display import Image\\n\",\n    \"import base64\\n\",\n    \"from azure.storage.blob import ContainerClient\\n\",\n    \"count = 0\\n\",\n    \"container = ContainerClient.from_connection_string(conn_str=STORAGECONNSTRING, container_name=know_store_container)\\n\",\n    \"blob_list = container.list_blobs()\\n\",\n    \"for blob in blob_list:\\n\",\n    \"    print(blob.name + '\\\\n')\\n\",\n    \"    blob_client = container.get_blob_client(blob.name)\\n\",\n    \"    with open(\\\"image\\\" + str(count) + \\\".jpg\\\", \\\"wb\\\") as my_blob:\\n\",\n    \"                download_stream = blob_client.download_blob()\\n\",\n    \"                my_blob.write(download_stream.readall())\\n\",\n    \"    count = count + 1\\n\",\n    \"    if(count == 3):\\n\",\n    \"        break\\n\",\n    \"\\n\",\n    \"Image(filename='image0.jpg') \"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"### Next Steps\\n\",\n    \"In this exercise, you learned how to pass images into skills and return the modified images to the skillset for further processing. \\n\",\n    \"\\n\",\n    \"As a next step, you can start from scratch and build a [custom AML Skill](https://docs.microsoft.com/azure/search/cognitive-search-aml-skill) to perform inferences on images, or use the Custom Vision service to build a skill. The power skills github repository has a [sample custom vision skill](https://github.com/Azure-Samples/azure-search-power-skills/tree/master/Vision/CustomVision) to help you get started.\"\n   ]\n  }\n ],\n \"metadata\": {\n  \"kernelspec\": {\n   \"display_name\": \"Python 3\",\n   \"language\": \"python\",\n   \"name\": \"python3\"\n  },\n  \"language_info\": {\n   \"codemirror_mode\": {\n    \"name\": \"ipython\",\n    \"version\": 3\n   },\n   \"file_extension\": \".py\",\n   \"mimetype\": \"text/x-python\",\n   \"name\": \"python\",\n   \"nbconvert_exporter\": \"python\",\n   \"pygments_lexer\": \"ipython3\",\n   \"version\": \"3.7.3\"\n  }\n },\n \"nbformat\": 4,\n \"nbformat_minor\": 2\n}\n",
                                "diffs": [
                                    [
                                        "    \"metadata\": {},",
                                        "    \"outputs\": [],",
                                        "    \"source\": [",
                                        "-    \"!pip install azure-storage-blob\\n\",",
                                        "+    \"%pip install azure-storage-blob\\n\",",
                                        "     \"\\n\",",
                                        "     \"import os\\n\",",
                                        "     \"import json\\n\",",
                                        "     \"import requests\\n\",",
                                        "     \"\\n\",",
                                        "-    \"# Configure all required variables for this exerences. Replace each with the credentials from your accounts.\\n\",",
                                        "+    \"# Configure all required variables. Placeholder values are expressed in upper case. Replace each with the credentials from your accounts.\\n\",",
                                        "     \"\\n\",",
                                        "     \"# Replace with a full search service endpoint the format \\\"https://searchservicename.search.windows.net\\\"\\n\",",
                                        "     \"# Paste in an admin API key. Both values can be obtained from the Azure portal.\\n\","
                                    ],
                                    [
                                        "     \"know_store_container = \\\"obfuscated\\\"\\n\",",
                                        "     \"\\n\",",
                                        "     \"# Replace with the Function HTTP URL of the app deployed to Azure Function\\n\",",
                                        "-    \"skill_uri = \\\"<YOUR-FUNCTION-APP-URL\\\"\"",
                                        "+    \"skill_uri = \\\"<YOUR-FUNCTION-APP-URL>\\\"\"",
                                        "    ]",
                                        "   },",
                                        "   {"
                                    ],
                                    [
                                        "     \"\\n\",",
                                        "     \"As a next step, you can start from scratch and build a [custom AML Skill](https://docs.microsoft.com/azure/search/cognitive-search-aml-skill) to perform inferences on images, or use the Custom Vision service to build a skill. The power skills github repository has a [sample custom vision skill](https://github.com/Azure-Samples/azure-search-power-skills/tree/master/Vision/CustomVision) to help you get started.\"",
                                        "    ]",
                                        "-  },",
                                        "-  {",
                                        "-   \"cell_type\": \"code\",",
                                        "-   \"execution_count\": null,",
                                        "-   \"metadata\": {},",
                                        "-   \"outputs\": [],",
                                        "-   \"source\": []",
                                        "   }",
                                        "  ],",
                                        "  \"metadata\": {",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "Image-Processing/README.md",
                            "content": {
                                "current": "---\npage_type: sample\nlanguages:\n  - python\n  - REST\nname: Image processing in Python\nproducts:\n  - azure\n  - azure-cognitive-search\ndescription: |\n  Skillsets in Cognitive Search can process images and extract text, making that content usable in other scenarios. This sample demonstrates an image file workflow, using OCR and redaction of personal information.\nurlFragment: python-sample-image-processing\n---\n\n# Image Processing Sample\n\nCognitive Search can annotate images with text, or images with other images, to create searchable or analyzable text. This sample focuses on a specific aspect of image analysis in a Cognitive Search pipeline: passing images to a custom skill, and return images back to the skillset for further processing.\n\nIn this demonstration, you'll use a sample JPEG file, services and tools, and fully formulated requests in a notebook to perform the following tasks:\n\n1. Crack a JPEG file from Blob Storage and scrape the image for text, using the [Optical Character Recognition (OCR) skill](https://docs.microsoft.com/azure/search/cognitive-search-skill-ocr) in Cognitive Search.\n1. Analyze the resulting text for personal information, such as phone numbers, using the [PII skill](https://docs.microsoft.com/azure/search/cognitive-search-skill-pii-detection).\n1. Split the text into smaller units and blur the units that contain phone numbers. Use a [custom skill](https://docs.microsoft.com/azure/search/cognitive-search-custom-skill-web-api) for this task.\n1. Reconstitute the image in Blob storage. Use the [TextMerge skill](https://docs.microsoft.com/azure/search/cognitive-search-skill-textmerger) for this step.\n\nPost-OCR, the skillset runs the extracted text through the PII detection skill to identify personal information (phone numbers). The custom skill then obfuscates the phone numbers by accepting as inputs the image, the layout text from  OCR step, and the identified personal information. Output of the custom skill is the image with obfuscated sections. The output is then returned to the skillset and projected to the knowledge store.\n\nThe source input and resulting output are stored in Azure Blob Storage, so you will need a storage account to run this sample.\n\nPredefined skills, such as OCR skill, are backed by Cognitive Services. You will need the Cognitive Services account name for this tutorial, but because the number of transformations is limited, there is no charge to your account.\n\nCustom skills must be hosted as a URL-accessible module. This tutorial uses Azure Functions to satisfy this requirement, but you could use another mechanism for your own solutions.\n\nIn this sample, skillset output is sent to a [knowledge store](https://docs.microsoft.com/azure/search/knowledge-store-concept-intro) in Azure Storage. Because knowledge store is not yet supported in the [**azure-search-documents**](https://docs.microsoft.com/python/api/overview/azure/search-documents-readme) python library, the [Search REST APIs](https://docs.microsoft.com/rest/api/searchservice/) are used instead.\n\n## Prerequisites\n\n+ [Azure subscription](https://Azure.Microsoft.com/subscription/free)\n+ [Azure Cognitive Search](https://docs.microsoft.com/azure/search/search-create-service-portal) (get the full service endpoint and an admin API key)\n+ [Azure Storage](https://docs.microsoft.com/azure/storage/common/storage-account-create) (get the connection string)\n+ [Azure Cognitive Services](https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account) (get the account name)\n+ [Python 3.6+](https://www.python.org/downloads/)\n+ [Visual Studio Code](https://code.visualstudio.com/download) with the [Azure Functions extension](https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-azurefunctions) and the [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)\n\n## Configure the components\n\nBefore you open the notebook, assemble the resources that are referenced by the skillset.\n\n1. Download the **azure-search-python-samples** repository and extract its contents. \n\n1. Open the **image-processing** sample folder to find the files used in this sample.\n\n### In Azure portal\n\n1. Navigate to Azure Storage and set up the data source. Create a container named \"brf-sample\", and then upload the sample JPEG file (microsoft.jpg) from the sample folder.\n\n1. From **Access keys**, copy the Azure Storage connection string and paste it into NotePad.\n\n1. Navigate to your search service, copy the search endpoint (http://<SERVICE-NAME>.search.windows.net) and an admin API key.\n\n1. Navigate to Cognitive Services, copy the account name. \n\n1. Create a function app. Provide a function app name and be sure to choose Python for the run time stack. In the next step, you'll choose this app when deploying the custom skill. \n\n   ![Create function app example](media/function-app-example.png)\n\n### In Visual Studio Code\n\n1. Set up the function app that contains the custom code. In Visual Studio Code, navigate to the **image-processing** sample folder.\n\n1. Right-click the **SplitImage** folder and select **Deploy to Function App**. You'll be prompted to select the function app you created in the previous step. You might also be prompted to sign in to Azure if you're not already.\n\n   ![Deploy as function](media/image-process-split-image-deploy-function-app.png)\n\n1. Monitor notifications in the Output window (**View** > **Output**) for a \"Deployment successful\" message.\n\n1. Still in Visual Studio Code, switch to **Azure** explorer.\n\n1. Open **Resources**, your subscription folder, **Function App**, and find the app you just deployed.\n\n   ![Verify ImageSkill function is deployed](media/image-skill-published-function-app.png)\n\n1. In the Functions folder, right-click **ImageSkill HTTP**, and then copy the function URL. Save it in Notepad.\n\n   ![Copy function URL](media/image-process-function-url.png)\n\n## Run the Python code in the notebook\n\n1. Open the BFR_Sample_Rest.ipynb file in Jupyter Notebook.\n\n1. In the first cell, paste in the following information:\n\n   * search service endpoint\n   * search service admin API key\n   * Azure Storage connection string\n   * Cognitive Services account name\n   * Blob container that contains the JPEG\n   * Function app URL\n\n1. Run each cell.\n\n## Validation\n\nOnce the indexer completes, use the Azure portal and Storage explorer in your Azure Storage account to find the final output. You will see a container `obfuscated` in the knowledge store that contains the same image you started with, but with the phone number redacted. For comparison, the original image is stored in a container `images`.\n",
                                "diffs": [
                                    [
                                        "   - azure",
                                        "   - azure-cognitive-search",
                                        " description: |",
                                        "-  Skillsets in Cognitive Search can process images, making that content usable in other scenarios. This sample demonstrates an image file workflow, using OCR and redaction of personal information.",
                                        "+  Skillsets in Cognitive Search can process images and extract text, making that content usable in other scenarios. This sample demonstrates an image file workflow, using OCR and redaction of personal information.",
                                        " urlFragment: python-sample-image-processing",
                                        " ---",
                                        " "
                                    ],
                                    [
                                        " ",
                                        " Cognitive Search can annotate images with text, or images with other images, to create searchable or analyzable text. This sample focuses on a specific aspect of image analysis in a Cognitive Search pipeline: passing images to a custom skill, and return images back to the skillset for further processing.",
                                        " ",
                                        "-In this demonstration, you will use a sample JPEG file, services and tools, and fully formulated requests in notebook to perform the following tasks:",
                                        "+In this demonstration, you'll use a sample JPEG file, services and tools, and fully formulated requests in a notebook to perform the following tasks:",
                                        " ",
                                        "-1. Crack a sample source JPG file from Blob storage and scrape the image for text, using the [Optical Character Recognition (OCR) skill](https://docs.microsoft.com/azure/search/cognitive-search-skill-ocr) in Cognitive Search.",
                                        "+1. Crack a JPEG file from Blob Storage and scrape the image for text, using the [Optical Character Recognition (OCR) skill](https://docs.microsoft.com/azure/search/cognitive-search-skill-ocr) in Cognitive Search.",
                                        " 1. Analyze the resulting text for personal information, such as phone numbers, using the [PII skill](https://docs.microsoft.com/azure/search/cognitive-search-skill-pii-detection).",
                                        " 1. Split the text into smaller units and blur the units that contain phone numbers. Use a [custom skill](https://docs.microsoft.com/azure/search/cognitive-search-custom-skill-web-api) for this task.",
                                        " 1. Reconstitute the image in Blob storage. Use the [TextMerge skill](https://docs.microsoft.com/azure/search/cognitive-search-skill-textmerger) for this step.",
                                        " ",
                                        " Post-OCR, the skillset runs the extracted text through the PII detection skill to identify personal information (phone numbers). The custom skill then obfuscates the phone numbers by accepting as inputs the image, the layout text from  OCR step, and the identified personal information. Output of the custom skill is the image with obfuscated sections. The output is then returned to the skillset and projected to the knowledge store.",
                                        " ",
                                        "-The source input and resulting output are stored in Azure Blob storage, so you will need a storage account to complete this tutorial.",
                                        "+The source input and resulting output are stored in Azure Blob Storage, so you will need a storage account to run this sample.",
                                        " ",
                                        " Predefined skills, such as OCR skill, are backed by Cognitive Services. You will need the Cognitive Services account name for this tutorial, but because the number of transformations is limited, there is no charge to your account.",
                                        " "
                                    ],
                                    [
                                        " ## Prerequisites",
                                        " ",
                                        " + [Azure subscription](https://Azure.Microsoft.com/subscription/free)",
                                        "-+ [Azure Cognitive Search service](https://docs.microsoft.com/azure/search/search-create-service-portal) (get the full service endpoint and an admin API key)",
                                        "-+ [Azure Blob storage service](https://docs.microsoft.com/azure/storage/common/storage-account-create) (get the connection string)",
                                        "++ [Azure Cognitive Search](https://docs.microsoft.com/azure/search/search-create-service-portal) (get the full service endpoint and an admin API key)",
                                        "++ [Azure Storage](https://docs.microsoft.com/azure/storage/common/storage-account-create) (get the connection string)",
                                        " + [Azure Cognitive Services](https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account) (get the account name)",
                                        " + [Python 3.6+](https://www.python.org/downloads/)",
                                        "-+ [Jupyter Notebook](https://jupyter.org/install)",
                                        " + [Visual Studio Code](https://code.visualstudio.com/download) with the [Azure Functions extension](https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-azurefunctions) and the [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)",
                                        " ",
                                        " ## Configure the components"
                                    ],
                                    [
                                        " ",
                                        " ### In Azure portal",
                                        " ",
                                        "-1. Set up the data source. In Azure portal, in Azure Blob storage, create a container named \"brf-sample\", and then upload the sample JPEG file (microsoft.jpg) from the sample folder.",
                                        "+1. Navigate to Azure Storage and set up the data source. Create a container named \"brf-sample\", and then upload the sample JPEG file (microsoft.jpg) from the sample folder.",
                                        " ",
                                        "-1. From **Keys**, copy the Azure Storage connection string and paste it into NotePad.",
                                        "+1. From **Access keys**, copy the Azure Storage connection string and paste it into NotePad.",
                                        " ",
                                        " 1. Navigate to your search service, copy the search endpoint (http://<SERVICE-NAME>.search.windows.net) and an admin API key.",
                                        " ",
                                        " 1. Navigate to Cognitive Services, copy the account name. ",
                                        " ",
                                        "+1. Create a function app. Provide a function app name and be sure to choose Python for the run time stack. In the next step, you'll choose this app when deploying the custom skill. ",
                                        "+",
                                        "+   ![Create function app example](media/function-app-example.png)",
                                        "+",
                                        " ### In Visual Studio Code",
                                        " ",
                                        "-1. Set up the function app that contains the custom code. In Visual Studio code, navigate to the **image-processing** sample folder.",
                                        "+1. Set up the function app that contains the custom code. In Visual Studio Code, navigate to the **image-processing** sample folder.",
                                        " ",
                                        "-1. Right-click the **SplitImage** folder and select **Deploy to Function App**. You will be prompted for a subscription, region, and other properties that are required to set up the app.",
                                        "+1. Right-click the **SplitImage** folder and select **Deploy to Function App**. You'll be prompted to select the function app you created in the previous step. You might also be prompted to sign in to Azure if you're not already.",
                                        " ",
                                        "    ![Deploy as function](media/image-process-split-image-deploy-function-app.png)",
                                        " ",
                                        " 1. Monitor notifications in the Output window (**View** > **Output**) for a \"Deployment successful\" message.",
                                        " ",
                                        "-1. Still in Visual Studio Code, switch to **Azure: Function** explorer.",
                                        "+1. Still in Visual Studio Code, switch to **Azure** explorer.",
                                        "+",
                                        "+1. Open **Resources**, your subscription folder, **Function App**, and find the app you just deployed.",
                                        " ",
                                        "-1. Open the subscription folder and find the app you just deployed.",
                                        "+   ![Verify ImageSkill function is deployed](media/image-skill-published-function-app.png)",
                                        " ",
                                        "-1. Open the Functions folder, right-click **ImageSkill HTTP**, and then copy the function URL. Save it Notepad.",
                                        "+1. In the Functions folder, right-click **ImageSkill HTTP**, and then copy the function URL. Save it in Notepad.",
                                        " ",
                                        "    ![Copy function URL](media/image-process-function-url.png)",
                                        " ",
                                        ""
                                    ]
                                ]
                            }
                        },
                        {
                            "name": "Image-Processing/SplitImage/host.json",
                            "content": {
                                "current": "{\n  \"version\": \"2.0\",\n  \"logging\": {\n    \"applicationInsights\": {\n      \"samplingSettings\": {\n        \"isEnabled\": true,\n        \"excludedTypes\": \"Request\"\n      }\n    }\n  },\n  \"extensionBundle\": {\n    \"id\": \"Microsoft.Azure.Functions.ExtensionBundle\",\n    \"version\": \"[2.*, 3.0.0)\"\n  }\n}",
                                "diffs": [
                                    [
                                        "   },",
                                        "   \"extensionBundle\": {",
                                        "     \"id\": \"Microsoft.Azure.Functions.ExtensionBundle\",",
                                        "-    \"version\": \"[1.*, 2.0.0)\"",
                                        "+    \"version\": \"[2.*, 3.0.0)\"",
                                        "   }",
                                        "-}",
                                        "+}",
                                        "\\ No newline at end of file",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "b763ef6551720481473d594eb4477974a3169b4a",
                    "link": "https://github.com/Azure-Samples/azure-search-python-samples/commit/b763ef6551720481473d594eb4477974a3169b4a",
                    "files": [
                        {
                            "name": "Quickstart/v11/azure-search-quickstart.ipynb",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        "    \"outputs\": [],",
                                        "    \"source\": [",
                                        "     \"# Uncomment the next line if you need to install the azure-search-documents client library:\\n\",",
                                        "-    \"# !pip install azure-search-documents --pre\\n\",",
                                        "+    \"# %pip install azure-search-documents --pre\\n\",",
                                        "     \"\\n\",",
                                        "     \"# This sample uses version: 11.1.0\\n\",",
                                        "-    \"!pip show azure-search-documents\\n\",",
                                        "+    \"%pip show azure-search-documents\\n\",",
                                        "     \"\\n\",",
                                        "     \"import os\\n\",",
                                        "     \"from azure.core.credentials import AzureKeyCredential\\n\","
                                    ],
                                    [
                                        "    ]",
                                        "   },",
                                        "   {",
                                        "+   \"attachments\": {},",
                                        "    \"cell_type\": \"markdown\",",
                                        "    \"metadata\": {},",
                                        "    \"source\": ["
                                    ],
                                    [
                                        "    ]",
                                        "   },",
                                        "   {",
                                        "+   \"attachments\": {},",
                                        "    \"cell_type\": \"markdown\",",
                                        "    \"metadata\": {},",
                                        "    \"source\": ["
                                    ],
                                    [
                                        "    ]",
                                        "   },",
                                        "   {",
                                        "+   \"attachments\": {},",
                                        "    \"cell_type\": \"markdown\",",
                                        "    \"metadata\": {},",
                                        "    \"source\": ["
                                    ],
                                    [
                                        "    ]",
                                        "   },",
                                        "   {",
                                        "+   \"attachments\": {},",
                                        "    \"cell_type\": \"markdown\",",
                                        "    \"metadata\": {},",
                                        "    \"source\": ["
                                    ],
                                    [
                                        "    ]",
                                        "   },",
                                        "   {",
                                        "+   \"attachments\": {},",
                                        "    \"cell_type\": \"markdown\",",
                                        "    \"metadata\": {},",
                                        "    \"source\": ["
                                    ],
                                    [
                                        "    ]",
                                        "   },",
                                        "   {",
                                        "+   \"attachments\": {},",
                                        "    \"cell_type\": \"markdown\",",
                                        "    \"metadata\": {},",
                                        "    \"source\": ["
                                    ],
                                    [
                                        "    ]",
                                        "   },",
                                        "   {",
                                        "+   \"attachments\": {},",
                                        "    \"cell_type\": \"markdown\",",
                                        "    \"metadata\": {},",
                                        "    \"source\": ["
                                    ],
                                    [
                                        "    ]",
                                        "   },",
                                        "   {",
                                        "+   \"attachments\": {},",
                                        "    \"cell_type\": \"markdown\",",
                                        "    \"metadata\": {},",
                                        "    \"source\": ["
                                    ],
                                    [
                                        "    \"cell_type\": \"markdown\",",
                                        "    \"metadata\": {},",
                                        "    \"source\": [",
                                        "-    \"In the next query, add search_fields to scope query matching to a single field. If you're using a newer version of the client library, search_fields is an array. Add brackets around 'HotelName' if you get an error.\"",
                                        "+    \"In the next query, add search_fields to scope query matching to a single field. In newer versions of the client library, search_fields is an array. \"",
                                        "    ]",
                                        "   },",
                                        "   {"
                                    ],
                                    [
                                        "    \"metadata\": {},",
                                        "    \"outputs\": [],",
                                        "    \"source\": [",
                                        "-    \"results =  search_client.search(search_text=\\\"sublime\\\", search_fields='HotelName', select='HotelId,HotelName')\\n\",",
                                        "+    \"results =  search_client.search(search_text=\\\"sublime\\\", search_fields=['HotelName'], select='HotelId,HotelName')\\n\",",
                                        "     \"\\n\",",
                                        "     \"for result in results:\\n\",",
                                        "     \"    print(\\\"{}: {}\\\".format(result[\\\"HotelId\\\"], result[\\\"HotelName\\\"]))\"",
                                        "    ]",
                                        "   },",
                                        "   {",
                                        "+   \"attachments\": {},",
                                        "    \"cell_type\": \"markdown\",",
                                        "    \"metadata\": {},",
                                        "    \"source\": ["
                                    ],
                                    [
                                        "    ]",
                                        "   },",
                                        "   {",
                                        "+   \"attachments\": {},",
                                        "    \"cell_type\": \"markdown\",",
                                        "    \"metadata\": {},",
                                        "    \"source\": ["
                                    ],
                                    [
                                        "    ]",
                                        "   },",
                                        "   {",
                                        "+   \"attachments\": {},",
                                        "    \"cell_type\": \"markdown\",",
                                        "    \"metadata\": {},",
                                        "    \"source\": ["
                                    ],
                                    [
                                        "    ]",
                                        "   },",
                                        "   {",
                                        "+   \"attachments\": {},",
                                        "    \"cell_type\": \"markdown\",",
                                        "    \"metadata\": {},",
                                        "    \"source\": ["
                                    ],
                                    [
                                        "    ]",
                                        "   },",
                                        "   {",
                                        "+   \"attachments\": {},",
                                        "    \"cell_type\": \"markdown\",",
                                        "    \"metadata\": {},",
                                        "    \"source\": [",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "1f116d8582c5b30853e9532a0f0ea2ad3cf59975",
                    "link": "https://github.com/Azure-Samples/azure-search-python-samples/commit/1f116d8582c5b30853e9532a0f0ea2ad3cf59975",
                    "files": [
                        {
                            "name": ".github/workflows/azure-static-web-apps-blue-forest-02fdcc91e.yml",
                            "content": {
                                "current": "name: Azure Static Web Apps CI/CD\r\n\r\non:\r\n  push:\r\n    branches:\r\n      - main\r\n  pull_request:\r\n    types: [opened, synchronize, reopened, closed]\r\n    branches:\r\n      - main\r\n\r\njobs:\r\n  build_and_deploy_job:\r\n    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')\r\n    runs-on: ubuntu-latest\r\n    name: Build and Deploy Job\r\n    steps:\r\n      - uses: actions/checkout@v3\r\n        with:\r\n          submodules: true\r\n      - name: Build And Deploy\r\n        id: builddeploy\r\n        uses: Azure/static-web-apps-deploy@v1\r\n        with:\r\n          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_BLUE_FOREST_02FDCC91E }}\r\n          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)\r\n          action: \"upload\"\r\n          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######\r\n          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig\r\n          app_location: \"search-website-functions-v4/client\" # App source code path\r\n          api_location: \"api\" # Api source code path - optional\r\n          output_location: \"build\" # Built app content directory - optional\r\n          ###### End of Repository/Build Configurations ######\r\n\r\n  close_pull_request_job:\r\n    if: github.event_name == 'pull_request' && github.event.action == 'closed'\r\n    runs-on: ubuntu-latest\r\n    name: Close Pull Request Job\r\n    steps:\r\n      - name: Close Pull Request\r\n        id: closepullrequest\r\n        uses: Azure/static-web-apps-deploy@v1\r\n        with:\r\n          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_BLUE_FOREST_02FDCC91E }}\r\n          action: \"close\"\r\n",
                                "diffs": [
                                    [
                                        "+name: Azure Static Web Apps CI/CD",
                                        "+",
                                        "+on:",
                                        "+  push:",
                                        "+    branches:",
                                        "+      - main",
                                        "+  pull_request:",
                                        "+    types: [opened, synchronize, reopened, closed]",
                                        "+    branches:",
                                        "+      - main",
                                        "+",
                                        "+jobs:",
                                        "+  build_and_deploy_job:",
                                        "+    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')",
                                        "+    runs-on: ubuntu-latest",
                                        "+    name: Build and Deploy Job",
                                        "+    steps:",
                                        "+      - uses: actions/checkout@v3",
                                        "+        with:",
                                        "+          submodules: true",
                                        "+      - name: Build And Deploy",
                                        "+        id: builddeploy",
                                        "+        uses: Azure/static-web-apps-deploy@v1",
                                        "+        with:",
                                        "+          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_BLUE_FOREST_02FDCC91E }}",
                                        "+          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)",
                                        "+          action: \"upload\"",
                                        "+          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######",
                                        "+          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig",
                                        "+          app_location: \"search-website-functions-v4/client\" # App source code path",
                                        "+          api_location: \"api\" # Api source code path - optional",
                                        "+          output_location: \"build\" # Built app content directory - optional",
                                        "+          ###### End of Repository/Build Configurations ######",
                                        "+",
                                        "+  close_pull_request_job:",
                                        "+    if: github.event_name == 'pull_request' && github.event.action == 'closed'",
                                        "+    runs-on: ubuntu-latest",
                                        "+    name: Close Pull Request Job",
                                        "+    steps:",
                                        "+      - name: Close Pull Request",
                                        "+        id: closepullrequest",
                                        "+        uses: Azure/static-web-apps-deploy@v1",
                                        "+        with:",
                                        "+          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_BLUE_FOREST_02FDCC91E }}",
                                        "+          action: \"close\"",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "message": "",
                    "sha": "770ebce1e967c55f361d939030684eb4f95b8d33",
                    "link": "https://github.com/Azure-Samples/azure-search-python-samples/commit/770ebce1e967c55f361d939030684eb4f95b8d33",
                    "files": [
                        {
                            "name": "Tutorial-RAG/Tutorial-rag.ipynb",
                            "content": {
                                "current": "<binary content>",
                                "diffs": [
                                    [
                                        "     \"\\n\",",
                                        "     \"Provide the endpoints you collected in a previous step. You can leave the API keys empty if you enabled role-based authentication. Otherwise, if you can't use roles, provide API keys for each resource.\\n\",",
                                        "     \"\\n\",",
                                        "-    \"The Azure AI multiservce key must be provided even if you're using roles. The key isn't used on the connection, but it's currently used for billing purposes.\"",
                                        "+    \"The Azure AI multiservice account is used for skills processing. The multiservice account key must be provided, even if you're using role-based access control. The key isn't used on the connection, but it's currently used for billing purposes.\"",
                                        "    ]",
                                        "   },",
                                        "   {"
                                    ],
                                    [
                                        "     \"\\n\",",
                                        "     \"# Create a data source \\n\",",
                                        "     \"indexer_client = SearchIndexerClient(endpoint=AZURE_SEARCH_SERVICE, credential=credential)\\n\",",
                                        "-    \"container = SearchIndexerDataContainer(name=\\\"nasatext\\\")\\n\",",
                                        "+    \"container = SearchIndexerDataContainer(name=\\\"nasa-ebooks-pdfs-all\\\")\\n\",",
                                        "     \"data_source_connection = SearchIndexerDataSourceConnection(\\n\",",
                                        "     \"    name=\\\"py-rag-tutorial-ds\\\",\\n\",",
                                        "     \"    type=\\\"azureblob\\\",\\n\","
                                    ],
                                    [
                                        "     \"\\n\",",
                                        "     \"This script sends a query, the query response, and a prompt to an LLM for chat completion. This time, the response is created using generative AI.\\n\",",
                                        "     \"\\n\",",
                                        "-    \"For more information about this step, its behaviors, and changing the settings, revisit [Search and generate answers](https://learn.microsoft.com/azure/search/tutorial-rag-build-solution-query) in the tutorial.\"",
                                        "+    \"We broke this task out into three separate tasks: set up the clients, set up the search query, call the LLM and get the response. For more information about this step, its behaviors, and changing the settings, revisit [Search and generate answers](https://learn.microsoft.com/azure/search/tutorial-rag-build-solution-query) in the tutorial.\"",
                                        "    ]",
                                        "   },",
                                        "   {"
                                    ],
                                    [
                                        "     \"from azure.search.documents import SearchClient\\n\",",
                                        "     \"from openai import AzureOpenAI\\n\",",
                                        "     \"\\n\",",
                                        "+    \"# Set up the Azure OpenAI client\\n\",",
                                        "     \"token_provider = get_bearer_token_provider(credential, \\\"https://cognitiveservices.azure.com/.default\\\")\\n\",",
                                        "     \"openai_client = AzureOpenAI(\\n\",",
                                        "     \"     api_version=\\\"2024-06-01\\\",\\n\","
                                    ],
                                    [
                                        "     \"\\n\",",
                                        "     \"deployment_name = \\\"gpt-4o\\\"\\n\",",
                                        "     \"\\n\",",
                                        "+    \"# Set up the Azure Azure AI Search client\\n\",",
                                        "     \"search_client = SearchClient(\\n\",",
                                        "     \"     endpoint=AZURE_SEARCH_SERVICE,\\n\",",
                                        "     \"     index_name=index_name,\\n\","
                                    ],
                                    [
                                        "    \"metadata\": {},",
                                        "    \"outputs\": [],",
                                        "    \"source\": [",
                                        "-    \"# Provide the query. Notice it's sent to both the search engine and the LLM.\\n\",",
                                        "-    \"# The query sent to the search engine is hybrid. Keyword search on \\\"query\\\". Text-to-vector conversion for vector search.\\n\",",
                                        "+    \"# Provide the search query. \\n\",",
                                        "+    \"# It's hybrid: a keyword search on \\\"query\\\", with text-to-vector conversion for \\\"vector_query\\\".\\n\",",
                                        "+    \"# The vector query finds 50 nearest neighbor matches in the search index\\n\",",
                                        "     \"query=\\\"What's the NASA earth book about?\\\"\\n\",",
                                        "     \"vector_query = VectorizableTextQuery(text=query, k_nearest_neighbors=50, fields=\\\"text_vector\\\")\\n\",",
                                        "     \"\\n\",",
                                        "     \"# Set up the search results and the chat thread.\\n\",",
                                        "     \"# Retrieve the selected fields from the search index related to the question.\\n\",",
                                        "+    \"# Search results are limited to the top 5 matches. Limiting top can help you stay under LLM quotas.\\n\",",
                                        "     \"search_results = search_client.search(\\n\",",
                                        "     \"    search_text=query,\\n\",",
                                        "     \"    vector_queries= [vector_query],\\n\","
                                    ],
                                    [
                                        "     \"    top=5,\\n\",",
                                        "     \")\\n\",",
                                        "     \"\\n\",",
                                        "-    \"# Newlines could be in the OCR'd content. Use a unique separator to make the sources distinct\\n\",",
                                        "+    \"# Newlines could be in the OCR'd content or in PDFs, as is the case for the sample PDFs used for this tutorial.\\n\",",
                                        "+    \"# Use a unique separator to make the sources distinct. \\n\",",
                                        "+    \"# We chose repeated equal signs (=) followed by a newline because it's unlikely the source documents contain this sequence.\\n\",",
                                        "     \"sources_formatted = \\\"=================\\\\n\\\".join([f'TITLE: {document[\\\"title\\\"]}, CONTENT: {document[\\\"chunk\\\"]}, LOCATIONS: {document[\\\"locations\\\"]}' for document in search_results])\\n\"",
                                        "    ]",
                                        "   },"
                                    ],
                                    [
                                        "     \"    SearchField(name=\\\"locations\\\", type=SearchFieldDataType.Collection(SearchFieldDataType.String), filterable=True),\\n\",",
                                        "     \"    SearchField(name=\\\"chunk_id\\\", type=SearchFieldDataType.String, key=True, sortable=True, filterable=True, facetable=True, analyzer_name=\\\"keyword\\\"),  \\n\",",
                                        "     \"    SearchField(name=\\\"chunk\\\", type=SearchFieldDataType.String, sortable=False, filterable=False, facetable=False),  \\n\",",
                                        "-    \"    SearchField(name=\\\"text_vector\\\", type=SearchFieldDataType.Collection(SearchFieldDataType.Single), vector_search_dimensions=1536, vector_search_profile_name=\\\"myHnswProfile\\\")\\n\",",
                                        "+    \"    SearchField(name=\\\"text_vector\\\", type=SearchFieldDataType.Collection(SearchFieldDataType.Single), vector_search_dimensions=1024, vector_search_profile_name=\\\"myHnswProfile\\\")\\n\",",
                                        "     \"    ]  \\n\",",
                                        "     \"  \\n\",",
                                        "     \"# Existing vector search configuration  \\n\","
                                    ],
                                    [
                                        "     \"            kind=\\\"azureOpenAI\\\",  \\n\",",
                                        "     \"            parameters=AzureOpenAIVectorizerParameters(  \\n\",",
                                        "     \"                resource_url=AZURE_OPENAI_ACCOUNT,  \\n\",",
                                        "-    \"                deployment_name=\\\"text-embedding-ada-002\\\",\\n\",",
                                        "-    \"                model_name=\\\"text-embedding-ada-002\\\"\\n\",",
                                        "+    \"                deployment_name=\\\"text-embedding-3-large\\\",\\n\",",
                                        "+    \"                model_name=\\\"text-embedding-3-large\\\"\\n\",",
                                        "     \"            ),\\n\",",
                                        "     \"        ),  \\n\",",
                                        "     \"    ], \\n\","
                                    ],
                                    [
                                        "     \"     azure_ad_token_provider=token_provider\\n\",",
                                        "     \" )\\n\",",
                                        "     \"\\n\",",
                                        "-    \"deployment_name = \\\"gpt-35-turbo\\\"\\n\",",
                                        "+    \"deployment_name = \\\"gpt-4o\\\"\\n\",",
                                        "     \"\\n\",",
                                        "     \"search_client = SearchClient(\\n\",",
                                        "     \"     endpoint=AZURE_SEARCH_SERVICE,\\n\","
                                    ],
                                    [
                                        "     \"\\\"\\\"\\\"\\n\",",
                                        "     \"\\n\",",
                                        "     \"# Queries are unchanged in this update\\n\",",
                                        "-    \"query=\\\"how much of earth is covered by water\\\"\\n\",",
                                        "-    \"vector_query = VectorizableTextQuery(text=query, k_nearest_neighbors=1, fields=\\\"text_vector\\\", exhaustive=True)\\n\",",
                                        "+    \"query=\\\"What's the NASA earth book about?\\\"\\n\",",
                                        "+    \"vector_query = VectorizableTextQuery(text=query, k_nearest_neighbors=1, fields=\\\"text_vector\\\")\\n\",",
                                        "     \"\\n\",",
                                        "     \"# Add query_type semantic and semantic_configuration_name\\n\",",
                                        "     \"# Add scoring_profile and scoring_parameters\\n\",",
                                        ""
                                    ]
                                ]
                            }
                        }
                    ]
                }
            ]
        }
    ]
}